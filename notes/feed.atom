<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AK#Notes</title>
  <subtitle>This my personal website where I post my notes about thing that I have learn.</subtitle>
  <link href="https://anzenkodo.github.io/notes/" />
  <link href="https://anzenkodo.github.io/notes/" rel="self" />
	<id>https://anzenkodo.github.io/notes/</id>
  <updated>2022-12-29T10:33:21.808Z</updated>
  <author>
    <name>Axel</name>
    <email>AnzenKodo@altmails.com</email>
  </author>
    <entry>
    <title>viva 6s sort</title>
    <link href="https://anzenkodo.github.io/notes/programming/android/viva-6s-sort.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/android/viva-6s-sort.html</id>
    <content type="html"><![CDATA[<h1>MAD VIVA</h1>
<h2>1) What is Android?</h2>
<p>Android is mobile OS based on modified version of Linux kernel and other open
source software, designed primarily for touchscreen mobile devices such as
smartphones and tablets.</p>
<h2>2) Enlist features of Android?</h2>
<ul>
<li><strong>Open Source</strong> - Android is open-source, which helps to develop customized
android version for future updates.</li>
<li><strong>Customizable</strong> - Anyone can customize the Android Platform.</li>
<li><strong>Connectivity</strong> - It provides GSM, CDMA, Bluetooth, WiFi etc.</li>
<li><strong>Storage</strong> - Many android devices support external storage through Micro SD
card.</li>
<li><strong>Widgets, Multi-Tasking, Multi-Touch, Media Support</strong></li>
</ul>
<h2>3) Explain Android architecture?</h2>
<ul>
<li>Android architecture contains different number of components to support any
android device needs.</li>
<li>The main components of Android architecture are following:
<ul>
<li><strong>Applications</strong> - Applications is the top layer of android architecture.
The pre-installed applications like will be installed on this layer only.</li>
<li><strong>Application framework</strong> - Application framework provides several important
classes which are used to create an Android application.</li>
<li><strong>Platform libraries</strong> - The platform libraries includes versions C/C++ core
libraries such as Media, Graphics, OpenGL etc. To provide a support for
android development.</li>
<li><strong>Linux Kernel</strong> - The Linux Kernel manages all the available drivers such
as display drivers, camera drivers, audio drivers, etc. Which are required
during the runtime.</li>
</ul>
</li>
</ul>
<h2>4) Explain Android SDK?</h2>
<ul>
<li>The Android software development kit(SDK) allows developers to create
applications for the Android platform. The Android SDK is the most important
software of Android which is installed.</li>
<li>The Android SDK provides to test application API libraries and emulator
documentation sample code developer tools and tutorials which helps us to
build and test the debug apps from Android.</li>
<li>Android SDK provides the tools and application programming interface(API) for
developers to create applications on the Android platform using Java
programming language.</li>
</ul>
<h2>5) What is Android AVD?</h2>
<ul>
<li>An AVD is an emulator configuration that enables to modules an actual device
by calling hardware and software option to be emulated by the Android
emulator.</li>
<li>The AVD manager is an interface that we can launch from android studio which
helps us to create and manage AVD.</li>
<li>An AVD contains hardware profile, system image, storage area, skin and other
properties.</li>
<li>AVD contains emulator for Wear OS, TV, Mobile Phones, Tables, Automotive.</li>
</ul>
<h3>Hardware profile</h3>
<ul>
<li>Hardware profile defines the characteristics of a device as shipped from the
factory of a device as shipped from the factory.</li>
<li>The AVD manager comes preloaded with certain hardware profile such as Pixel
device and we can define or customize the hardware profile as needed.</li>
</ul>
<h3>System image</h3>
<ul>
<li>A system image labelled with Google API includes access to Google Play
services.</li>
<li>A system image Labelled with Google Play logo in the Play Store includes the
Google Play Store apps and can access to the Google Play Services.</li>
</ul>
<h3>Storage Area</h3>
<ul>
<li>The AVD has dedicated storage area on our development machine.</li>
<li>It stores the devices data such as installed apps and settings, as well as
emulated and SD cards.</li>
<li>If needed we can use the AVD manager to wipe user data so that the devices has
the same data as if it was a new device.</li>
</ul>
<h2>6) What is emulator?</h2>
<p>The Android Emulator simulates Android devices on your computer so that you can
test your application on a variety of devices and Android API levels without
needing to have each physical device.</p>
<h2>7) Difference between JVM and DVM?</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android OS</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly…</td>
<td>The <code>.class</code> byte codes are optimize to <code>.odex</code> format before executing in DVM.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
</tbody>
</table>
<h2>8) What are activities?</h2>
<ul>
<li>Activates dictate the UI and handles the user interaction to the smartphone
screen.</li>
<li>Activates represent a single screen that user interact.</li>
</ul>
<h2>9) What are services?</h2>
<ul>
<li>There are Three types of services in Android:
<ul>
<li>Foreground service</li>
<li>Background service</li>
<li>Bound service</li>
</ul>
</li>
</ul>
<h3>Foreground service</h3>
<ul>
<li>A foreground service performs some operation that noticeable to the user.</li>
<li>Foreground services must display a Notification.</li>
<li>Foreground service continue running even when the user isn’t interacting with
the app.</li>
<li><strong>Example:</strong> An audio app would use a foreground service to play an audio
track.</li>
</ul>
<h3>Background Service</h3>
<ul>
<li>A background service performs an operating that isn’t directly noticed by
user.</li>
<li><strong>Example:</strong> If an app used a service to compact its storage, that would
usually be a background service.</li>
</ul>
<h3>Bound Service</h3>
<ul>
<li>A service is bound when an application component binds to it by calling
<code>bindService()</code>.</li>
<li>A bound service offers a client-server interface that allows components to
interact with the service, send requests, receive results, and even do so
across processes with Interprocess Communication(IPC).</li>
</ul>
<h2>10) What are intents?</h2>
<h3>Implicit intent</h3>
<p>The implicit intent is the intent where instead of defining the exact components
, you define the action that you want to perform for different activities.</p>
<h3>Explicit intent</h3>
<p>An explicit intent is an intent where you explicitly define the component that
needs to be called by Android System. An explicit intent is one that you use to
launch a specific app component, such as particular activity or service in your
app.</p>
<h2>11) Explain MainActivity, Manifest &amp; Layout file?</h2>
<h3>MainActivity</h3>
<p>The MainActivity.java file is automatically kept in main folder by Android
Studio all the classes will be available here and Android Studio will even
bundle together the package so that we can work with the file without having to
go through all the folders.</p>
<h3>Manifest</h3>
<p>Manifest file generated by Android Studio when we create a project. This file
contains the configuration parameters of a project such as permission services
and additional libraries.</p>
<h3>Layout</h3>
<p>Layout specifies the various widgets to be used in UI and the relationships
between such widgets and their containers. Layout files are stored in
<code>res-&gt;layout</code> in the Android application.</p>
<h2>12) What are different types of UI components?</h2>
<ul>
<li><code>TextView</code> - is a UI component that displays the text to the user  on the user display screen.</li>
<li><code>EditText</code> - is a UI control that allows the user to enter some
text.</li>
<li><code>Button</code> - is a UI that is used to perform some action as soon as the
user clicks on it.</li>
<li><code>ProgressBar</code> - are used to show progress of a task.</li>
</ul>
<h2>13) What are Layouts?</h2>
<ul>
<li><code>LinearLayout</code> - is a view group that aligns all children in a single
direction, vertically or horizontally.</li>
<li><code>AbsoluteLayout</code> - enables us to specify the exact location of its children.</li>
<li><code>TableLayout</code> - is a view that groups views into rows and columns.</li>
<li><code>RelativeLayout</code> - is a view group that displays child views in relative
positions.</li>
<li><code>FrameLayout</code> - is a placeholder on screen that we can use to display a single
view.</li>
</ul>
<h2>14) Define</h2>
<ul>
<li><code>TextView</code> - This control is used to display text to the user.</li>
<li><code>EditTextView</code> - EditText is a predefined subclass of TextView that includes
rich editing capabilities.</li>
<li><code>Button</code> - A push-button that can be pressed, or clicked, by the user to
perform an action.</li>
<li><code>ImageButton</code> - An ImageButton is an AbsoluteLayout which enables you to
specify the exact location of its children. This shows a button with an image
(instead of text) that can be pressed or clicked by the user.</li>
<li><code>CheckBox</code> - An on/off switch that can be toggled by the user. You should use
check box when presenting users with a group of selectable options that are
not mutually exclusive.</li>
</ul>
<h2>15) Explain</h2>
<ul>
<li><code>ListView</code> - List of scrollable items can be displayed in Android using
ListView. It helps you to displaying the data in the form of a scrollable list.</li>
<li><code>GridView</code> - It is a view group that display items in two dimensional
scrolling grid (rows and columns), the grid items are not necessarily
predetermined but they are automatically inserted to the layout using a
ListAdapter.</li>
<li><code>ImageView</code> - It is used to display an image file in application.</li>
<li><code>Scrollview</code> - It is a view group that is used to make vertically scrollable
views. A scroll view contains a single direct child only.</li>
</ul>
<h2>16) What is toast explain with example?</h2>
<ul>
<li>Toast is used to display information for a period of time.</li>
<li>It contains a message to be displayed quickly and disappears after specified period of time.</li>
<li>It does not block the user interaction.</li>
<li>Example:</li>
</ul>
<pre><code class="language-xml">Toast.makeText(getApplicationContext(),&quot;Hello Javatpoint&quot;,Toast.LENGTH_SHORT).show();
</code></pre>
<h2>17) Explain activity life cycle?</h2>
<ul>
<li><code>onCreate</code> - called when activity is first created.</li>
<li><code>onStart</code> - called when activity is becoming visible to the user.</li>
<li><code>onResume</code> - called when activity will start interacting with the user.</li>
<li><code>onPause</code> - called when activity is not visible to the user.</li>
<li><code>onStop</code> - called when activity is no longer visible to the user.</li>
<li><code>onRestart</code> - called after your activity is stopped, prior to start.</li>
<li><code>onDestroy</code> - called before the activity is destroyed.</li>
</ul>
<h2>18) Explain broadcast receivers?</h2>
<p>Broadcast Receivers simply respond to broadcast messages from other applications
or from the system itself. These messages are sometime called events or intents.</p>
<h3>Creating the Broadcast Receiver</h3>
<p>A broadcast receiver is implemented as a subclass of Broadcast Receiver class
and overriding the <code>onReceive()</code> method where each message is received as an
Intent object parameter.</p>
<h3>Registering Broadcast Receiver</h3>
<p>An application listens for specific broadcast intents by registering a broadcast
receiver in AndroidManifest.xml file. Consider we are going to register
My Receiver for system generated event <code>ACTION_BOOT_COMPLETED</code> which is fired
by the system once the Android system has completed the boot process.</p>
<h2>19) Explain content provider?</h2>
<ul>
<li>Android system allows the content provider to store the application data in
several ways.</li>
<li>Users can manage to store the application data like images, audio, videos, and
personal contact information by storing them in SQLite database, in files or
even on a network.</li>
<li>In order to share the data, content providers have certain permissions that
are used to grant or restrict the right to other applications to interfere
with the data.</li>
</ul>
<h2>20) What is sensors?</h2>
<ul>
<li>Most Android powered devices have built-in sensors that measure motion,
orientation, and various environmental conditions.</li>
<li>There are three type of sensors in Android:
<ul>
<li>Motion</li>
<li>Environmental</li>
<li>Position</li>
</ul>
</li>
</ul>
<h3>Motion</h3>
<p>These sensors measure acceleration forces and rotational forces along three axes
. This category includes accelerometers, gravity sensors, gyroscopes, and
rotational vector.</p>
<h3>Environmental</h3>
<p>These sensors measure various environmental parameters, such as ambient air
temperature and pressure, illumination, and humidity. This category includes
barometers, photometers, and thermometers.</p>
<h3>Position</h3>
<p>These sensors measure the physical position of a device. This category includes
orientation sensors and magnetometers.</p>
<h2>21) What is location based services?</h2>
<p><strong>Location Based Services:</strong> Location-Based Services(LBS) are present in Android
to provide you with features like current location detection, display of nearby
places, Geofencing, etc. It fetches the location using your device’s GPS, WiFi,
or Cellular Networks.</p>
<h2>22) What is Geo code and Reverse geo code?</h2>
<h3>Geo code</h3>
<p>Geocoding is the process of converting addresses (like a street address) into
geographic coordinates (like latitude and longitude), which you can use to place
markers on a map, or position the map.</p>
<h3>Reverse Geo code</h3>
<p>Reverse geocoding is the process of converting geographic coordinates into a
human-readable address.</p>
<h2>23) Enlist Steps to publish android application?</h2>
<ul>
<li><strong>Step 1:</strong> First generate signed apk of your Android App to publish it on Play Store.</li>
<li><strong>Step 2:</strong> Sign up for Google Play Console to publish and manage your Android App.</li>
<li><strong>Step 3:</strong> Now click on Create Application.</li>
<li><strong>Step 4:</strong> Now fill store listing details of your App which include Title, Short and Full description.</li>
<li><strong>Step 5:</strong> Now Click on ready on publish along with save draft and click on Manage release.</li>
<li><strong>Step 6:</strong> After Manage production click on edit release.</li>
<li><strong>Step 7:</strong> Now click on review.</li>
<li><strong>Step 8:</strong> After review click on Start Rollout to production.</li>
</ul>
<h2>24) What is date and time picker?</h2>
<h3><code>DatePicker</code></h3>
<ul>
<li>Date picker is widget used to select a date.</li>
<li>It allows to select data by day, month and year in your custom UI.</li>
<li>Methods of <code>DatePicker</code> in invokes <code>getDayOfMonth()</code>, <code>getMonth()</code>,
<code>getYear()</code>, <code>getFirstDayOfWeek()</code>.</li>
</ul>
<h3><code>TimePicker</code></h3>
<ul>
<li><code>TimePicker</code> is a widget used for selecting the time of the day in either
AM/PM mode or 24h mode.</li>
<li>The displayed time consist of hours, minutes and clock format.</li>
<li>Methods of <code>TimePicker</code> invokes <code>setCurrentHour()</code>, <code>setHour()</code>,
<code>setCurrentMinute()</code>, <code>getCurrentMinute()</code>.</li>
</ul>]]></content>
  </entry>
  <entry>
    <title>final</title>
    <link href="https://anzenkodo.github.io/notes/programming/android/final.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/android/final.html</id>
    <content type="html"><![CDATA[<h1>1. Attempt any FIVE of the following: 10</h1>
<h2>a) List any four features of Android operating system.</h2>
<ul>
<li>Open Source</li>
<li>Beautiul UI</li>
<li>Connectivity</li>
<li>Storage</li>
<li>Multi-Touch</li>
<li>Multi-Tasking</li>
<li>Multi-Language</li>
<li>Resizable widgets</li>
<li>Messaging</li>
<li>Media Support</li>
<li>Web Browser</li>
</ul>
<h2>b) Define Dalvik Virtual Machine (DVM).</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android Operating system.</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based virtual machine architecture.</td>
<td>It is based on register based virtual machine architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>c) List any four folders from directory structure of Android project and elaborate in one line.</h2>
<h3>Manifests Folder</h3>
<ul>
<li>Manifests folder contains AndroidManifest.xml for creating our android application.</li>
<li>This file contains information about our application such as the Android version, metadata, states package for Kotlin file, and other application components.</li>
<li>It acts as an intermediator between android OS and our application.</li>
</ul>
<h3>Java folder</h3>
<ul>
<li>The Java folder contains all the java and Kotlin source code (.java) files that we create during the app development, including other Test files.</li>
</ul>
<h3>Resource (res) folder</h3>
<ul>
<li>The resource folder is the most important folder because it contains all the non-code sources like images, XML layouts, and UI strings for our android application.</li>
</ul>
<h3>res/drawable folder</h3>
<ul>
<li>It contains the different types of images used for the development of the application.</li>
</ul>
<h2>d) List any four attributes of check box.</h2>
<ul>
<li>text - This is the Text to display.</li>
<li>id - This supplies an identifier name for this view.</li>
<li>visibility - This controls the initial visibility of the view.</li>
<li>editable - If set, specifies that this TextView has an input method.</li>
</ul>
<h2>e) Draw diagram of activity life cycle.</h2>
<pre><code>                             ┌┬────────┬┐
                             ││Activity││
                             ││launched││
                             └┴────┬───┴┘
                                   │
                              ┌────▼─────┐
         ┌────────────────────►onCreate()│
         │                    └────┬─────┘
         │                         │
         │                    ┌────▼────┐                    ┌───────────┐
         │                    │onStart()◄────────────────────┤onRestart()│
         │                    └────┬────┘                    └───────▲───┘
         │                         │                                 │
User navigates                ┌────▼─────┐                           │
to the activity               │onResume()◄───────────────┐           │
         │                    └────┬─────┘               │           │
         │                         │                     │           │
  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │
  ││App process││            ││Activity││                │           │
  ││killed     ││            ││Running ││                │           │
  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │
         │                         │                     │           │
         │                         ▼                     │           │
Apps with higher priority   Another activity comes   User returns    │
need memory                 into the foreground      to the activity │
         │                         │                     │           │
         │                         │                     │           │
         │                    ┌────▼────┐                │           │
         │                    │onPause()├────────────────┘           │
         │                    └────┬────┘                            │
         │                         │                                 │
         │                         │                                 │
         │                  The activity is                          │
         │                  no longer visible                        │
         │                         │                        User navigates
         │                         │                        to the activity
         │                    ┌────▼───┐                             │
         └────────────────────┤onStop()├─────────────────────────────┘
                              └────┬───┘
                                   │
                                   │
                            The activity is finishing or
                            being destroyed by the system
                                   │
                                   │
                              ┌────▼──────┐
                              │onDestroy()│
                              └────┬──────┘
                                   │
                             ┌┬────▼────┬┐
                             ││Activity ││
                             ││Shut Down││
                             └┴─────────┴┘
</code></pre>
<h2>f) State syntax to display built in zoom control.</h2>
<p>In Android, Zoom Control is a class that has some set of methods that are used to control the zoom functionality.</p>
<pre><code class="language-java">ZoomControl zoomControls = (ZoomControls) findViewById(R.id.simpleZoomControl);
</code></pre>
<h2>g) Name two classes used to play audio and video in Android.</h2>
<ul>
<li>The following classes are used to play sound and video in the Android framework:
<ul>
<li>MediaPlayer - This class is the primary API for playing sound and video.</li>
<li>AudioManager - This class manages audio sources and audio output on a device.</li>
</ul>
</li>
</ul>
<h1>2. Attempt any THREE of the following: 12</h1>
<h2>a) Describe Android architecture with diagram.</h2>
<ul>
<li>Android architecture contains different number of components to support any android device needs. Android software contains an open-source Linux Kernel having collection of number of C/C++ libraries which are exposed through an application framework services.</li>
<li>The main components of android architecture are following:</li>
</ul>
<ol>
<li><strong>Applications:</strong> Applications is the top layer of android architecture. The pre-installed applications like home, contacts, camera, etc and third party applications will be installed on this layer only.</li>
<li><strong>Application framework:</strong> Application Framework provides several important classes which are used to create an Android application.</li>
<li><strong>Application runtime:</strong> Android Runtime environment contains components like core libraries and the Dalvik virtual machine(DVM).</li>
<li><strong>Platform libraries:</strong> The Platform Libraries includes various C/C++ core libraries and Java based libraries such as Media, Graphics, OpenGL etc. to provide a support for android development.</li>
<li><strong>Linux Kernel:</strong> The linux kernel manages all the available drivers such as display drivers, camera drivers, audio drivers, etc. which are required during the runtime.</li>
</ol>
<h2>b) Differentiate between DVM and JVM</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android Operating system.</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based virtual machine architecture.</td>
<td>It is based on register based virtual machine architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>c) List and elaborate steps to deploy in Android application on Google play store.</h2>
<ul>
<li>Step 1 - First generate signed apk of your Android App to publish it on Play Store.</li>
<li>Step 2 - Sign up for Google Play Console to publish and manage your Android App.</li>
<li>Step 3 - Now click on Create Application.</li>
<li>Step 4 - Now fill store listing details of your App which include Title, Short and Full description.</li>
<li>Step 5 - Now Click on ready on publish along with save draft and click on Manage release.</li>
<li>Step 6 - After Manage production click on edit release.</li>
<li>Step 7 - Now click on review.</li>
<li>Step 8 - After review click on Start Rollout to production.</li>
</ul>
<h2>d) Describe with example, how to create a simple database in SQLite (Assume suitable data).</h2>
<ul>
<li>SQLite is a opensource SQL database that stores data to a text file on a device. Android comes in with built in SQLite database implementation.</li>
<li>SQLite supports all the relational database features.</li>
</ul>
<pre><code class="language-java">SQLiteDatabase mydatabase = openOrCreateDatabase(&quot;your database name&quot;,MODE_PRIVATE,null);
</code></pre>
<h1>3. Attempt any THREE of the following: 12</h1>
<h2>a) Write down the steps to install and configure Android studio.</h2>
<ul>
<li>Head over to <a href="https://developer.android.com/studio">https://developer.android.com/studio</a> to get the Android Studio executable or zip file.</li>
<li>Click on the Download Android Studio Button.</li>
<li>After the downloading has finished, open the file from downloads and run it. It will prompt the following dialog box.</li>
<li>Once “Finish” is clicked, choose the ‘Don’t import Settings option’.</li>
<li>This will start the Android Studio.</li>
<li>After it has found the SDK components, it will redirect to the Welcome dialog box.</li>
<li>Now it is time to download the SDK components.</li>
<li>Click on Start a new Android Studio project to build a new app.</li>
</ul>
<h2>b) State syntax to create Text View and Image button with any two attributes of each.</h2>
<h3>TextView</h3>
<pre><code class="language-xml">&lt;TextView
    android:id=&quot;@+id/student_name&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Name:&quot; /&gt;
</code></pre>
<ul>
<li>text -  Sets text of the Textview</li>
<li>id - Gives a unique ID to the Textview</li>
</ul>
<h3>ImageButton</h3>
<pre><code class="language-xml">&lt;ImageButton
  android:id=&quot;@+id/imageButton&quot;
  android:src=&quot;@drawable/button&quot;
  android:layout_height=&quot;wrap_content&quot;
  android:layout_width=&quot;wrap_content&quot;/&gt;
</code></pre>
<ul>
<li>background - This is a drawable to use as the background.</li>
<li>id - Gives a unique ID to the Textview</li>
</ul>
<h2>c) Describe Android service life cycle along with diagram.</h2>
<ul>
<li>A service is an application component which runs withour direst interaction with the user in the background.</li>
<li>Services are used for repetitive and potentially long running operations:
<ul>
<li>Internet downloads</li>
<li>Checking for new data</li>
<li>Data processing</li>
<li>Updating content</li>
<li>Providers and the like</li>
</ul>
</li>
<li>They typically run in the background to perform long-running operations or work for remote processes.</li>
</ul>
<pre><code>                             ┌┬────────┬┐
                             ││Activity││
                             ││launched││
                             └┴────┬───┴┘
                                   │
                              ┌────▼─────┐
         ┌────────────────────►onCreate()│
         │                    └────┬─────┘
         │                         │
         │                    ┌────▼────┐                    ┌───────────┐
         │                    │onStart()◄────────────────────┤onRestart()│
         │                    └────┬────┘                    └───────▲───┘
         │                         │                                 │
User navigates                ┌────▼─────┐                           │
to the activity               │onResume()◄───────────────┐           │
         │                    └────┬─────┘               │           │
         │                         │                     │           │
  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │
  ││App process││            ││Activity││                │           │
  ││killed     ││            ││Running ││                │           │
  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │
         │                         │                     │           │
         │                         ▼                     │           │
Apps with higher priority   Another activity comes   User returns    │
need memory                 into the foreground      to the activity │
         │                         │                     │           │
         │                         │                     │           │
         │                    ┌────▼────┐                │           │
         │                    │onPause()├────────────────┘           │
         │                    └────┬────┘                            │
         │                         │                                 │
         │                         │                                 │
         │                  The activity is                          │
         │                  no longer visible                        │
         │                         │                        User navigates
         │                         │                        to the activity
         │                    ┌────▼───┐                             │
         └────────────────────┤onStop()├─────────────────────────────┘
                              └────┬───┘
                                   │
                                   │
                            The activity is finishing or
                            being destroyed by the system
                                   │
                                   │
                              ┌────▼──────┐
                              │onDestroy()│
                              └────┬──────┘
                                   │
                             ┌┬────▼────┬┐
                             ││Activity ││
                             ││Shut Down││
                             └┴─────────┴┘
</code></pre>
<h2>d) State and elaborate the syntax of required class and methods for Geocoding.</h2>
<ul>
<li>A class for handling geocoding and reverse geocoding.</li>
<li>Geocoding is the process of transforming a street address or other description of a location into a (latitude, longitude) coordinate.</li>
</ul>
<pre><code class="language-java">public final class Geocoder
extends Object
</code></pre>
<h1>4. Attempt any THREE of the following: 12</h1>
<h2>a) Explain with example, code to create GUI using absolute layout (Assume suitable data).</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;AbsoluteLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;16dp&quot;
    android:paddingTop=&quot;16dp&quot;
    android:paddingRight=&quot;16dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:id=&quot;@+id/student_name&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;280dp&quot;
        android:text=&quot;Name:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;304dp&quot;
        android:text=&quot;Age:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;328dp&quot;
        android:text=&quot;Mobile Number:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
&lt;/AbsoluteLayout&gt;
</code></pre>
<h2>b) Write a program to demonstrate Date and Time picker.</h2>
<h3>Date Picker</h3>
<ul>
<li>Android Date Picker allows you to select the date consisting of day, month and
year in your custom user interface.</li>
<li>Methods of DatePicker:
<ul>
<li><strong>getDayOfMonth()</strong> - This method gets the selected day of month.</li>
<li><strong>getMonth()</strong> - This method gets the selected month.</li>
<li><strong>getYear()</strong> - This method gets the selected year.</li>
<li><strong>getFirstDayOfWeek()</strong> - This method returns first day of the week.</li>
<li><strong>getCalendarView()</strong> - This method returns calender View.</li>
</ul>
</li>
</ul>
<h3>TimePicker</h3>
<ul>
<li>Android Time Picker allows us to select the time of day in either 24h or AM/PM
mode.</li>
<li>The time consists of hours, minutes and clock format.</li>
<li>Methods of TimePicker</li>
</ul>
<ol>
<li><strong>setCurrentHour()</strong> - This method sets the current hour.</li>
<li>setCurrentMinute() - This method sets the current minute.</li>
<li><strong>is24HoursView()</strong> - This method returns true if this 24 hour view else
false.</li>
<li><strong>isEnabled()</strong> - This method returns the enabled status for this view.</li>
</ol>
<h2>c) Describe multimedia framework of Android with diagram.</h2>
<figure data-type="image"><img src="https://source.android.com/static/docs/core/media/images/ape_media_buffer_alloc_n.png" alt="Multimedia framework of Android diagram" loading="lazy" decoding="async"></figure>
<h2>d) Discuss developer console with at least four features.</h2>
<ul>
<li>Multiple User Accounts</li>
<li>Store Listing Details</li>
<li>Upload and Instantly Publish</li>
<li>Alpha and Beta Testing</li>
<li>Multiple APK Support</li>
<li>Selling and Pricing Your Products</li>
<li>In-app Products</li>
<li>Distribution Controls</li>
<li>User Reviews and Crash Reports</li>
<li>App Statistics</li>
</ul>
<h2>e) Write a program to demonstrate declaring and using permissions with any relevant example.</h2>
<p>AndroidManifest.xml</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
            package=&quot;org.geeksforgeeks.requestPermission&quot;&gt;

        &lt;!--Declaring the required permissions--&gt;
        &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
        &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;
        &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;

        &lt;application
            android:allowBackup=&quot;true&quot;
            android:icon=&quot;@mipmap/ic_launcher&quot;
            android:label=&quot;@string/app_name&quot;
            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
            android:supportsRtl=&quot;true&quot;
            android:theme=&quot;@style/AppTheme&quot;&gt;

            &lt;activity
                android:name=&quot;.MainActivity&quot;&gt;

                &lt;intent-filter&gt;
                    &lt;action
                        android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                    &lt;category
                        android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
                &lt;/intent-filter&gt;

            &lt;/activity&gt;
        &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
<p>activity_main.xml</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;!-- To show toolbar--&gt;
    &lt;android.support.v7.widget.Toolbar
        android:id=&quot;@+id/toolbar&quot;
        android:layout_width=&quot;match_parent&quot;
        android:background=&quot;@color/colorPrimary&quot;
        app:title=&quot;GFG | Permission Example&quot;
        app:titleTextColor=&quot;@android:color/white&quot;
        android:layout_height=&quot;?android:attr/actionBarSize&quot;/&gt;

    &lt;!--Button to request storage permission--&gt;
    &lt;Button
        android:id=&quot;@+id/storage&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Storage&quot;
        android:layout_marginTop=&quot;16dp&quot;
        android:padding=&quot;8dp&quot;
        android:layout_below=&quot;@id/toolbar&quot;
        android:layout_centerHorizontal=&quot;true&quot;/&gt;

    &lt;!--Button to request camera permission--&gt;
    &lt;Button
        android:id=&quot;@+id/camera&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Camera&quot;
        android:layout_marginTop=&quot;16dp&quot;
        android:padding=&quot;8dp&quot;
        android:layout_below=&quot;@id/storage&quot;
        android:layout_centerHorizontal=&quot;true&quot;/&gt;

&lt;/RelativeLayout&gt;
</code></pre>
<p>MainActivity.java</p>
<pre><code class="language-java">import android.Manifest;
import android.content.pm.PackageManager;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    // Defining Buttons
    private Button storage, camera;

    // Defining Permission codes.
    // We can give any value
    // but unique for each permission.
    private static final int CAMERA_PERMISSION_CODE = 100;
    private static final int STORAGE_PERMISSION_CODE = 101;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        storage = findViewById(R.id.storage);
        camera = findViewById(R.id.camera);

        // Set Buttons on Click Listeners
        storage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                checkPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE);
            }
        });

        camera.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                checkPermission(Manifest.permission.CAMERA, CAMERA_PERMISSION_CODE);
            }
        });
    }

    // Function to check and request permission.
    public void checkPermission(String permission, int requestCode)
    {
        if (ContextCompat.checkSelfPermission(MainActivity.this, permission) == PackageManager.PERMISSION_DENIED) {

            // Requesting the permission
            ActivityCompat.requestPermissions(MainActivity.this, new String[] { permission }, requestCode);
        }
        else {
            Toast.makeText(MainActivity.this, &quot;Permission already granted&quot;, Toast.LENGTH_SHORT).show();
        }
    }

    // This function is called when the user accepts or decline the permission.
    // Request Code is used to check which permission called this function.
    // This request code is provided when the user is prompt for permission.

    @Override
    public void onRequestPermissionsResult(int requestCode,
                                        @NonNull String[] permissions,
                                        @NonNull int[] grantResults)
    {
        super.onRequestPermissionsResult(requestCode,
                                        permissions,
                                        grantResults);

        if (requestCode == CAMERA_PERMISSION_CODE) {
            if (grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(MainActivity.this, &quot;Camera Permission Granted&quot;, Toast.LENGTH_SHORT) .show();
            }
            else {
                Toast.makeText(MainActivity.this, &quot;Camera Permission Denied&quot;, Toast.LENGTH_SHORT) .show();
            }
        }
        else if (requestCode == STORAGE_PERMISSION_CODE) {
            if (grantResults.length &gt; 0
                &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(MainActivity.this, &quot;Storage Permission Granted&quot;, Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(MainActivity.this, &quot;Storage Permission Denied&quot;, Toast.LENGTH_SHORT).show();
            }
        }
    }
}
</code></pre>]]></content>
  </entry>
  <entry>
    <title>ut2 6s</title>
    <link href="https://anzenkodo.github.io/notes/programming/android/ut2-6s.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/android/ut2-6s.html</id>
    <content type="html"><![CDATA[<h1>MAD QUESTION BANK</h1>
<h2>1. Write the syntax for Intent-Filter tag.</h2>
<pre><code class="language-xml">&lt;intent-fliter
android:icon=&quot;drawable resource&quot;
android:label=&quot;string resource&quot;
android:priority=&quot;integer&quot;&gt;
&lt;/intent-fliter&gt;
</code></pre>
<h2>2. Define Services in Android OS.</h2>
<ul>
<li>A service is an application component which runs withour direst interaction
with the user in the background.</li>
<li>Services are used for repetitive and potentially long running operations:
<ul>
<li>Internet downloads</li>
<li>Checking for new data</li>
<li>Data processing</li>
<li>Updating content</li>
<li>Providers and the like</li>
</ul>
</li>
<li>They typically run in the background to perform long-running operations or
work for remote processes.</li>
</ul>
<h3>1. Started</h3>
<ul>
<li>The service start with startService() function.</li>
<li>To stop the service we can use stopService() &amp; stopSelf() function.</li>
</ul>
<h3>2. Bound</h3>
<ul>
<li>A service is bound when an application component binds to it by calling
bindService().</li>
<li>To un bound the service we can use unbindService() function.</li>
</ul>
<h2>3. Enlist the steps to publish the Android application</h2>
<ul>
<li><strong>Step 1</strong> - Sign up or Sign in for an account on the Android Developer
console.</li>
<li><strong>Step 2</strong> - Create a new appplication.</li>
<li><strong>Step 3</strong> - Prepare multimedia.</li>
<li><strong>Step 4</strong> - Prepare code for release.</li>
<li><strong>Step 5</strong> - Build a release-ready APK.</li>
<li><strong>Step 6</strong> - Upload APK complete the checklist on the left until all the items
have a green checkmark.</li>
</ul>
<h2>5. What is Date and Time picker with its methods?</h2>
<h3>Date Picker</h3>
<ul>
<li>Android Date Picker allows you to select the date consisting of day, month and
year in your custom user interface.</li>
<li>Methods of DatePicker:
<ul>
<li><strong>getDayOfMonth()</strong> - This method gets the selected day of month.</li>
<li><strong>getMonth()</strong> - This method gets the selected month.</li>
<li><strong>getYear()</strong> - This method gets the selected year.</li>
<li><strong>getFirstDayOfWeek()</strong> - This method returns first day of the week.</li>
<li><strong>getCalendarView()</strong> - This method returns calender View.</li>
</ul>
</li>
</ul>
<h3>TimePicker</h3>
<ul>
<li>Android Time Picker allows us to select the time of day in either 24h or AM/PM
mode.</li>
<li>The time consists of hours, minutes and clock format.</li>
<li>Methods of TimePicker</li>
</ul>
<ol>
<li><strong>setCurrentHour()</strong> - This method sets the current hour.</li>
<li>setCurrentMinute() - This method sets the current minute.</li>
<li><strong>is24HoursView()</strong> - This method returns true if this 24 hour view else
false.</li>
<li><strong>isEnabled()</strong> - This method returns the enabled status for this view.</li>
</ol>
<h2>6. Write a program to display circular progress bar.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  tools:context=&quot;.MainActivity&quot;&gt;
  &lt;Button
    android:id=&quot;@+id/btnDownloadFile&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Download File&quot;
    andorid:layout_centerInParent=&quot;true&quot; /&gt;
&lt;/RelativeLayout&gt;
</code></pre>
<h2>7. List sensors in Android and explain anyone in detail.</h2>
<p>The Android supports broad categories of sensors:</p>
<ol>
<li>Motion Sensors</li>
<li>Enviromental Sensors</li>
<li>Position Sensors</li>
</ol>
<h3>Montion Sensors:</h3>
<ul>
<li>A motion sensor (or motion detector) is an electronic device that is designed
to detect and measure movements.</li>
<li>Motion sensors are used primarily in home and business secrity systems.</li>
<li>These sensors measure accelecation forces and rotational forces along three
axes.</li>
</ul>
<h2>8. Develop the registration form using the following GUI.</h2>
<pre><code class="language-xml">&lt;RelativeLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  android:paddingBottom=&quot;wrap_content&quot;
  android:paddingTop=&quot;wrap_content&quot;
  tools:context=&quot;.MainActivity&quot;&gt;
  &lt;FrameLayout&gt;
    &lt;ImageView
      android:layout_width=&quot;wrap_content&quot;
      android:layout_height=&quot;wrap_content&quot;
      android:src=&quot;@drawable/banner_image&quot; /&gt;
  &lt;FrameLayout&gt;
  &lt;EditText
    android:id=&quot;@+id/editText1&quot;
    android:hint=&quot;Name&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_centerHorizontal=&quot;true&quot;
    android:layout_centerVertical=&quot;true&quot;
    android:drawableLeft=&quot;@drawable/name_image&quot; /&gt;
  &lt;EditText
    android:id=&quot;@+id/editText2&quot;
    android:hint=&quot;Email ID&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_centerHorizontal=&quot;true&quot;
    android:layout_centerVertical=&quot;true&quot;
    android:drawbleLeft=&quot;@drawable/email_image&quot; /&gt;
  &lt;EditText
    android:id=&quot;@+id/editText1&quot;
    android:hint=&quot;Password&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_centerHorizontal=&quot;true&quot;
    android:layout_centerVertical=&quot;true&quot;
    android:drawableLeft=&quot;@drawable/pass_image&quot; /&gt;
  &lt;EditText
    android:id=&quot;@+id/editText1&quot;
    android:hint=&quot;Confirm Password&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_centerHorizontal=&quot;true&quot;
    android:layout_cneterVertical=&quot;true&quot;
    android:drawableLeft=&quot;@drawable/conpass_image&quot; /&gt;
  &lt;EditText
    android:id=&quot;@+id/editText1&quot;
    android:hint=&quot;Enter Mobile&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_centerHorizontal=&quot;true&quot;
    android:layout_centerVertical=&quot;true&quot;
    android:drawableLeft=&quot;@drawable/mobile_image&quot; /&gt;
  &lt;RadioButton
    android:id=&quot;@+id/radioMale&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Male&quot; /&gt;
  &lt;RadioButton
    android:id=&quot;@+id/radioFemale&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Female&quot; /&gt;
  &lt;Button
    android:id=&quot;@+id/btnDisplay&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Register&quot; /&gt;
&lt;/RelativeLayout&gt;
</code></pre>]]></content>
  </entry>
  <entry>
    <title>notes</title>
    <link href="https://anzenkodo.github.io/notes/programming/android/notes.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/android/notes.html</id>
    <content type="html"><![CDATA[<h1>Android</h1>
<h2>1. What is Mobile application?</h2>
<ul>
<li>A mobile application, most commonly referred to as an app, is a type of
application software deigned to run on a mobile device, such as a smart phone
or tablet computer.</li>
<li>Mobile app development is the process by which a mobile applications is
developed for mobile devices like Personal Digital Assistants (PDAs), tablet
computer or mobile smart phones.</li>
<li>Android is mobile operating system developed by Google, based on a modified
version of the Linux kernel and other open source software and designed
primarily for touchscreen mobile devices such as smart phones and tablets.</li>
<li>Application developers, Android is an open platform that provides exciting
opportunities for developing virtually app imaginable.</li>
</ul>
<h2>3. What is Android?</h2>
<ul>
<li>The android is a powerful Operating System(OS) and it supports large numbers
of applications(apps) in smart phones.</li>
<li>The hardware that supports android software is based on ARM architecture
platform.</li>
<li>The android is an open source operating system means that it is free and any
one can use it.</li>
<li>The android development supports with the full Java programming language.</li>
</ul>
<h2>4. Enlist features of Android OS?</h2>
<ul>
<li><strong>Storage</strong> - SQLite a lightweight relational database, is used for data
storage purpose.</li>
<li><strong>Multitasking</strong> - Multitasking of application, with unique handling of
memory allocation, will be existing.</li>
<li><strong>Web Browser</strong> - The web browser available in Android OS is based on the
open source WebKit layout engine, attached with Chrome’s V8 JavaScript engine.</li>
<li><strong>Open Source</strong> - Android is open-source operating system.</li>
<li><strong>Accessibility</strong> - Built in text to speech in Android OS is provided by Talk
back for people with low or no vision.</li>
<li><strong>Media Support</strong> - Android supports the many media formats like:
<ul>
<li>WenM</li>
<li>H.263</li>
<li>H.254</li>
<li>AAC</li>
<li>HE-AAC</li>
<li>MPEG-4</li>
</ul>
</li>
</ul>
<h2>5. State Advantages and Disadvantages of Android OS?</h2>
<h3>Advantages</h3>
<ul>
<li>Supports 2D and 3D Graphics</li>
<li>Supports Multiple Languages</li>
<li>Faster Web Browser</li>
<li>Video Calling</li>
<li>Open Source Framework</li>
<li>Uses of Tools are Very Simple</li>
<li>Availability of Apps</li>
<li>Great Social Networking Integration</li>
<li>Better Notification System</li>
<li>Update User Interface Design</li>
<li>At a Time Applications</li>
<li>Low Chance of Crashing</li>
<li>Stability</li>
<li>Multitasking</li>
</ul>
<h3>Disadvantages</h3>
<ul>
<li>Need Internet Connection</li>
<li>Advertising</li>
<li>Wasteful Battery</li>
<li>Many Applications</li>
<li>Slow Response</li>
<li>Heat</li>
</ul>
<h2>6. Describe Architecture of Android diagrammatically.</h2>
<pre><code>┌──────────────────────────────────────────────────────────────────────────────┐
│ Application                                                                  │
│ ┌────┐ ┌────────┐ ┌─────┐ ┌───────┐ ┌───┐                                    │
│ │Home│ │Contacts│ │Phone│ │Browser│ │***│                                    │
│ └────┘ └────────┘ └─────┘ └───────┘ └───┘                                    │
│                                                                              │
│ ┌────┐ ┌──────┐ ┌─────┐ ┌────────┐ ┌───┐                                     │
│ │SMS │ │E-Mail│ │Clock│ │Calander│ │***│                                     │
│ └────┘ └──────┘ └─────┘ └────────┘ └───┘                                     │
│                                                                              │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│ Application Framework                                                        │
│ ┌────────────────┐ ┌──────────────┐ ┌─────────────────┐ ┌───────────┐        │
│ │Activity Manager│ │Window Manager│ │Content Providers│ │View System│        │
│ └────────────────┘ └──────────────┘ └─────────────────┘ └───────────┘        │
│                                                                              │
│ ┌───────────────┐ ┌─────────────────┐ ┌────────────────┐ ┌────────────────┐  │
│ │Package Manager│ │Telephony Manager│ │Resource Manager│ │Location Manager│  │
│ └───────────────┘ └─────────────────┘ └────────────────┘ └────────────────┘  │
│                                                                              │
├──────────────────────────────────────────────┬───────────────────────────────┤
│ Libraries                                    │ Android Runtime               │
│ ┌───────────────┐ ┌───────────────┐ ┌──────┐ │ ┌──────────────┐              │
│ │Surface Manager│ │Media Framework│ │SQLite│ │ │Core Libraries│              │
│ └───────────────┘ └───────────────┘ └──────┘ │ └──────────────┘              │
│                                              │                               │
│ ┌─────────┐ ┌────────┐ ┌──────┐              │ ┌──────────────────────┐      │
│ │OpenGL/ES│ │FreeType│ │WebKit│              │ │Dalvik Virtual Machine│      │
│ └─────────┘ └────────┘ └──────┘              │ └──────────────────────┘      │
│                                              │                               │
│ ┌───┐ ┌───┐ ┌────┐                           │                               │
│ │SGL│ │SSL│ │Libc│                           │                               │
│ └───┘ └───┘ └────┘                           │                               │
│                                              │                               │
├──────────────────────────────────────────────┴───────────────────────────────┤
│ Linux Kernel                                                                 │
│ ┌──────────────┐ ┌─────────────┐ ┌───────────────────┐ ┌───────────────────┐ │
│ │Display Driver│ │Camera Driver│ │Flash Memory Driver│ │Binder (IPC) Driver│ │
│ └──────────────┘ └─────────────┘ └───────────────────┘ └───────────────────┘ │
│                                                                              │
│ ┌─────────────┐ ┌───────────┐ ┌────────────┐ ┌────────────────┐              │
│ │Keypad Driver│ │WiFi Driver│ │Audio Driver│ │Power Management│              │
│ └─────────────┘ └───────────┘ └────────────┘ └────────────────┘              │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘
</code></pre>
<h2>7. What is OHA?</h2>
<ul>
<li>The OHA stands for Open Hardware Alliance.</li>
<li>Google formed OHA in order to develop an open source software platform for use
in mobile devices.</li>
<li>The OHA is the group that is in charge of the Android smart phones OS.</li>
<li>The primary objective of these companies is to developed open standards for
mobile devices.</li>
<li>The members of OHA include handset manufactures, chip makers,
commercialization companies, software companies and mobile operators/users.</li>
</ul>
<h2>8. Explain the term Android ecosystem in detail.</h2>
<ul>
<li>The learn about Android Operating system and develop Android application, it
is very important for to understand the entire ecosystem of Android and the
stakeholders of Android ecosystem.</li>
<li>The four parts of Android Ecosystem:
<ul>
<li><strong>Google</strong> - develops android.</li>
<li><strong>OEMs</strong> (Original Equipment Manufactures) manufacture the hardware, and as
well the custom application components.</li>
<li><strong>Application Development Companies</strong> - are the major contactors to the
ecosystem and employ developers, and also contract out the product
development to services companies.</li>
<li><strong>Freelance Android Developers</strong> have the skill-set to contribute to the
ecosystem for android development, they are who create their own
applications and publish them on Google Play Store.</li>
</ul>
</li>
</ul>
<h2>9. What are the features of Android? Enlist any six of them.</h2>
<ul>
<li><strong>Storage</strong> - SQLite a lightweight relational database, is used for data
storage purpose.</li>
<li><strong>Multitasking</strong> - Multitasking of application, with unique handling of
memory allocation, will be existing.</li>
<li><strong>Web Browser</strong> - The web browser available in Android OS is based on the
open source WebKit layout engine, attached with Chrome’s V8 JavaScript engine.</li>
<li><strong>Open Source</strong> - Android is open-source operating system.</li>
<li><strong>Accessibility</strong> - Built in text to speech in Android OS is provided by Talk
back for people with low or no vision.</li>
<li><strong>Media Support</strong> - Android supports the many media formats like:
<ul>
<li>WenM</li>
<li>H.263</li>
<li>H.254</li>
<li>AAC</li>
<li>HE-AAC</li>
<li>MPEG-4</li>
</ul>
</li>
</ul>
<h2>10. Explain the term Android ecosystem in detail.</h2>
<ol>
<li>Android 13</li>
<li>Android 12</li>
<li>Android 11</li>
<li>Android 10</li>
<li>Android Pie</li>
<li>Android Oreo</li>
<li>Android Nougat</li>
<li>Android Marshmallow</li>
<li>Android Lollipop</li>
<li>Android KitKat</li>
<li>Android Jelly Bean</li>
<li>Android Sandwich</li>
<li>Android Honeycomb</li>
<li>Android Gingerbread</li>
<li>Android Froyo</li>
<li>Android Eclair</li>
<li>Android Donut</li>
<li>Android 1.5</li>
<li>Android 1.1</li>
<li>Android 1.0</li>
</ol>
<h2>11. Explain the need of Android.</h2>
<ul>
<li><strong>Desktop</strong> -Android-x86 is an open source project that ports Android to the
x86 platform, allowing you to run it on your computer instead of an ARM-based
phone or tablet.</li>
<li><strong>Connectivity</strong> - On one page/desktop we could be able to have four
connecting device tool button like, Turn ON/OFF Bluetooth, Turn ON/OFF WiFi,
Turn ON/OFF mobile network, Turn ON/OFF GPS and so on.</li>
<li><strong>Browser</strong> - The Android OS browser is one of the best browser on the mobile
market. It generally loads pages faster then Safari or any other browser.</li>
<li><strong>Open to carrier</strong> - If we know Java programming language then we are open to
Android world.</li>
<li><strong>Market</strong> - Android OS has an android market. The android apps are free and
work as well.</li>
<li><strong>Future</strong> - The future mobile phones are basically going to be smartphones.</li>
<li><strong>Notification</strong> - Android phones have multi notification system.</li>
<li><strong>Google Integration</strong> - The android has inbuilt Google support. For example:
Google Map, G-Mail etc.</li>
<li><strong>Open Source</strong> - The code of Android OS as well as the apps is available.</li>
<li><strong>Endless Personalization</strong> - The Android cell phone allow to configuration
their mobile to look and behave exactly like they want.</li>
</ul>
<h2>14. Explain the following terms:</h2>
<h3>(i) Android application</h3>
<ul>
<li>The top layer of Android architecture is Applications.</li>
<li>The native and third party applications like Contacts, Email, Music, Gallery,
Clock, Games, etc.</li>
<li>Whatever we will build those will be installed on this layer only.</li>
<li>The application layer runs within the Android run time using the classes an
services made available from the application framework.</li>
</ul>
<h3>(ii) Android kernel</h3>
<ul>
<li>Linux kernel is a bottom layer and heart of the android architecture.</li>
<li>It exists at the root of android architecture and contains all the low-level
device drivers fro the various hardware components of an Android device.</li>
<li>Linux Kernel is responsible for device drivers, power management, memory
management, device management and resource access.</li>
</ul>
<h2>16. Describe OHA with the Help of Digram.</h2>
<pre><code>┌─────────┐ ┌─────────┐ ┌────────────┐ ┌──────┐ ┌───────────────┐
│Software │ │Mobile   │ │Handset     │ │Chip  │ │Commercializton│
│Companies│ │Operators│ │Manufactures│ │Makers│ │Companies      │
└─────┬───┘ └─────┬───┘ └─────┬──────┘ └───┬──┘ └────────┬──────┘
      │           │           │            │             │
      └───────────┴───────────┼────────────┴─────────────┘
                              │
                       ┌──────┴───────┐
                       │Open Handset  │
                       │Alliance (OHA)│
                       └──────────────┘
</code></pre>
<h2>17. Enlist and explain any 4 features of Android.</h2>
<ul>
<li><strong>Storage</strong> - SQLite a lightweight relational database, is used for data
storage purpose.</li>
<li><strong>Multitasking</strong> - Multitasking of application, with unique handling of
memory allocation, will be existing.</li>
<li><strong>Web Browser</strong> - The web browser available in Android OS is based on the
open source WebKit layout engine, attached with Chrome’s V8 JavaScript engine.</li>
<li><strong>Open Source</strong> - Android is open-source operating system.</li>
</ul>
<h2>19. Explain the concept of Android Ecosystem.</h2>
<ul>
<li>The learn about Android Operating system and develop Android application, it
is very important for to understand the entire ecosystem of Android and the
stakeholders of Android ecosystem.</li>
<li>The four parts of Android Ecosystem:
<ul>
<li><strong>Google</strong> - develops android.</li>
<li><strong>OEMs</strong> (Original Equipment Manufactures) manufacture the hardware, and as
well the custom application components.</li>
<li><strong>Application Development Companies</strong> - are the major contactors to the
ecosystem and employ developers, and also contract out the product
development to services companies.</li>
<li><strong>Freelance Android Developers</strong> have the skill-set to contribute to the
ecosystem for android development, they are who create their own
applications and publish them on Google Play Store.</li>
</ul>
</li>
</ul>
<h2>20. Explain any 4 advantages and disadvantages of Android OS.</h2>
<h3>Advantages</h3>
<ul>
<li>Supports 2D and 3D Graphics</li>
<li>Supports Multiple Languages</li>
<li>Faster Web Browser</li>
<li>Video Calling</li>
<li>Open Source Framework</li>
<li>Uses of Tools are Very Simple</li>
<li>Availability of Apps</li>
<li>Great Social Networking Integration</li>
<li>Better Notification System</li>
<li>Update User Interface Design</li>
<li>At a Time Applications</li>
<li>Low Chance of Crashing</li>
<li>Stability</li>
<li>Multitasking</li>
</ul>
<h3>Disadvantages</h3>
<ul>
<li>Need Internet Connection</li>
<li>Advertising</li>
<li>Wasteful Battery</li>
<li>Many Applications</li>
<li>Slow Response</li>
<li>Heat</li>
</ul>
<h2>21. Describe the concept of Anatomy of Android Application.</h2>
<ul>
<li><code>java</code> - This contains the <code>.java</code> source filed for our project. By default,
includes an <code>MainActivity.java</code> source file having an activity class that runs
when our app is launched using the app icon.</li>
<li><code>res/drawable-hdpi</code> - This is directory for drawable objects that are designed
for high-density screens.</li>
<li><code>res/layout</code> - This is a directory for other various XML files that contain a
collection of resources, such as strings and colours definitions.</li>
<li><code>AndroidManifest.xml</code> - This is the manifest file which describes the
fundamental characteristics of the app and defines each of its components.</li>
<li><code>Build.gradle</code> - This is an auto generated file which contains
<code>compileSdkVersion</code>, <code>buildToolsVersion</code>, <code>applicationId</code>, <code>minSdkVersion</code>,
<code>targetSdkVersion</code>, <code>versionCode</code> and <code>versionName</code>.</li>
</ul>
<h2>22. Draw and explain the architecture of Android.</h2>
<pre><code>┌──────────────────────────────────────────────────────────────────────────────┐
│ Application                                                                  │
│ ┌────┐ ┌────────┐ ┌─────┐ ┌───────┐ ┌───┐                                    │
│ │Home│ │Contacts│ │Phone│ │Browser│ │***│                                    │
│ └────┘ └────────┘ └─────┘ └───────┘ └───┘                                    │
│                                                                              │
│ ┌────┐ ┌──────┐ ┌─────┐ ┌────────┐ ┌───┐                                     │
│ │SMS │ │E-Mail│ │Clock│ │Calander│ │***│                                     │
│ └────┘ └──────┘ └─────┘ └────────┘ └───┘                                     │
│                                                                              │
├──────────────────────────────────────────────────────────────────────────────┤
│                                                                              │
│ Application Framework                                                        │
│ ┌────────────────┐ ┌──────────────┐ ┌─────────────────┐ ┌───────────┐        │
│ │Activity Manager│ │Window Manager│ │Content Providers│ │View System│        │
│ └────────────────┘ └──────────────┘ └─────────────────┘ └───────────┘        │
│                                                                              │
│ ┌───────────────┐ ┌─────────────────┐ ┌────────────────┐ ┌────────────────┐  │
│ │Package Manager│ │Telephony Manager│ │Resource Manager│ │Location Manager│  │
│ └───────────────┘ └─────────────────┘ └────────────────┘ └────────────────┘  │
│                                                                              │
├──────────────────────────────────────────────┬───────────────────────────────┤
│ Libraries                                    │ Android Runtime               │
│ ┌───────────────┐ ┌───────────────┐ ┌──────┐ │ ┌──────────────┐              │
│ │Surface Manager│ │Media Framework│ │SQLite│ │ │Core Libraries│              │
│ └───────────────┘ └───────────────┘ └──────┘ │ └──────────────┘              │
│                                              │                               │
│ ┌─────────┐ ┌────────┐ ┌──────┐              │ ┌──────────────────────┐      │
│ │OpenGL/ES│ │FreeType│ │WebKit│              │ │Dalvik Virtual Machine│      │
│ └─────────┘ └────────┘ └──────┘              │ └──────────────────────┘      │
│                                              │                               │
│ ┌───┐ ┌───┐ ┌────┐                           │                               │
│ │SGL│ │SSL│ │Libc│                           │                               │
│ └───┘ └───┘ └────┘                           │                               │
│                                              │                               │
├──────────────────────────────────────────────┴───────────────────────────────┤
│ Linux Kernel                                                                 │
│ ┌──────────────┐ ┌─────────────┐ ┌───────────────────┐ ┌───────────────────┐ │
│ │Display Driver│ │Camera Driver│ │Flash Memory Driver│ │Binder (IPC) Driver│ │
│ └──────────────┘ └─────────────┘ └───────────────────┘ └───────────────────┘ │
│                                                                              │
│ ┌─────────────┐ ┌───────────┐ ┌────────────┐ ┌────────────────┐              │
│ │Keypad Driver│ │WiFi Driver│ │Audio Driver│ │Power Management│              │
│ └─────────────┘ └───────────┘ └────────────┘ └────────────────┘              │
│                                                                              │
└──────────────────────────────────────────────────────────────────────────────┘
</code></pre>
<ul>
<li>The main components of Android architecture are:
<ul>
<li>Application</li>
<li>Android Framework</li>
<li>Android Runtime</li>
<li>Platform Libraries</li>
<li>Linux Kernel</li>
</ul>
</li>
</ul>
<h3>Application</h3>
<ul>
<li>The top layer of Android architecture is Applications.</li>
<li>The native and third party applications like Contacts, Email, Music, Gallery,
Clock, Games, etc.</li>
<li>Whatever we will build those will be installed on this layer only.</li>
<li>The application layer runs within the Android run time using the classes an
services made available from the application framework.</li>
</ul>
<h3>Application Framework</h3>
<ul>
<li>The Application framework provides the classes used to create an Android
application.</li>
<li>It also provides a generic abstraction for hardware access and manages the
user interface and application resources.</li>
<li>It basically provides the services through which we can create the particular
class and make that class helpful for Application creation.</li>
<li>The application framework includes services like telephony service, location
services, notification manager, NFC service, View system, etc.</li>
<li>Which can use for application development as per our requirements.</li>
</ul>
<h3>Android Runtime</h3>
<ul>
<li>Android Runtime environment is an important part of Android rather then an
internal part and it contains a components like core libraries and the Dalvik
Virtual Machine(DVM).</li>
<li>The Android run time is the engine that powers our applications along with the
libraries and it forms the basis for the application framework.
<ul>
<li><strong>Dalvik Virtual Machine(DVM)</strong> - is register-based virtual machine like
Java Virtual Machine(JVM). It is specially designed and optimized for
Android to ensure that a device can run multiple instance efficiently.</li>
<li>The <strong>core libraries</strong> in Android runtime will enable is to implement an
Android applications using standard Java programming language.</li>
</ul>
</li>
</ul>
<h3>Platform Libraries</h3>
<ul>
<li>The Platform Libraries includes various C/C++ core libraries and Java based
libraries such as SSL, libc,Graphics, SQLite, WebKit, Media, Surface Manger,
OpenGL etc.</li>
</ul>
<h3>Linux Kernel</h3>
<ul>
<li>Linux kernel is a bottom layer and heart of the android architecture.</li>
<li>It exists at the root of android architecture and contains all the low-level
device drivers fro the various hardware components of an Android device.</li>
<li>Linux Kernel is responsible for device drivers, power management, memory
management, device management and resource access.</li>
</ul>
<h2>Android Application Components</h2>
<ul>
<li><strong>Activates</strong> - They dictate the UI and handle the user interaction to the
smart phone screen.</li>
<li><strong>Services</strong> - They handle background processing associated with an
application.</li>
<li><strong>Broadcast Receivers</strong> - They handle communication between Android OS and
applications.</li>
<li><strong>Content Provides</strong> - They handle data and database management issues.</li>
<li><strong>Fragments</strong> - Represents a portion of user interface in an Activity.</li>
<li><strong>Views</strong> - UI elements that are drawn on-screen including buttons, lists
forms etc.</li>
<li><strong>Layouts</strong> - View hierarchies that control screen format and appearance of
the views.</li>
<li><strong>Intents</strong> -Messages wiring components together.</li>
<li><strong>Resources</strong> - External elements, such as strings, constants and drawable
pictures.</li>
<li><strong>Manifest</strong> - Configuration file for the application.</li>
</ul>
<h1>2. Installing and Configuration of Android</h1>
<h2>1. What is OS? Explain OS requirements for Android.</h2>
<ul>
<li>To develop an Android program, the necessary supporting OS used in a computer
can be follows:
<ul>
<li>Windows XP, Vista, 7, 8</li>
<li>Mac OS x</li>
<li>Linux</li>
</ul>
</li>
</ul>
<h2>2. What is JDK?</h2>
<ul>
<li>An Android operating system program is developed in Java programming language
we have to install Java Development Kit (JDK) in computer.</li>
</ul>
<h2>3. What is SDK?</h2>
<ul>
<li>API libraries, and emulator, documentation, sample code, developer tools, and
tutorials which help us to build, test and debug apps form Android.</li>
<li>Android SDK is made up of two main parts namely, the tools and the packages.</li>
<li>Some Android SDK, features include:
<ul>
<li>No licensing, distribution, or development fees.</li>
<li>WiFi hardware access</li>
<li>IPC message passing</li>
<li>Shared data stores</li>
<li>An integrated open source WebKit-based browser.</li>
<li>Full support for application that integrate Map controls as part of their
interface.</li>
<li>Peer-to-Peer(P2P) support using Google Talk.</li>
</ul>
</li>
</ul>
<h2>5. Describe DVM with diagram.</h2>
<pre><code>                                 ┌───────────┐
    ┌───────────┬──────────┬─────┤Android SDK├──────────┬───────────┐
    │           │          │     └─────┬─────┘          │           │
    │           │          │           │                │           │
┌───┴────┐ ┌────┴────┐ ┌───┴────┐ ┌────┴────────┐ ┌─────┴─────┐ ┌───┴─────┐
│Debugger│ │Libraries│ │Emulator│ │Documentation│ │Sample Code│ │Tutorials│
└────────┘ └─────────┘ └────────┘ └─────────────┘ └───────────┘ └─────────┘
</code></pre>
<h2>What is JVM? Compare JVM and DVM?</h2>
<ul>
<li>Dalvik is register-based Virtual Machine(VM) that’s been optimized to ensure
that a device can run multiple instance efficiently.</li>
<li>Dalvik VM takes the generated Java class files and combines them into one or
more Dalvik Executable (<code>.dev</code>) files.</li>
<li>Android OS uses the Dalvik Virtual Machine (DVM) with just-during-time
compilation to run Dalvik bytecode, with is frequently translated from
Java bytecode.</li>
<li>Google has also fine-tuned the collection in the Dalvik VM, but it has chosen
to remove Just-In-Time (JIT) compiler, in early releases.</li>
<li>Dalvik VM use a different kind of assembly-code generation, in which it uses
registers as the primary units of data storage instead of the stack.</li>
</ul>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android OS</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based VM architecture.</td>
<td>It is based on register based VM architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory.</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different content pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimized to <code>.odex</code> format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>7. Explain the term emulator in detail.</h2>
<ul>
<li>Android Emulator is responsible for running, debugging and testing the
Android application.</li>
<li>The Android Emulator mimics all the hardware and software features of typical
mobile devices except that it can’t place annual phone calls.</li>
</ul>
<h2>8. What is ADT? Describe in detail.</h2>
<ul>
<li>Android Development Tool (ADT) in Android is a plugin for the Eclipse IDE
which provides a suitable environment to develop an Android application where
creation, compilation and debugging are possible.</li>
</ul>
<h2>10. Differentiate between JDK and SDK.</h2>
<table>
<thead>
<tr>
<th>SDK</th>
<th>JDK</th>
</tr>
</thead>
<tbody>
<tr>
<td>Software development kit.</td>
<td>Java development kit.</td>
</tr>
<tr>
<td>It is a set of software or development tools used to create an application or a program on any platform.</td>
<td>It is a set of development tools that allows a programmer write a program using Java language.</td>
</tr>
<tr>
<td>Libraries, sample code, supporting documentation etc.</td>
<td>Consists of the programming tool’s selection components.</td>
</tr>
<tr>
<td>Android SDK</td>
<td>Java 8, Java 11, etc.</td>
</tr>
</tbody>
</table>
<h2>11. Define the terms: JDK, SDK, AVD, ADT</h2>
<ul>
<li><strong>JDK</strong> - An Android operating system program is developed in Java programming
language we have to install Java Development Kit (JDK) in computer.</li>
<li><strong>SDK</strong> - API libraries, and emulator, documentation, sample code, developer
tools, and tutorials which help us to build, test and debug apps form Android.</li>
<li><strong>AVD</strong> - And Android Virtual Device (AVD) represents a device configuration.</li>
<li><strong>ADT</strong> - Android Development Tool (ADT) in Android is a plugin for the
Eclipse IDE which provides a suitable environment to develop an Android
application where creation, compilation and debugging are possible.</li>
</ul>
<h2>Explain AVD in detail.</h2>
<ul>
<li>And Android Virtual Device(AVD) represents a device configuration.</li>
<li>An AVD is a configuration that defines the characteristics of an Android phone
, tablet, Wear OS, Android TV, or Automotive OS device that we want to
simulate in the Android Emulator.</li>
<li>An AVD contains:
<ul>
<li><strong>Hardware profile</strong> - The hardware profile defines the characteristics of a device as shipped from the factory.</li>
<li><strong>System image</strong> - A system image labeled with Google APIs includes access to Google Play services.</li>
<li><strong>Storage area</strong> - The AVD has dedicated storage area on our development
machine.</li>
<li><strong>Skin</strong> - An emulator skin specifics the appearance of a device.</li>
</ul>
</li>
</ul>
<h2>18. Differentiate between JVM and DVM.</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android OS</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based VM architecture.</td>
<td>It is based on register based VM architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory.</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different content pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimized to <code>.odex</code> format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h1>3. UI Components and Layouts</h1>
<h2>2. Explain screen elements for Android.</h2>
<h2>3. What is directory?</h2>
<h2>4. Describe directory structure in detail.</h2>
<h2>5. Explain the term fundamentals of UI design in detail.</h2>
<ul>
<li>Every item in a User Interfaces (UI) is a subclass of the Android View class
whic is present inside the package (android.view).</li>
<li>The android SDK provides a set of pre-built views that can be used to
construct the UI.</li>
</ul>
<h2>6. What is meant by layout?</h2>
<p>A layout defines the stucture for User Interface in the application. There are
number of Layouts provided by Android which we will use in almost all the
Android applicatoins to provide different view, look and feel.</p>
<h2>7. Explain Linearlayout with example.</h2>
<ul>
<li>Android LinearLayout is View group that aligns all children in either
vertically or horizontally.</li>
<li>Vertically or Horizontally direction depends on attribute
<code>android:orientation</code> LinearLayout is simple and easy to use, it creates a
scroll bar if the length of window exceeds the length of the screen.</li>
<li>Attributes of LinearLayout: <code>id</code>, <code>orientation</code>, <code>layout_height</code>, <code>layout_weight</code>, <code>gravity</code>,
<code>weight_sum</code>, <code>divider</code>.</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
&lt;LinearLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  android:layout_height=&quot;match_parent&quot;
  android:layout_width=&quot;match_parent&quot;
  android:orientation=&quot;vertical&quot;/&gt;
  &lt;Button
    android:id=&quot;@id/buttons&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Button&quot; /&gt;
&lt;/LinearLayout&gt;
</code></pre>
</li>
</ul>
<h2>8. Describe FrameLayout with example.</h2>
<h2>9. Explain the following terms:</h2>
<h3>(i) TableLayout</h3>
<h3>(ii) AbsoluteLayout</h3>
<h2>10. Define the term Layout.</h2>
<p>A layout defines the stucture for User Interface in the application. There are
number of Layouts provided by Android which we will use in almost all the
Android applicatoins to provide different view, look and feel.</p>
<h2>11. Write down the control flow of an Android application step by step.</h2>
<h2>13. List the different components of a screen.</h2>
<h2>14. Explain the term fundamentals of UI design in detail.</h2>
<h2>15. List various layouts used in Android UI design.</h2>
<h1>4. Designing User Interface with View</h1>
<h2>1. What is UI?</h2>
<ul>
<li>User interface basic building block are View class.</li>
<li>View is superclass for all the UI components.</li>
<li>Input controls are interactive components in the app’s User Interface(UI).</li>
</ul>
<h2>2. Enlist elements of UI.</h2>
<ul>
<li><strong>View</strong> - View is superclass for all UI compnents.</li>
<li><strong>TextView</strong> - displays text to the user and optionally allows them to edit
it.</li>
<li><strong>EditText</strong> - An editable text entry box that accepts multiline entry.</li>
<li><strong>Button</strong> -whcih can be pressed, or clicked, by the user to perform an
action.</li>
<li><strong>ImageButton</strong> - shows button with an image that can be pressed or clicked by
the user.</li>
<li><strong>ToggleButton</strong> - is used to display checked andunchecked state of a button.</li>
<li><strong>RadioButton</strong> - A radiobutton has two states, either checked or unchecked.</li>
<li><strong>RadioGroup</strong> - RadioButton are maninly used together in RadioGroup.</li>
<li><strong>CheckBox</strong> - is an On/Off switch that can be toggled by the user.</li>
<li><strong>ProgressBar</strong> - is used to show the progress of an operatin.</li>
<li><strong>ListView</strong> - dispalys a vertically-scrollable collection of views, where
each view is positioned immediately below the previous viewin the list.</li>
<li><strong>GridView</strong> - shows items in two-dimensional scrolling grid.</li>
<li><strong>ImageView</strong> - shows image with help <code>android.widget.imageView</code> class.</li>
<li><strong>ScrollView</strong> - is a view group that is used to make vertically scrolllable
views.</li>
</ul>
<h2>3. What is TextView? How to create it? Explain with example.</h2>
<ul>
<li><strong>TextView</strong> - displays text to the user and optionally allows them to edit</li>
<li>A standard read-only text label that supports string formatting, multiline
display and automatic word wrapping.</li>
<li>Attributes of TextView:
<ul>
<li><strong>alpha</strong> - This property of the view as value between 0 and 1.</li>
<li><strong>auto-link</strong> - controls whether links such as urls and email addresses.</li>
<li><strong>gravity</strong> - attribute is optional attribute which is used to control the
alignment of the text left, right, center, top, bottom, center_vertical,
center_horizontal etc.</li>
<li><strong>text</strong> - is used to set the text in TextView.</li>
<li><strong>textColor</strong> - is used to set the text color.</li>
<li><strong>textSize</strong> - is used to set the size of text.</li>
<li><strong>textStyle</strong> - is used to set the text style.</li>
<li><strong>background</strong> - is used to set the background.</li>
<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>
</ul>
</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
  xmlns:android=&quot;https://scemas.android.com/res/apk/android&quot;
  android:orentation=&quot;vertical&quot;
  android:layout_height=&quot;match_parent&quot;
  android:layout_width=&quot;match_parent&quot;&gt;
  &lt;TextView
    android:layout_height=&quot;wrap_content&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:text=&quot;Hello World&quot;
    android:gravity=&quot;right&quot;
    android:textColor=&quot;#2353&quot;
    android:textSize=&quot;10px&quot;
    android:background=&quot;#000&quot;
    android:padding=&quot;10px&quot;/&gt;
&lt;/LinearLayout&gt;
</code></pre>
</li>
</ul>
<h2>4. Explain the term Button with example.</h2>
<ul>
<li><strong>Button</strong> -whcih can be pressed, or clicked, by the user to perform an
action.</li>
<li>There are different types of buttons used in android such as CompoundButton,
ToggleButton, RadioButton.</li>
<li>Button is superclass of TextView class and compound button is the subclass of
button class.</li>
<li>Properties of Button:
<ul>
<li><strong>auto-link</strong> - controls whether links such as urls and email addresses are
automatically found and converted toclickable links.</li>
<li><strong>clickable</strong> - defines whether this viewreacts to click events.</li>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>gravity</strong> - is an optional attribute which is used to control the
alignement of text like left, right, top, bottom, center_vertical,
center_horizontal etc.</li>
<li><strong>text</strong> - is used to set the text in TextView.</li>
<li><strong>textColor</strong> - is used to set the text color.</li>
<li><strong>textSize</strong> - is used to set the size of text.</li>
<li><strong>textStyle</strong> - is used to set the text style.</li>
<li><strong>background</strong> - is used to set the background.</li>
<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>
<li><strong>drawableButton</strong>, <strong>drawableTop</strong>, <strong>drawableRight</strong>, <strong>drawableLeft</strong> -
we draw drawable to the left, right, top or bottom of text.</li>
</ul>
</li>
</ul>
<h2>5. What is ImageButton? How to create it? Explain with example.</h2>
<ul>
<li><strong>ImageButton</strong> - shows button with an image that can be pressed or clicked by
the user.</li>
<li>Properties of ImageButton:
<ul>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>src</strong> - is used to set a source file of image or we can say image in the
image button to make layout look attractive.</li>
<li><strong>background</strong> - is used to set the background.</li>
<li><strong>padding</strong> is used to set padding left, right, top or bottom</li>
</ul>
</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  android:orientation=&quot;vertical&quot;/&gt;
  &lt;ImageButton
    android:id=&quot;@+id/imageButton&quot;
    android:src=&quot;@drawable/button&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_width=&quot;wrap_content&quot;/&gt;
&lt;/LinearLayout&gt;
</code></pre>
</li>
</ul>
<h2>6. Describe the following UI elements with example.</h2>
<h3>(i) ListView</h3>
<ul>
<li><strong>ListView</strong> - dispalys a vertically-scrollable collection of views, where
each view is positioned immediately below the previous viewin the list.</li>
<li>Properties of ListView:
<ul>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>divider</strong> - This is a drawable or color draw between different list items.</li>
<li><strong>dividerHeight</strong> - This specify the height of divider between list items.</li>
<li><strong>listSelector</strong> - is used to set the selector of the listView.</li>
</ul>
</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; endcoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  android:orientation=&quot;vertical&quot;&gt;
  &lt;ListView
    android:id=&quot;@+id/listView&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:divider=&quot;#000&quot;
    android:dividerHeight=&quot;1dp&quot;/&gt;
&lt;/LinearLayout&gt;
</code></pre>
</li>
</ul>
<h3>(ii) ScrollView</h3>
<ul>
<li><strong>ScrollView</strong> - is a view group that is used to make vertically scrolllable</li>
<li>It is a <code>FrameLayout</code> which put one child in it containg the whole contents to
scroll.</li>
<li>This is useful when we have too much to fit onto a single screen.</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.constraintlayout.widget.ConstraintLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  xmlns:app=&quot;https://schemas.android.com/tools&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  android:tools=&quot;.MainActivity&quot;&gt;
  &lt;ScrollView
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;
    &lt;TextView
      android:id=&quot;@+id/textView&quot;
      android:layout_height=&quot;wrap_content&quot;
      android:layout_width=&quot;wrap_content&quot;
      android:text=&quot;Hello World&quot;/&gt;
  &lt;/ScrollView&gt;
&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;
</code></pre>
</li>
</ul>
<h3>(iii) GridView</h3>
<ul>
<li>A GridView is type of AdapterView that dispalyas items in two-dimensional
scrolling grid.</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.contraintlayout.widget.ContraintLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:tools=&quot;.MainActivity&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_width=&quot;mathc_parent&quot;&gt;
  &lt;gridview
    android:id=&quot;@+id/idgv&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_widht=&quot;wrap_content&quot;
    android:numcoumns=&quot;2&quot;
    android:verticalspacing=&quot;6dp&quot;/&gt;
&lt;/androidx.contraintlayout.widget.contraintlayout&gt;
</code></pre>
</li>
</ul>
<h3>(iv) imageview.</h3>
<ul>
<li><strong>imageview</strong> - shows image with help <code>android.widget.imageview</code> class.</li>
</ul>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.contraintlayout.widget.contraintlayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:tools=&quot;.mainactivity&quot;
  android:layout_height=&quot;match_parent&quot;
  android:layout_width=&quot;match_parent&quot;&gt;
  &lt;imageview
    android:id=&quot;@+id/imageview&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:src=&quot;@drawable/image&quot;/&gt;
&lt;/androidx.contraintlayout.widget.contraintlayout&gt;
</code></pre>
<h2>7. explain radiogroup with example.</h2>
<ul>
<li><strong>radiobutton</strong> - a radiobutton has two states, either checked or unchecked.</li>
<li><strong>radiogroup</strong> - radiobutton are maninly used together in radiogroup.</li>
<li>Properties of radiobutton:
<ul>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>checked</strong> - in radio button is used to set the current state of radio
button.</li>
<li><strong>gravity</strong> - is an optional attribute which is used to control the
alignement of text like left, right, top, bottom, center_vertical,
center_horizontal etc.</li>
<li><strong>text</strong> - is used to set the text in TextView.</li>
<li><strong>textColor</strong> - is used to set the text color.</li>
<li><strong>textSize</strong> - is used to set the size of text.</li>
<li><strong>textStyle</strong> - is used to set the text style.</li>
<li><strong>background</strong> - is used to set the background.</li>
<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>
<li><strong>drawableButton</strong>, <strong>drawableTop</strong>, <strong>drawableRight</strong>, <strong>drawableLeft</strong> -
we draw drawable to the left, right, top or bottom of text.</li>
</ul>
</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:tools=&quot;.MainActivity&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  android:orientation=&quot;vertical&quot;&gt;
  &lt;RadioGroup
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:id=&quot;@+id/radioGendar&quot;&gt;
    &lt;RadioButton
      android:id=&quot;@+id/radioMan&quot;
      android:text=&quot;Man&quot;
      android:layout_height=&quot;wrap_content&quot;
      android:layout_width=&quot;wrap_content&quot;
      android:checked=&quot;true&quot;/&gt;
    &lt;RadioButton
      android:id=&quot;@+id/radioGirl&quot;
      android:text=&quot;Women&quot;
      android:layout_height=&quot;wrap_content&quot;
      android:layout_width=&quot;wrap_content&quot;
      android:checked=&quot;false&quot;/&gt;
  &lt;RadioGroup&gt;
&lt;/LinearLayout&gt;
</code></pre>
</li>
</ul>
<h2>8. With the help of example describe ToggleButton.</h2>
<ul>
<li><strong>ToggleButton</strong> - is used to display checked and unchecked state of a button.</li>
<li>It is subclass of compound Button.</li>
<li>Properties of radiobutton:
<ul>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>checked</strong> - in radio button is used to set the current state of radio
button.</li>
<li><strong>gravity</strong> - is an optional attribute which is used to control the
alignement of text like left, right, top, bottom, center_vertical,
center_horizontal etc.</li>
<li><strong>textOn</strong> and <strong>textOff</strong> - is used to set the text when toggle button is
in checked state.</li>
<li><strong>textColor</strong> - is used to set the text color.</li>
<li><strong>textSize</strong> - is used to set the size of text.</li>
<li><strong>textStyle</strong> - is used to set the text style.</li>
<li><strong>background</strong> - is used to set the background.</li>
<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>
<li><strong>drawableButton</strong>, <strong>drawableTop</strong>, <strong>drawableRight</strong>, <strong>drawableLeft</strong> -
we draw drawable to the left, right, top or bottom of text.</li>
</ul>
</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.contraintlayout.widget.ContraintLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:tools=&quot;.MainActivity&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;&gt;
  &lt;ToggleButton
    android:id=&quot;@+id/simpleToggleButton&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_gravity=&quot;center_horizontal&quot;
    android:checked=&quot;false&quot;
    android:textOn=&quot;On&quot;
    android:textOff=&quot;Off&quot;/&gt;
&lt;/android.contraintlayout.wiget.ContraintLayout&gt;
</code></pre>
</li>
</ul>
<h2>10. How to custom toast alert?</h2>
<ul>
<li>Toast is used to display information for a period of time.</li>
<li>It contains a message to be displayed quickly and disappears after specified
period of time.</li>
<li>It does not block the user interaction.</li>
<li>Tost are not clickable.</li>
<li>Exmaple:<pre><code class="language-java">Toast.makeText(getApplicationContext(), &quot;Simple Toast in Android&quot;,
  Toast.LENGTH_LONG);
</code></pre>
</li>
</ul>
<h2>11. Describe Date and Time picker with example.</h2>
<h3>DatePicker</h3>
<ul>
<li>
<p>DatePicker is a widget used to select a date.</p>
</li>
<li>
<p>It allows to select date by date, month and year in our custom UI.</p>
</li>
<li>
<p>If we need to show this view as a dialog then wehave to use a DatePickerDialog
class.</p>
</li>
<li>
<p>Example:</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  android:tools=&quot;.MainActivity&quot;
  android:orentation=&quot;vertical&quot;
  android:layout_height=&quot;match_parent&quot;
  android:layout_width=&quot;mathc_parent&quot;/&gt;
  &lt;DatePicker
    android:id=&quot;@+id/datepicker&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:datePickerMode=&quot;spinner&quot;/&gt;
&lt;/LinearLayout&gt;
</code></pre>
</li>
<li>
<p>Method of DatePicker:</p>
<ul>
<li><code>setSpinnersShow(boolen show)</code> - This method is used to set whether the
sinner of the TimePicker in shown or not.</li>
<li><code>getDayOfMonth()</code> - This method is used to get selected day of the month.</li>
<li><code>getMonth()</code> - This method is used to get the selected month from a date
picker.</li>
<li><code>getYear()</code> - This method is used to get the selected year from a date
picker.</li>
<li><code>getFirstDayOfWeek()</code> - This method is used to get the first day of the
week.</li>
</ul>
</li>
<li>
<p>Attributes of DatePicker:</p>
<ul>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>datePickerMode</strong> - This attribute is used to set the DatePicker.</li>
</ul>
</li>
</ul>
<h3>TimePicker</h3>
<ul>
<li>Is a widget used for selecting the time of the day in either AM/PM mode or 24
hours mode.</li>
<li>The displayed time consist of hours, minutes and clock format.</li>
<li>Method of TimePicer:
<ul>
<li><code>setCurrentHour(integer currentHour)</code> - This method is used to set the
current hours in a TimePicker.</li>
<li><code>setHour(Integer hour)</code> - This method is used to set the current hours in
TimePicker.</li>
<li><code>setCurrentMinute(Integer currentMinute)</code> - This method is used to set the
current minutes in a time.</li>
<li><code>setMinute(Integer minute)</code> - This method is used to set the current minute
in time.</li>
<li><code>setIs24HourView(Boolean is24HourView)</code> - This method is used to set the
mode of Time picker either 24 hours mode or AM/PM mode.</li>
<li><code>is24HourView()</code> - This method is used to check the current mode of the
time picker.</li>
<li><code>setOnTimeChangedListenar()</code> - This method is used to set the callback that
indicates the time has been adjusted by the user.</li>
</ul>
</li>
<li>Attributes of TimePicker:
<ul>
<li><code>timePickerMode</code> - The time picker mode is attribute of time picker used to
set the mode either spinner or clock.</li>
</ul>
</li>
</ul>
<h2>12. What is progress bar? How to create it?</h2>
<ul>
<li>ProgressBar is used to show the progress of an operation.</li>
<li>ProgressBar is a visual indicator of progress in a number of operation.</li>
<li>Attributes of DatePicker:
<ul>
<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>
<li><strong>max</strong> - is an attribute used in android to define maximum value of the
progress can take.</li>
<li><strong>progress</strong> - is an attribute used in android to define the default
progress value between 0 and Max.</li>
<li><strong>progressBrawable</strong> - is an attribute used to set the custom drawable for
the progress mode.</li>
</ul>
</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;mathc_parent&quot;/&gt;
  &lt;ProgressBar
    android:id=&quot;@+id/progressBar&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:max=&quot;100&quot;
    android:progress=&quot;0&quot;
    android:progressDrawable=&quot;@drawable/progress&quot;/&gt;
&lt;/RelativeLayout&gt;
</code></pre>
</li>
</ul>
<h2>14. Describe the following with example:</h2>
<h3>(ii) CheckBox.</h3>
<ul>
<li>Is an On/Off switch that can be toggled by the user.</li>
<li>A two-state represented by a checked or unchecked box.</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:tools=&quot;https://schemas.android.com/tools&quot;
  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;mathc_parent&quot;/&gt;
  &lt;CheckBox
    android:id=&quot;@+id/check1&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Android&quot;
    android:checked=&quot;true&quot;/&gt;
  &lt;CheckBox
    android:id=&quot;@+id/check1&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;ISO&quot;
    android:checked=&quot;true&quot;/&gt;
  &lt;CheckBox
    android:id=&quot;@+id/check1&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;KaiOS&quot;
    android:checked=&quot;true&quot;/&gt;
&lt;/RelativeLayout&gt;
</code></pre>
</li>
</ul>
<h2>15. Draw the hierarchy of designing User Interface (UI) with View.</h2>
<pre><code>┌────┐
│View├───────────────────────┐
└─┬──┤                       │
  │  └────────┐              │
  │           │              │
 ┌┴───────┐ ┌─┴───────┐ ┌────┴────┐
 │TextView│ │ImageView│ │ViewGroup│
 └───┬─┬──┘ └────┬────┘ └─────────┘
     │ │         │
     │ └──────┐  └──────┐
     │        │         │
 ┌───┴────┐ ┌─┴────┐ ┌──┴────────┐
 │EditText│ │Button│ │ImageButton│
 └────────┘ └┬──┬─┬┘ └───────────┘
             │  │ │
    ┌────────┘  │ └──────────┐
    │           │            │
 ┌──┴─────┐ ┌───┴───────┐ ┌──┴─────────┐
 │CheckBox│ │RadioButton│ │ToggleButton│
 └────────┘ └───────────┘ └────────────┘
</code></pre>
<h2>16. Describe the term “edit text” with example.</h2>
<ul>
<li>An editable text enty box that accepts multiline entry, word wrapping and
hint text.</li>
<li>A EditText is an overlay over TextView that configures itself to be
editable.</li>
<li>Example:<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;
  xmlns:tools=&quot;https://scheams.android.com/tools&quot;
  xmlns:app=&quot;https://scheams.android.com/apk/res-auto&quot;
  android:layout_width=&quot;match_parent&quot;
  android:layout_height=&quot;match_parent&quot;
  android:tools=&quot;.MainActivity&quot;&gt;
  &lt;EditText
    android:id=&quot;@+id/editIt&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:hint=&quot;Name:&quot;
    android:selectAllOnFocus=&quot;true&quot;
    android:inputType=&quot;textPersonName&quot;/&gt;
&lt;/RelativeLayout&gt;
</code></pre>
</li>
</ul>
<h1>5. Activity &amp; Multimedia with Database</h1>
<h2>Activity</h2>
<ul>
<li>An activity represents a single screen with user interface just like window
or frame of Java.</li>
<li>Android activity is the subclass of ContextThemeWrapper class.</li>
<li>In C, C++ or Java programming language you must have seen that your program
stats from <code>main()</code> function.</li>
<li>Android sytem iniiates its program with an Activity starting with a call
<code>onCreate()</code> callback method.</li>
</ul>
<h2>Draw the activity life cycle.</h2>
<pre><code>                             ┌┬────────┬┐
                             ││Activity││
                             ││launched││
                             └┴────┬───┴┘
                                   │
                              ┌────▼─────┐
         ┌────────────────────►onCreate()│
         │                    └────┬─────┘
         │                         │
         │                    ┌────▼────┐                    ┌───────────┐
         │                    │onStart()◄────────────────────┤onRestart()│
         │                    └────┬────┘                    └───────▲───┘
         │                         │                                 │
User navigates                ┌────▼─────┐                           │
to the activity               │onResume()◄───────────────┐           │
         │                    └────┬─────┘               │           │
         │                         │                     │           │
  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │
  ││App process││            ││Activity││                │           │
  ││killed     ││            ││Running ││                │           │
  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │
         │                         │                     │           │
         │                         ▼                     │           │
Apps with higher priority   Another activity comes   User returns    │
need memory                 into the foreground      to the activity │
         │                         │                     │           │
         │                         │                     │           │
         │                    ┌────▼────┐                │           │
         │                    │onPause()├────────────────┘           │
         │                    └────┬────┘                            │
         │                         │                                 │
         │                         │                                 │
         │                  The activity is                          │
         │                  no longer visible                        │
         │                         │                        User navigates
         │                         │                        to the activity
         │                    ┌────▼───┐                             │
         └────────────────────┤onStop()├─────────────────────────────┘
                              └────┬───┘
                                   │
                                   │
                            The activity is finishing or
                            being destroyed by the system
                                   │
                                   │
                              ┌────▼──────┐
                              │onDestroy()│
                              └────┬──────┘
                                   │
                             ┌┬────▼────┬┐
                             ││Activity ││
                             ││Shut Down││
                             └┴─────────┴┘
</code></pre>
<h2>Explain activity lifecycle?</h2>
<ul>
<li>The android Activity is the subclass of ContextThemeWrapper class.</li>
<li>An activity is the single screen in android. It is like window or frame of
Java.</li>
<li>By the help of activity, you can place all your UI components or widgets in a
single screen.</li>
<li><strong>7 lifecycle methods of android activity.</strong></li>
<li><strong>onCreate</strong> - called when activity is first created.</li>
<li><strong>onStart</strong> - called when activity is becoming visible to the user.</li>
<li><strong>onResume</strong> - called when activity will start interacting with the user.</li>
<li><strong>onPause</strong> - called when activity is not visible to the user.</li>
<li><strong>onStop</strong> - called when activity is no longer visible to the user.</li>
<li><strong>onRestart</strong> - called after your activity is stopped, prior to start.</li>
<li><strong>onDestroy</strong> - called before the activity is destroyed.</li>
</ul>
<h2>What are intents(<code>Implict</code> and <code>explicit</code> intent)?</h2>
<ul>
<li>Android Intent is the message that is passed between components such as
activities, content providers, broadcast receivers, services etc.</li>
<li>It is generally used with <code>startActivity()</code> method to invoke activity,
broadcast receivers etc.  The dictionary meaning of intent is intention or
purpose.</li>
<li>So, it can be described as the intention to do action.</li>
<li>The LabeledIntent is the subclass of android.content.Intent class.</li>
<li>Android intents are mainly used to:
<ul>
<li>Start the service</li>
<li>Launch an activity</li>
<li>Display a web page</li>
<li>Display a list of contacts</li>
<li>Broadcast a message</li>
<li>Dial a phone call etc</li>
</ul>
</li>
</ul>
<h3>Implicit intent</h3>
<p>The implicit intent is the intent where instead of defining the exact
components, you define the action that you want to perform for different
activities.</p>
<h3>Explicit intent</h3>
<p>An explicit intent is an intent where you explicitly define the component that
needs to be called by Android System. An explicit intent is one that you use to
launch a specific app component, such s a particular activity or service in
your app.</p>
<h2>Explain content provider?</h2>
<ul>
<li>Android system allows the content provider to store the application data in
several ways. Users can manage to store the application data like
<ul>
<li>Images</li>
<li>Audio</li>
<li>Videos</li>
<li>Personal contact information by storing them in:
<ul>
<li>SQLite Database</li>
<li>Files</li>
<li>Network.</li>
</ul>
</li>
</ul>
</li>
<li>In order to share the data, content providers have certain permissions that
are used to grant or restrict the rights to other applications to interfere
with the data.</li>
</ul>
<h2>List sensors in Android and explain anyone in detail.</h2>
<p>The Android platform supports following three broad categories of sensors:</p>
<ul>
<li>Motion Sensors</li>
<li>Environmetal Sensors</li>
<li>Position sensors</li>
</ul>
<h3>Motion Sensors:</h3>
<ul>
<li>A motion sensor (or motion detector) is an electronic device that is designed
to detect and measure movement.</li>
<li>Motion sensors are used primarily in home and business security systems.</li>
<li>These sensors measure acceleration forces and rotational forces along three
axes.</li>
<li>This category includes accelerometers, gravity sensors, gyroscopes, and
rotational vector sensors.</li>
</ul>
<h3>Position Sensors</h3>
<p>These are used to measure the physical position of device.</p>
<h3>Environmental Sensors</h3>
<p>These are used to measure the environmental changes such as temperature, humidity
etc</p>
<h2>Define Services in Android OS.</h2>
<ul>
<li>A service is an application component which runs withour direst interaction
with the user in the background.</li>
<li>Services are used for repetitive and potentially long running operations:
<ul>
<li>Internet downloads</li>
<li>Checking for new data</li>
<li>Data processing</li>
<li>Updating content</li>
<li>Providers and the like</li>
</ul>
</li>
<li>They typically run in the background to perform long-running operations or
work for remote processes.</li>
</ul>
<h2>CONTENT URI</h2>
<ul>
<li>Content URI(Uniform Resource Identifier) is the key concept of Content
providers.</li>
<li>To access the data from a content provider, URI is used as a query string.</li>
<li>Structure of a Content URI:
<ul>
<li>content:// – Mandatory part of the URI as it represents that the given URI
is a Content URI.</li>
<li>authority – Signifies the name of the content provider like contacts,
browser, etc. This part must be unique for every content provider.</li>
<li>optionalPath – Specifies the type of data provided by the content provider.
It is essential as this part helps content providers to support different
types of data that are not related to each other like audio and video files.</li>
<li>optionalID – It is a numeric value that is used when there is a need to
access a particular record.</li>
</ul>
</li>
</ul>
<h2>WORKING OF THE CONTENT PROVIDER</h2>
<ul>
<li>UI components of android applications like Activity and Fragments use an object
CursorLoader to send query requests to ContentResolver.</li>
<li>The ContentResolver object sends requests (like create, read, update, and
delete) to the ContentProvider as a client.</li>
<li>After receiving a request, ContentProvider process it and returns the desired
result.</li>
</ul>
<h2>CREATE CONTENT PROVIDER</h2>
<p>This involves number of simple steps to create your own content provider.</p>
<ul>
<li>First of all you need to create a Content Provider class that extends the
ContentProviderbaseclass.</li>
<li>Second, you need to define your content provider URI address which will be
used to access the content.</li>
<li>Next you will need to create your own database to keep the content.</li>
<li>Next you will have to implement Content Provider queries to perform different
database specific operations.</li>
<li>Finally register your Content Provider in your activity file using <provider>
tag.</li>
<li>Methods which you need to override in Content Provider class:
<ol>
<li>onCreate() This method is called when the provider is started.</li>
<li>query() This method receives a request from a client. The result
is returned as a Cursor object.</li>
<li>insert()This method inserts a new record into the content
provider.</li>
<li>delete() This method deletes an existing record from the content
provider.</li>
<li>update() This method updates an existing record from the
content provider.</li>
<li>getType() This method returns the MIME type of the data at the
given URI.</li>
</ol>
</li>
</ul>
<h2>FRAGMENT</h2>
<ul>
<li>A Fragment is a piece of an activity which enable more modular activity
design.</li>
<li>You create fragments by extending Fragment class and You can insert a fragment
into your activity layout by declaring the fragment in the activity’s layout
file, as a <fragment> element.</li>
<li>A fragment has its own layout and its own behaviour with its own life cycle
callbacks.</li>
<li>You can add or remove fragments in an activity while the activity is running.</li>
<li>You can combine multiple fragments in a single activity to build a multi-pane
UI.</li>
<li>A fragment can be used in multiple activities.</li>
</ul>
<h2>ANDROID FRAGMENT LIFECYCLE METHODS</h2>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>onAttach(Activity)</td>
<td>it is called only once when it is attached with activity.</td>
</tr>
<tr>
<td>onCreate(Bundle)</td>
<td>It is used to initialize the fragment.</td>
</tr>
<tr>
<td>onCreateView(LayoutInflater, ViewGroup, Bundle)</td>
<td>creates and returns view hierarchy.</td>
</tr>
<tr>
<td>onActivityCreated(Bundle)</td>
<td>It is invoked after the completion of onCreate() method.</td>
</tr>
<tr>
<td>onViewStateRestored(Bundle)</td>
<td>It provides information to the fragment that all the saved state of fragment view hierarchy has been restored.</td>
</tr>
<tr>
<td>onStart()</td>
<td>makes the fragment visible.</td>
</tr>
<tr>
<td>onResume()</td>
<td>makes the fragment interactive.</td>
</tr>
<tr>
<td>onPause()</td>
<td>is called when fragment is no longer interactive.</td>
</tr>
<tr>
<td>onStop()</td>
<td>is called when fragment is no longer visible.</td>
</tr>
<tr>
<td>onDestroyView()</td>
<td>allows the fragment to clean up resources.</td>
</tr>
<tr>
<td>onDestroy()</td>
<td>allows the fragment to do final clean up of fragment state.</td>
</tr>
<tr>
<td>onDetach()</td>
<td>It is called immediately prior to the fragment no longer being associated with its activity.</td>
</tr>
</tbody>
</table>
<h2>MEDIAPLAYER CLASS</h2>
<ul>
<li>We can play and control the audio files in android by the help of MediaPlayer
class.</li>
<li>The android.media.MediaPlayer class is used to control the audio or video
files.
|                                                Method &amp; description                                                |
|:------------------------------------------------------------------------------------------------------------------:|
| <code>isPlaying()</code> This method just returns true/false indicating the song is playing or not                            |
| <code>seekTo(position)</code> This method takes an integer, and move song to that particular position millisecond             |
| <code>getCurrentPosition()</code> This method returns the current position of song in milliseconds                            |
| <code>getDuration()</code> This method returns the total time duration of song in milliseconds                                |
| <code>reset()</code> This method resets the media player                                                                      |
| <code>release()</code> This method releases any resource attached with MediaPlayer object                                     |
| <code>setVolume(float leftVolume, float rightVolume)</code> This method sets the up down volume for this player               |
| <code>setDataSource(FileDescriptor fd)</code> This method sets the data source of audio/video file                            |
| <code>selectTrack(int index)</code> This method takes an integer, and select the track from the list on that particular index |
| <code>getTrackInfo()</code> This method returns an array of track information                                                 |</li>
</ul>
<h2>TEXTTOSPEECH</h2>
<ul>
<li>Android allows you convert your text into voice. Not only you can convert it
but it also allows you to speak text in variety of different languages.</li>
<li>TextToSpeech class is responsible to convert text into speech.</li>
<li>It provides a lot of methods to control the speech such as setSpeedRate(),
setPitch() etc.
|                                               Method &amp; description                                              |
|:---------------------------------------------------------------------------------------------------------------:|
| <code>addSpeech(String text, String filename)</code> This method adds a mapping between a string of text and a sound file. |
| <code>getLanguage()</code> This method returns a Locale instance describing the language.                                  |
| <code>isSpeaking()</code> This method checks whether the TextToSpeech engine is busy speaking.                             |
| <code>setPitch(float pitch)</code> This method sets the speech pitch for the TextToSpeech engine.                          |
| <code>setSpeechRate(float speechRate)</code> This method sets the speech rate.                                             |
| <code>shutdown()</code> This method releases the resources used by the TextToSpeech engine.                                |
| <code>stop()</code> This method stop the speak.                                                                            |</li>
</ul>
<h2>Android AsyncTask example and explanation</h2>
<ul>
<li>Android AsyncTask going to do background operation on background thread and
update on main thread.</li>
<li>In android we cant directly touch background thread to
main thread in android development. asynctask help us to make communication
between background thread to main thread.</li>
</ul>
<h3>Methods of AsyncTask</h3>
<ul>
<li><code>onPreExecute()</code> − Before doing background operation we should show something
on screen like progressbar or any animation to user. we can directly
comminicate background operation using on</li>
<li><code>doInBackground()</code> -  but for the best practice, we should call all asyncTask
methods .</li>
<li><code>doInBackground(Params)</code> − In this method we have to do background operation
on background thread. Operations in this method should not touch on any
mainthread activities or fragments.</li>
<li><code>onProgressUpdate(Progress…)</code> − While doing background operation, if you want
to update some information on UI, we can use this method.</li>
<li><code>onPostExecute(Result)</code> − In this method we can update ui of background
operation result.</li>
</ul>
<h3>Generic Types in Async Task</h3>
<ul>
<li><code>TypeOfVarArgParams</code> − It contains information about what type of params used
for execution.</li>
<li><code>ProgressValue</code> − It contains information about progress units. While doing
background operation we can update information on ui using onProgressUpdate().</li>
<li><code>ResultValue</code> −It contains information about result type.</li>
</ul>
<h2>LOCATION BASED SERVICES</h2>
<ul>
<li>Android location APIs make it easy for you to build location-aware
applications, without needing to focus on the details of the underlying
location technology.</li>
<li>This becomes possible with the help of Google Play services, which facilitates
adding location awareness to your app with automated location tracking,
geofencing, and activity recognition.</li>
<li>For this Google provides us a library via Google Play Services for using maps.</li>
<li>In order to use the Google Maps API, you must register your application on
the Google Developer Console and enable the API.</li>
</ul>
<h2>SMS TELEPHONY</h2>
<ul>
<li>In Android, you can use SmsManager API or devices Built-in SMS application to
send SMS’s.</li>
<li>SmsManager API<pre><code class="language-java">SmsManager smsManager = SmsManager.getDefault();
sms.sendTextMessage(&quot;8802177690&quot;, null, &quot;hello javatpoint&quot;, pi,null);
</code></pre>
</li>
<li>Built-in SMS application<pre><code class="language-java">Intent sendIntent = new Intent(Intent.ACTION_VIEW);
sendIntent.putExtra(&quot;sms_body&quot;, &quot;default content&quot;);
sendIntent.setType(&quot;vnd.android-dir/mms-sms&quot;);
startActivity(sendIntent);
</code></pre>
</li>
<li>Both need SEND_SMS permission.<pre><code class="language-xml">&lt;uses-permission android:name=&quot;android.permission.SEND_SMS&quot; /&gt;
</code></pre>
</li>
</ul>]]></content>
  </entry>
  <entry>
    <title>pratical s6</title>
    <link href="https://anzenkodo.github.io/notes/programming/android/pratical-s6.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/android/pratical-s6.html</id>
    <content type="html"><![CDATA[<h2>1. Write a program to place Name, Age, Mobile number linearly(vertical) on the display screen using Linear layout.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;16dp&quot;
    android:paddingRight=&quot;16dp&quot;
    android:paddingTop=&quot;16dp&quot;
    android:orientation=&quot;vertical&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:id=&quot;@+id/student_name&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Name:&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Age:&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Mobile Number:&quot; /&gt;
&lt;/LinearLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/01/program-to-place-ui-component-in-linear-vertical-layout-in-Android-Studio.html">Source</a></p>
<h2>2. Write a program to place Name, Age, Mobile number linearly(vertical) on the display screen using Absolute layout.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;AbsoluteLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;16dp&quot;
    android:paddingTop=&quot;16dp&quot;
    android:paddingRight=&quot;16dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:id=&quot;@+id/student_name&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;280dp&quot;
        android:text=&quot;Name:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;304dp&quot;
        android:text=&quot;Age:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;328dp&quot;
        android:text=&quot;Mobile Number:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
&lt;/AbsoluteLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/01/absolute-layout-centrally-in-Android-Studio.html">Source</a></p>
<h2>3. Write a program to display 5 students basic information in a table form using Table layout.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:collapseColumns=&quot;*&quot;
    android:shrinkColumns=&quot;*&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center_horizontal&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:text=&quot;10 Students Basic Information&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textSize=&quot;20dp&quot;
            android:textStyle=&quot;bold&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student Numbers&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Name&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;RollNo&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Age&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:text=&quot;Student 1:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot;
            /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 2:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 3:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 4:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 5:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
&lt;/TableLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/02/program-to-display-10-students-basic-info-in-table-layout-android.html">Source</a></p>
<h2>4. Write a program to accept username and password from the end user using Text View and edit Text.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:padding=&quot;50dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center&quot;
        android:textSize=&quot;25dp&quot;
        android:text=&quot;Login Page&quot; /&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center_horizontal&quot;&gt;
        &lt;TextView
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:gravity=&quot;center&quot;
            android:text=&quot;Enter UserName:&quot; /&gt;

        &lt;EditText
            android:id=&quot;@+id/user&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:hint=&quot;abc@gmail.com&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center_horizontal&quot;&gt;
        &lt;TextView
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:gravity=&quot;center&quot;
            android:text=&quot;Enter Password:&quot; /&gt;
        &lt;EditText
            android:id=&quot;@+id/pass&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:hint=&quot;1234&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;Button
        android:id=&quot;@+id/btn1&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_marginBottom=&quot;172dp&quot;
        android:text=&quot;Login&quot; /&gt;
&lt;/TableLayout&gt;
</code></pre>
<pre><code class="language-java">import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
   EditText user,pass;
    Button b;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        b= findViewById(R.id.btn1);
        user = findViewById(R.id.user);
        pass = findViewById(R.id.pass);
        b.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(user.getText().toString().equals(&quot;atharva&quot;) &amp; pass.getText().toString().equals(&quot;1234&quot;))
?
                {
                    Toast.makeText( getApplicationContext(),&quot;Login Sucessful&quot;,Toast.LENGTH_SHORT).show();
                }
                else
                {
                    Toast.makeText( getApplicationContext(),&quot;Login UnSucessful&quot;,Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
}
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/03/program-to-accept-username-and-password-in-Android-Studio.html">Source</a></p>
<h2>5. Write a program to create a toggle button to display ON/OFF Bluetooth on the display screen.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.MainActivity&quot;
    android:padding=&quot;20dp&quot;&gt;
    &lt;ToggleButton
        android:id=&quot;@+id/toggleButton&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;50dp&quot;
        android:text=&quot;ToggleButton&quot;
        android:textOn=&quot;ON&quot;
        android:textOff=&quot;OFF&quot;
        android:textSize=&quot;20sp&quot;
        android:layout_centerInParent=&quot;true&quot;/&gt;
    &lt;TextView android:id=&quot;@+id/textView&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_below=&quot;@id/toggleButton&quot;
        android:text=&quot;Bluetooth is OFF&quot;
        android:gravity=&quot;center_horizontal&quot;
        android:layout_marginTop=&quot;20dp&quot;
        android:textSize=&quot;20sp&quot;
        android:textColor=&quot;@color/colorAccent&quot;/&gt;
&lt;/RelativeLayout&gt;
</code></pre>
<pre><code class="language-java">package com.example.togglebuttonbluetooth;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.CompoundButton;
import android.widget.TextView;
import android.widget.ToggleButton;

public class MainActivity extends AppCompatActivity {

    ToggleButton toggleButton;
    TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        toggleButton = findViewById(R.id.toggleButton);
        textView = findViewById(R.id.textView);

        toggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

                if(isChecked)
                {
                    textView.setText(&quot;Bluetooth is &quot; + toggleButton.getTextOn());
                }
                else
                {
                    textView.setText(&quot;Bluetooth is &quot; + toggleButton.getTextOff());
                }
            }
        });
    }
}
</code></pre>
<p><a href="http://www.programmingtutorials4u.com/android-programming/programs/android-toggle-button/">Source</a></p>
<h2>6. Write a program to create a login form for a social networking site.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:background=&quot;#495B8F&quot;
    android:padding=&quot;20dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;TextView android:id=&quot;@+id/logo&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;80dp&quot;
        android:text=&quot;F A C E B O O K&quot;
        android:gravity=&quot;center&quot;
        android:textSize=&quot;40sp&quot;
        android:textStyle=&quot;bold&quot;
        android:layout_marginTop=&quot;40dp&quot;
        android:textColor=&quot;@android:color/white&quot;/&gt;

    &lt;EditText
        android:id=&quot;@+id/username&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;60dp&quot;
        android:layout_below=&quot;@id/logo&quot;
        android:layout_marginTop=&quot;30dp&quot;
        android:background=&quot;@android:color/white&quot;
        android:fontFamily=&quot;monospace&quot;
        android:hint=&quot;Email or phone number&quot;
        android:padding=&quot;10dp&quot;
        android:textSize=&quot;22sp&quot; /&gt;

    &lt;EditText
        android:id=&quot;@+id/password&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;60dp&quot;
        android:layout_below=&quot;@id/username&quot;
        android:background=&quot;@android:color/white&quot;
        android:fontFamily=&quot;monospace&quot;
        android:hint=&quot;Password&quot;
        android:padding=&quot;10dp&quot;
        android:layout_marginTop=&quot;20dp&quot;
        android:textSize=&quot;22sp&quot; /&gt;

    &lt;Button android:id=&quot;@+id/btnLogin&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;50dp&quot;
        android:layout_below=&quot;@id/password&quot;
        android:layout_marginTop=&quot;30dp&quot;
        android:text=&quot;Log In&quot;
        android:background=&quot;#6D9ADD&quot;
        android:textColor=&quot;@android:color/white&quot;
        android:textSize=&quot;18sp&quot;/&gt;

    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_centerHorizontal=&quot;true&quot;
        android:text=&quot;Forgot Password?&quot;
        android:textColor=&quot;@android:color/white&quot;
        android:layout_below=&quot;@id/btnLogin&quot;
        android:layout_marginTop=&quot;10dp&quot;
        android:textSize=&quot;16sp&quot;/&gt;

&lt;/RelativeLayout&gt;
</code></pre>
<pre><code class="language-java">package com.example.socialnetworkingapp;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}
</code></pre>
<p><a href="http://www.programmingtutorials4u.com/android-programming/programs/social-networking-login-form/">Source</a></p>
<h2>7. Write a program to show five checkboxes and toast selected checkbox.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:orientation=&quot;vertical&quot;
    android:padding=&quot;10dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;CheckBox
        android:id=&quot;@+id/cb1&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Android&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;

    &lt;CheckBox
        android:id=&quot;@+id/cb2&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Pythpn&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;
    &lt;CheckBox
        android:id=&quot;@+id/cb3&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;PHP&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;
    &lt;CheckBox
        android:id=&quot;@+id/cb4&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;C&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;
    &lt;CheckBox
        android:id=&quot;@+id/cb5&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Java&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;

    &lt;Button
        android:id=&quot;@+id/btn&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Submit&quot;
        android:textSize=&quot;35dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;/&gt;
&lt;/LinearLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/03/program-demonstrate-checkboxes-in-android-studio.html">Source</a></p>
<h2>8. Write a program to display circular progress bar.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:gravity=&quot;center_horizontal&quot;
    android:orientation=&quot;vertical&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;RelativeLayout
        android:id=&quot;@+id/progress_layout&quot;
        android:layout_width=&quot;200dp&quot;
        android:layout_height=&quot;200dp&quot;
        android:layout_margin=&quot;100dp&quot;&gt;

        &lt;!--progress bar implementation--&gt;
        &lt;ProgressBar
            android:id=&quot;@+id/progress_bar&quot;
            style=&quot;?android:attr/progressBarStyleHorizontal&quot;
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;match_parent&quot;
            android:background=&quot;@drawable/circular_shape&quot;
            android:indeterminate=&quot;false&quot;
            android:progressDrawable=&quot;@drawable/circular_progress_bar&quot;
            android:textAlignment=&quot;center&quot; /&gt;

        &lt;!--Text implementation in center of the progress bar--&gt;
        &lt;TextView
            android:id=&quot;@+id/progress_text&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_alignParentLeft=&quot;true&quot;
            android:layout_alignParentRight=&quot;true&quot;
            android:layout_centerVertical=&quot;true&quot;
            android:gravity=&quot;center&quot;
            android:text=&quot;---&quot;
            android:textColor=&quot;@color/colorPrimary&quot;
            android:textSize=&quot;28sp&quot;
            android:textStyle=&quot;bold&quot; /&gt;
    &lt;/RelativeLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>
<pre><code class="language-java">import android.os.Bundle;
import android.os.Handler;
import android.widget.ProgressBar;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private ProgressBar progressBar;
    private TextView progressText;
    int i = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // set the id for the progressbar and progress text
        progressBar = findViewById(R.id.progress_bar);
        progressText = findViewById(R.id.progress_text);

        final Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                // set the limitations for the numeric
                // text under the progress bar
                if (i &lt;= 100) {
                    progressText.setText(&quot;&quot; + i);
                    progressBar.setProgress(i);
                    i++;
                    handler.postDelayed(this, 200);
                } else {
                    handler.removeCallbacks(this);
                }
            }
        }, 200);
    }
}
</code></pre>
<p><a href="https://www.geeksforgeeks.org/how-to-implement-circular-progressbar-in-android/">Source</a></p>
<h2>9. Write a program to display 15 buttons using Grid view.</h2>
<p><a href="https://codingatharva.blogspot.com/2020/03/program-to-display-15-buttons-using-grid-view-in-android-studio.html">Source</a></p>
<h2>10. Write a program to display a toast message</h2>
<pre><code class="language-java">import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    Button b1;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        b1 = (Button) findViewById(R.id.toast_button);

        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(MainActivity.this,&quot;You just Toasted me!!!&quot;,Toast.LENGTH_LONG).show();
                /*Another way to display a Toast message
                    Toast t=Toast.makeText(MainActivity.this,&quot;You just Toasted me!!!&quot;,Toast.LENGTH_LONG);
                    t.show();
                */
            }
        });
    }

}
</code></pre>
<pre><code class="language-xml">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:id=&quot;@+id/activity_main&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;
    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;
    tools:context=&quot;codedost.toast.MainActivity&quot;&gt;

    &lt;Button
        android:id=&quot;@+id/toast_button&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Toast me!&quot;
        android:layout_centerVertical=&quot;true&quot;
        android:layout_centerHorizontal=&quot;true&quot;
    /&gt;

&lt;/RelativeLayout&gt;
</code></pre>
<p><a href="https://www.javatpoint.com/android-toast-example">Source</a></p>]]></content>
  </entry>
  <entry>
    <title>viva 6s</title>
    <link href="https://anzenkodo.github.io/notes/programming/android/viva-6s.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/android/viva-6s.html</id>
    <content type="html"><![CDATA[<h1>MAD VIVA QUESTION</h1>
<p>(thk to SaturoGojoo,AK,NEWBIEN00B)</p>
<h2>1) What is android?</h2>
<p>Android is a mobile operating system based on a modified version of the Linux kernel and other open source software, designed primarily for touchscreen mobile devices such as smartphones and tablets.</p>
<h2>2) Enlist Features of android?</h2>
<ul>
<li>Open Source</li>
<li>Beautiul UI</li>
<li>Connectivity</li>
<li>Storage</li>
<li>Multi-Touch</li>
<li>Multi-Tasking</li>
<li>Multi-Language</li>
<li>Resizable widgets</li>
<li>Messaging</li>
<li>Media Support</li>
<li>Web Browser</li>
</ul>
<h2>3) Explain android architecture?</h2>
<ul>
<li>
<p>Android architecture contains different number of components to support any android device needs. Android software contains an open-source Linux Kernel having collection of number of C/C++ libraries which are exposed through an application framework services.</p>
</li>
<li>
<p>The main components of android architecture are following:</p>
</li>
</ul>
<ol>
<li><strong>Applications:</strong> Applications is the top layer of android architecture. The pre-installed applications like home, contacts, camera, etc and third party applications will be installed on this layer only.</li>
<li><strong>Application framework:</strong> Application Framework provides several important classes which are used to create an Android application.</li>
<li><strong>Application runtime:</strong> Android Runtime environment contains components like core libraries and the Dalvik virtual machine(DVM).</li>
<li><strong>Platform libraries:</strong> The Platform Libraries includes various C/C++ core libraries and Java based libraries such as Media, Graphics, OpenGL etc. to provide a support for android development.</li>
<li><strong>Linux Kernel:</strong> The linux kernel manages all the available drivers such as display drivers, camera drivers, audio drivers, etc. which are required during the runtime.</li>
</ol>
<h2>4) Explain android sdk?</h2>
<ul>
<li>The Android software development kit(SDK)  allows developers to create applications for the Android platform. The Android SDK is the most important software of Android which is installed.</li>
<li>The Android SDK provides to test application API libraries and emulator documentation sample code developer tools and tutorials which helps us to build and test the debug apps from Android.</li>
<li>Android SDK provides the tools and application programming interface(API)  for developers to create applications on the Android platform using Java programming language.</li>
</ul>
<h2>5) What is Android AVD?</h2>
<ul>
<li>An AVD is an emulator configuration that enables to modules an actual device
by calling hardware and software option to be emulated by the Android
emulator.</li>
<li>The AVD manager is an interface that we can launch from android studio which
helps us to create and manage AVD.</li>
<li>An AVD contains hardware profile, system image, storage area, skin and other
properties.</li>
<li>AVD contains emulator for Wear OS, TV, Mobile Phones, Tables, Automotive.</li>
</ul>
<h3>Hardware profile</h3>
<ul>
<li>Hardware profile defines the characteristics of a device as shipped from the
factory of a device as shipped from the factory.</li>
<li>The AVD manager comes preloaded with certain hardware profile such as Pixel
device and we can define or customize the hardware profile as needed.</li>
</ul>
<h3>System image</h3>
<ul>
<li>A system image labelled with Google API includes access to Google Play
services.</li>
<li>A system image Labelled with Google Play logo in the Play Store includes the
Google Play Store apps and can access to the Google Play Services.</li>
</ul>
<h3>Storage Area</h3>
<ul>
<li>The AVD has dedicated storage area on our development machine.</li>
<li>It stores the devices data such as installed apps and settings, as well as
emulated and SD cards.</li>
<li>If needed we can use the AVD manager to wipe user data so that the devices has
the same data as if it was a new device.</li>
</ul>
<h2>6) What is emulator?</h2>
<p>The Android Emulator simulates Android devices on your computer so that you can test your application on a variety of devices and Android API levels without needing to have each physical device.</p>
<h2>7) Difference between JVM and dVM?</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android Operating system.</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based virtual machine architecture.</td>
<td>It is based on register based virtual machine architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>8) What are activities?</h2>
<ol>
<li>Activities dictate the UI and handles the user interaction to the smart phone screen.</li>
<li>Activities represent a single screen that user interact.</li>
</ol>
<h2>9) What are services?</h2>
<ul>
<li>A service is an application component which runs in the background.</li>
<li>There are three types of service in Android:</li>
</ul>
<h3>Foreground service</h3>
<ul>
<li>A foreground service performs some operation that is noticeable to the user.</li>
<li>For example, an audio app would use a foreground service to play an audio track.</li>
<li>Foreground services must display a Notification. Foreground services continue running even when the user isn’t interacting with the app.</li>
</ul>
<h3>Backgroud Service**</h3>
<ul>
<li>A background service performs an operation that isn’t directly noticed by the user.</li>
<li>For example, if an app used a service to compact its storage, that would usually be a background service.</li>
</ul>
<h3>Bound Service</h3>
<ul>
<li>A service is bound when an application component binds to it by calling bindService().</li>
<li>A bound service offers a client-server interface that allows components to interact with the service, send requests, receive results, and even do so across processes with interprocess communication (IPC).</li>
</ul>
<h2>10) What are intents(<code>Implict</code> and <code>explicit</code> intent)?</h2>
<h3>Implicit intent</h3>
<p>The implicit intent is the intent where instead of defining the exact components, you define the action that you want to perform for different activities.</p>
<h3>Explicit intent</h3>
<p>An explicit intent is an intent where you explicitly define the component that needs to be called by Android System. An explicit intent is one that you use to launch a specific app component, such s a particular activity or service in your app.</p>
<h2>11) Explain main Activity file ,manifest and layout file?</h2>
<p><strong>MainActivity file</strong>
The main activity. Java file is automatically kept in this folder by Android studio all the classes will be available here and Android studio will even bundle together the package so that we can work with the file without having to go through all the folders.</p>
<p><strong>Manifest file</strong>
It contains an Android manifest.xml file that is generated by Android studio when we create a project. This file contains the configuration parameters of a project such as Permission services and additional libraries.</p>
<p><strong>Layout file</strong>
Layout specifies the various widgets to be used in the UI and the relationships between such widgets and their containers. Layout files are stored in “res-&gt; layout” in the Android application.</p>
<h2>12) What are different types of UI compents?</h2>
<p><strong>TextView</strong>
TextView is a UI Component that displays the text to the user on their Display Screen.
<strong>EditText</strong>
EditText is a user interface control that allows the users to enter some text.
<strong>Button</strong>
This is a UI that is used to perform some action as soon as the user clicks on it.
<strong>ProgressBar</strong>
Progress bars are used to show progress of a task. For example, when you are uploading or downloading something from the internet, it is better to show the progress of download/upload to the user. In android there is a class called Progress Dialog that allows you to create progress bar.</p>
<h2>13) What are Layouts (<code>LinearLayout</code>, <code>AbsoluteLayout</code>, <code>TableLayout</code>, <code>FrameLayout</code>, <code>RelativeLayout</code>)?</h2>
<p><strong>LinearLayout</strong> is a view group that aligns all children in a single direction, vertically or horizontally.
<strong>AbsoluteLayout</strong> enables us to specify the exact location of its children.
<strong>TableLayout</strong> is a view that groups views into rows and columns.
<strong>RelativeLayout</strong> is a view group that displays child views in relative positions.
<strong>FrameLayout</strong> is a placeholder on screen that we can use to display a single view.</p>
<h2>14) Define: <code>textview</code>, <code>Edittextview</code>, <code>Button</code>, <code>Image button</code>, <code>checkbox</code>(attributes and methods)?</h2>
<ul>
<li><strong>TextView</strong> - This control is used to display text to the user.</li>
<li><strong>EditTextView</strong> - EditText is a predefined subclass of TextView that includes rich editing capabilities.</li>
<li><strong>Button</strong> - A push-button that can be pressed, or clicked, by the user to perform an action.</li>
<li><strong>ImageButton</strong> - An ImageButton is an AbsoluteLayout which enables you to specify the exact location of its children. This shows a button with an image (instead of text) that can be pressed or clicked by the user.</li>
<li><strong>CheckBox</strong> - An on/off switch that can be toggled by the user. You should use check box when presenting users with a group of selectable options that are not mutually exclusive.</li>
</ul>
<h2>15) Explain <code>listview</code>, <code>gridview</code>, <code>imageview</code>, <code>scrollview</code>?</h2>
<ul>
<li><strong>ListView</strong> - List of scrollable items can be displayed in Android using ListView. It helps you to displaying the data in the form of a scrollable list.</li>
<li><strong>GridView</strong> - It is a view group that display items in two dimensional scrolling grid (rows and columns), the grid items are not necessarily predetermined but they are automatically inserted to the layout using a ListAdapter.</li>
<li><strong>ImageView</strong> - It is used to display an image file in application.</li>
<li><strong>Scrollview</strong> - It is a view group that is used to make vertically scrollable views. A scroll view contains a single direct child only.</li>
</ul>
<h2>16) What is toast explain with example?</h2>
<ul>
<li>Toast is used to display information for a period of time.</li>
<li>It contains a message to be displayed quickly and disappears after specified period of time.</li>
<li>It does not block the user interaction.</li>
<li>Example:</li>
</ul>
<pre><code class="language-xml=">Toast.makeText(getApplicationContext(),&quot;Hello Javatpoint&quot;,Toast.LENGTH_SHORT).show();
</code></pre>
<h2>17) Explain activity lifecycle?</h2>
<!-- Android Activity Lifecycle is controlled by 7 methods of android.app.Activity class.
- The android Activity is the subclass of ContextThemeWrapper class.
- An activity is the single screen in android. It is like window or frame of Java.
- By the help of activity, you can place all your UI components or widgets in a single screen.

![Activity Lifecycle Image](https://i.imgur.com/VKu9fbr.png)-->
<ul>
<li><strong>7 lifecycle methods of android activity.</strong>
<ul>
<li><strong>onCreate</strong> - called when activity is first created.</li>
<li><strong>onStart</strong> - called when activity is becoming visible to the user.</li>
<li><strong>onResume</strong> - called when activity will start interacting with the user.</li>
<li><strong>onPause</strong> - called when activity is not visible to the user.</li>
<li><strong>onStop</strong> - called when activity is no longer visible to the user.</li>
<li><strong>onRestart</strong> - called after your activity is stopped, prior to start.</li>
<li><strong>onDestroy</strong> - called before the activity is destroyed.</li>
</ul>
</li>
</ul>
<h2>18) Explain broadcast receivers?</h2>
<p>Broadcast Receivers simply respond to broadcast messages from other applications or from the system itself. These messages are sometime called events or intents.</p>
<h3>Creating the Broadcast Receiver</h3>
<p>A broadcast receiver is implemented as a subclass of Broadcast Receiver class and overriding the <code>onReceive()</code> method where each message is received as an Intent object parameter.</p>
<h3>Registering Broadcast Receiver</h3>
<p>An application listens for specific broadcast intents by registering a broadcast receiver in AndroidManifest.xml file. Consider we are going to register MyReceiver for system generated event <code>ACTION_BOOT_COMPLETED</code> which is fired by the system once the Android system has completed the boot process.</p>
<h2>19) Explain content provider?</h2>
<p>Android system allows the content provider to store the application data in several ways. Users can manage to store the application data like images, audio, videos, and personal contact information by storing them in SQLite Database, in files, or even on a network. In order to share the data, content providers have certain permissions that are used to grant or restrict the rights to other applications to interfere with the data.</p>
<h2>20) What is sensors?</h2>
<ul>
<li>Most Android-powered devices have built-in sensors that measure motion, orientation, and various environmental conditions.</li>
<li>These sensors are capable of providing raw data with high precision and accuracy, and are useful if you want to monitor three-dimensional device movement or positioning, or you want to monitor changes in the ambient environment near a device.</li>
<li>There are three type of sensors in android:</li>
</ul>
<h3>Mostion sensors</h3>
<p>These sensors measure acceleration forces and rotational forces along three axes. This category includes accelerometers, gravity sensors, gyroscopes, and rotational vector sensors.</p>
<h3>Environmental sensors</h3>
<p>These sensors measure various environmental parameters, such as ambient air temperature and pressure, illumination, and humidity. This category includes barometers, photometers, and thermometers.</p>
<h3>Position sensors</h3>
<p>These sensors measure the physical position of a device. This category includes orientation sensors and magnetometers.</p>
<h2>21) What is location based services?</h2>
<p><strong>Location Based Services:</strong> Creating the Project, Getting the Maps API Key, Displaying the Map, Displaying the Zoom Control, Navigating to a Specific Location, Adding Markers, Getting Location,Geocoding and Reverse Geocoding, Getting Location Data, Monitoring Location.</p>
<h2>22) What is Geo code and reverse Geo code?</h2>
<h3>Geo code</h3>
<p>Geocoding is the process of converting addresses (like a street address) into geographic coordinates (like latitude and longitude), which you can use to place markers on a map, or position the map.</p>
<h3>Reverse Geo code</h3>
<p>Reverse geocoding is the process of converting geographic coordinates into a human-readable address.</p>
<h2>23) Enlist Steps to publish android application?</h2>
<p><strong>Step 1:</strong> First generate signed apk of your Android App to publish it on Play Store.
<strong>Step 2:</strong> Sign up for Google Play Console to publish and manage your Android App.
<strong>Step 3:</strong> Now click on Create Application.
<strong>Step 4:</strong> Now fill store listing details of your App which include Title, Short and Full description.
<strong>Step 5:</strong> Now Click on ready on publish along with save draft and click on Manage release.
<strong>Step 6:</strong> After Manage production click on edit release.
<strong>Step 7:</strong> Now click on review.
<strong>Step 8:</strong> After review click on Start Rollout to production.</p>
<h2>24) What is Date and time Picker?</h2>
<h3>Datepicker</h3>
<ul>
<li>Datepicker is a widget used to select a date. It allows to select date by day, month and year in your custom UI (user interface).</li>
<li>Methods of DatePicker inckudes getDayOfMonth(), getMonth(), getYear(), getFirstDayOfWeek()</li>
</ul>
<h3>Timepicker</h3>
<ul>
<li>Timepicker is a widget used for selecting the time of the day in either AM/PM mode or 24 hours mode. The displayed time consist of hours, minutes and clock format.</li>
<li>Methods of Timepicker inckudes setCurrentHour(), setHour(), setCurrentMinute(), getCurrentMinute()</li>
</ul>]]></content>
  </entry>
  <entry>
    <title>java</title>
    <link href="https://anzenkodo.github.io/notes/programming/languages/java.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/languages/java.html</id>
    <content type="html"><![CDATA[<h1>Java</h1>
<h2>1) Write a program to check number is even or odd using if else.</h2>
<pre><code class="language-java">import java.util.Scanner;

/**
 * Java Program - Check if Number is Even or Odd
 */

public class Example {

    public static void main(String[] args) {
        //create a scanner to read bytes from console entered by user via keyboard
        Scanner scanner = new Scanner(System.in);

        System.out.print(&quot;Enter a number : &quot;);
        //read integer from user
        int a = scanner.nextInt();

        //check if the number is even or odd
        if(a%2==0) {
            System.out.println(&quot;The number is even.&quot;);
        } else {
            System.out.println(&quot;The number is odd.&quot;);
        }

        //close the scanner
        scanner.close();
    }
}
</code></pre>
<p>O/P</p>
<pre><code>Enter a number : 4
The number is even.
</code></pre>
<h2>2) Write a program to check switch case statement using character datatype.</h2>
<pre><code class="language-java">public class SwitchExample {
public static void main(String[] args) {
    //Declaring a variable for switch expression
    String name=&quot;a&quot;;
    //Switch expression
    switch(name){
    //Case statements
    case &quot;a&quot;: System.out.println(&quot;Aman is in Database.&quot;);
    break;
    case &quot;r&quot;: System.out.println(&quot;Ravi is in Database.&quot;);
    break;
    case &quot;g&quot;: System.out.println(&quot;Gita is in Database.&quot;);
    break;
    //Default case statement
    default:System.out.println(&quot;Name is not in database.&quot;);
    }
}
}
</code></pre>
<pre><code>Aman is in Database.
</code></pre>
<h2>3) Develop a program to print command line argument using for loop.</h2>
<pre><code class="language-java">class CommandLineExample{
    public static void main(String args[]){
        System.out.println(&quot;Your first argument is: &quot;+args[0]);
        for (int i; i &lt;= 5; i++) {
            System.out.println(arg[0]);
        }
    }
}
</code></pre>
<p>O/P</p>
<pre><code>&gt; java CommandLineExample Hello
Your first argument is: Hello
Hello
Hello
Hello
Hello
Hello
Hello
</code></pre>
<h2>4) Develop a program to show the use of implicit typecasting.</h2>
<pre><code class="language-java">public class ImplicitTypecastingExample {
   public static void main(String args[]) {
      byte p = 12;
      System.out.println(&quot;byte value : &quot;+p);
      // Implicit Typecasting
      short q = p;
      System.out.println(&quot;short value : &quot;+q);
      int r = q;
      System.out.println(&quot;int value : &quot;+r);
      long s = r;
      System.out.println(&quot;long value : &quot;+s);
      float t = s;
      System.out.println(&quot;float value : &quot;+t);
      double u = t;
      System.out.println(&quot;double value : &quot;+u);
   }
}
</code></pre>
<pre><code>byte value : 12
short value : 12
int value : 12
long value : 12
float value : 12.0
double value : 12.0
</code></pre>
<h2>5) Write a program to implement different types of constructors to perform addition of complex numbers.</h2>
<pre><code class="language-java">public class ComplexNumber{
   //for real and imaginary parts of complex numbers
   double real, img;

   //constructor to initialize the complex number
   ComplexNumber(double r, double i){
	this.real = r;
	this.img = i;
   }

   public static ComplexNumber sum(ComplexNumber c1, ComplexNumber c2)
   {
	//creating a temporary complex number to hold the sum of two numbers
        ComplexNumber temp = new ComplexNumber(0, 0);

        temp.real = c1.real + c2.real;
        temp.img = c1.img + c2.img;

        //returning the output complex number
        return temp;
    }
    public static void main(String args[]) {
	ComplexNumber c1 = new ComplexNumber(5.5, 4);
	ComplexNumber c2 = new ComplexNumber(1.2, 3.5);
        ComplexNumber temp = sum(c1, c2);
        System.out.printf(&quot;Sum is: &quot;+ temp.real+&quot; + &quot;+ temp.img +&quot;i&quot;);
    }
}
</code></pre>
<p>O/P</p>
<pre><code>Sum is: 6.7 + 7.5i
</code></pre>
<h2>6) Write a program to show the use of all methods of String class.</h2>
<pre><code class="language-java">public class StringMethodsDemo {
	public static void main(String[] args) {
		String targetString = &quot;Java is fun to learn&quot;;
		String s1= &quot;JAVA&quot;;
		String s2= &quot;Java&quot;;
		String s3 = &quot;  Hello Java  &quot;;

		System.out.println(&quot;Char at index 2(third position): &quot; + targetString.charAt(2));
		System.out.println(&quot;After Concat: &quot;+ targetString.concat(&quot;-Enjoy-&quot;));
		System.out.println(&quot;Checking equals ignoring case: &quot; +s2.equalsIgnoreCase(s1));
		System.out.println(&quot;Checking equals with case: &quot; +s2.equals(s1));
		System.out.println(&quot;Checking Length: &quot;+ targetString.length());
		System.out.println(&quot;Replace function: &quot;+ targetString.replace(&quot;fun&quot;, &quot;easy&quot;));
		System.out.println(&quot;SubString of targetString: &quot;+ targetString.substring(8));
		System.out.println(&quot;SubString of targetString: &quot;+ targetString.substring(8, 12));
		System.out.println(&quot;Converting to lower case: &quot;+ targetString.toLowerCase());
		System.out.println(&quot;Converting to upper case: &quot;+ targetString.toUpperCase());
		System.out.println(&quot;Triming string: &quot; + s3.trim());
		System.out.println(&quot;searching s1 in targetString: &quot; + targetString.contains(s1));
		System.out.println(&quot;searching s2 in targetString: &quot; + targetString.contains(s2));

		char [] charArray = s2.toCharArray();
		System.out.println(&quot;Size of char array: &quot; + charArray.length);
		System.out.println(&quot;Printing last element of array: &quot; + charArray[3]);

	}

}
</code></pre>
<p>O/P</p>
<pre><code>Char at index 2(third position): v
After Concat: Java is fun to learn-Enjoy-
Checking equals ignoring case: true
Checking equals with case: false
Checking Length: 20
Replace function: Java is easy to learn
SubString of targetString: fun to learn
SubString of targetString: fun
Converting to lower case: java is fun to learn
Converting to upper case: JAVA IS FUN TO LEARN
Triming string: Hello Java
searching s1 in targetString: false
searching s2 in targetString: true
Size of char array: 4
Printing last element of array: a
</code></pre>
<h2>7) Write a program to implement all methods of StringBuffer class.</h2>
<pre><code class="language-java">class StringBufferExample{
    public static void main(String args[]){
        StringBuffer sb=new StringBuffer(&quot;Hello&quot;);
        sb.append(&quot; Java&quot;);
        System.out.println(sb);
        sb.insert(1,&quot;Java&quot;);
        System.out.println(sb);
        sb.replace(1,3,&quot;Java&quot;);
        System.out.println(sb);
        sb.delete(1,3);
        System.out.println(sb);
        sb.reverse();
        System.out.println(sb);
        System.out.println(sb.capacity());
        sb.ensureCapacity(10);
        System.out.println(sb.capacity());
    }
}
</code></pre>
<p>O/P</p>
<pre><code>Hello Java
HJavaello Java
HJavavaello Java
Hvavaello Java
avaJ olleavavH
21
21
</code></pre>
<h2>8) Write a program to implement single inheritance.</h2>
<pre><code class="language-java">class Animal{
void eat(){System.out.println(&quot;eating...&quot;);}
}
class Dog extends Animal{
void bark(){System.out.println(&quot;barking...&quot;);}
}
class TestInheritance{
public static void main(String args[]){
Dog d=new Dog();
d.bark();
d.eat();
}}
</code></pre>
<p>O/P</p>
<pre><code>barking...
eating...
</code></pre>
<h2>9) Write a program to implement multilevel inheritance.</h2>
<pre><code class="language-java">class Animal{
void eat(){System.out.println(&quot;eating...&quot;);}
}
class Dog extends Animal{
void bark(){System.out.println(&quot;barking...&quot;);}
}
class BabyDog extends Dog{
void weep(){System.out.println(&quot;weeping...&quot;);}
}
class TestInheritance2{
public static void main(String args[]){
BabyDog d=new BabyDog();
d.weep();
d.bark();
d.eat();
}}
</code></pre>
<p>O/P</p>
<pre><code>weeping...
barking...
eating...
</code></pre>
<h2>10) Develop a program to find area of rectangle and circle using interface.</h2>
<pre><code class="language-java">class FindLargestShape {
  public static void main(String arg[]) {
    Rectangle r = new Rectangle(10, 4);
    System.out.println(&quot;Rectangle Area : &quot; + r.getArea());
    System.out.println();
  }
}

class Rectangle {
  double length;
  double breadth;
  Rectangle(double length, double breadth) {
    this.length = length;
    this.breadth = breadth;
  }
  double getArea() {
    return length * breadth;
  }

}
</code></pre>
<h2>11) Write a program to implement user defined packages in terms of creating a new package and importing the same.</h2>
<pre><code class="language-java">package example;

public class gfg {

    public void show()
    {
        System.out.println(&quot;Hello geeks!! How are you?&quot;);
    }

    public static void main(String args[])
    {
        gfg obj = new gfg();
        obj.show();
    }
}
</code></pre>
<pre><code class="language-java">import example.gfg;

public class GFG {
    public static void main(String args[])
    {
        gfg obj = new gfg();
        System.out.println(obj.show());
    }
}
</code></pre>
<p>O/P</p>
<pre><code>Hello geeks!! How are you?
</code></pre>
<h2>12) Write a program to implement two thread use sleep method.</h2>
<pre><code class="language-java">class TestSleepMethod1 extends Thread{
 public void run(){
  for(int i=1;i&lt;5;i++){
  // the thread will sleep for the 500 milli seconds
    try{Thread.sleep(500);}catch(InterruptedException e){System.out.println(e);}
    System.out.println(i);
  }
 }
 public static void main(String args[]){
  TestSleepMethod1 t1=new TestSleepMethod1();
  TestSleepMethod1 t2=new TestSleepMethod1();

  t1.start();
  t2.start();
 }
}
</code></pre>
<pre><code>11
2
2
3
3
4
4
</code></pre>
<h2>13) Develop a program to accept a password from the user and throw “Authentication Failure” exception if the password is incorrect.</h2>
<pre><code class="language-java">import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class AuthenticationException extends Exception {

 public AuthenticationException(String message) {

  super(message);
 }
}

public class AuthenticationExcDemo {

 public static void main(String[] args) {

  InputStreamReader isr = new InputStreamReader(System.in);
  BufferedReader br = new BufferedReader(isr);
  String pwd;

  try {

   System.out.print(&quot;Enter password :: &quot;);
   pwd = br.readLine();

   if(!pwd.equals(&quot;123&quot;))
    throw new AuthenticationException(&quot;Incorrect password\nType correct password&quot;);
   else
    System.out.println(&quot;Welcome User !!!&quot;);

  }
  catch (IOException e) {
   e.printStackTrace();
  }
  catch (AuthenticationException a) {
   a.printStackTrace();
  }
  System.out.println(&quot;BYE BYE&quot;);
 }

}
</code></pre>
<h2>14) Develop a program to draw a polygon using applet.</h2>
<pre><code class="language-java">import java.awt.*;
import javax.swing.*;

public class poly extends JApplet {

    // called when applet is started
    public void init()
    {
        // set the size of applet to 300, 300
        setSize(200, 200);
        show();
    }

    // invoked when applet is started
    public void start()
    {
    }

    // invoked when applet is closed
    public void stop()
    {
    }

    public void paint(Graphics g)
    {
        // x coordinates of vertices
        int x[] = { 10, 30, 40, 50, 110, 140 };

        // y coordinates of vertices
        int y[] = { 140, 110, 50, 40, 30, 10 };

        // number of vertices
        int numberofpoints = 6;

        // set the color of line drawn to blue
        g.setColor(Color.blue);

        // draw the polygon using drawPolygon function
        g.drawPolygon(x, y, numberofpoints);
    }
}
</code></pre>
<h2>15) Develop an applet for drawing a human face.</h2>
<pre><code class="language-java">import java.applet.*;
import java.awt.*;
public class Human_Face extends Applet
{
    //Initialize the applet
    public void init()
    {
	setBackground(Color.white);
    }
    //Draw the human face
    public void paint(Graphics g)
    {
        //Change color to cream
        Color clr=new Color(255,179,86);
        g.setColor(clr);
        //Draw and fill the face
        g.drawOval(100,100,250,300);
        g.fillOval(100,100,250,300);
        //Change color to black
        g.setColor(Color.black);
        //Draw the left eye
        g.drawOval(160,185,40,25);
        g.fillOval(160,185,40,25);
        //Draw the right eye
        g.drawOval(250,185,40,25);
        g.fillOval(250,185,40,25);
        //Draw the Left Eyebrow
        g.drawArc(160,170,35,10,0,180);
        //Draw the Right Eyebrow
        g.drawArc(250,170,35,10,0,180);
        //Draw the Nose
        g.drawLine(210,265,210,275);
        g.drawLine(240,265,240,275);
        g.drawArc(210,275,30,10,0,-180);
       //Draw the smile
        g.drawArc(175,300,100,50,0,-180);
    }
}
</code></pre>
<h2>16) Develop a program to draw square inside a circle using applet.</h2>
<pre><code class="language-java">import java.applet.&quot;;
import java.awt.*;
/* &lt;applet code=shapes width=10 height=10&gt; &lt;/applet&gt;*/
public class shapes extends Applet {
    public void paint(Graphics g) {
    g.drawString(&quot;Square inside a circle&quot;, 150,110);
    g.drawOval(180,10,80,80);
    g.drawRect(192,22,55,55):
    g.drawString(&quot;Circle inside a square&quot;, 290, 110);
    g.drawRect(290, 10, 80, 80);
    g.drawOval(290, 10, 80, 80);
    }
}
</code></pre>
<h2>17) Develop a program to copy characters from one file to another.</h2>
<pre><code class="language-java">import java.io.*;
import java.util.*;
class Copyfile {
 public static void main(String arg[]) throws Exception {
  Scanner sc = new Scanner(System.in);
  System.out.print(&quot;Provide source file name :&quot;);
  String sfile = sc.next();
  System.out.print(&quot;Provide destination file name :&quot;);
  String dfile = sc.next();
  FileReader fin = new FileReader(sfile);
  FileWriter fout = new FileWriter(dfile, true);
  int c;
  while ((c = fin.read()) != -1) {
   fout.write(c);
  }
  System.out.println(&quot;Copy finish...&quot;);
  fin.close();
  fout.close();
 }
}
</code></pre>]]></content>
  </entry>
  <entry>
    <title>bash</title>
    <link href="https://anzenkodo.github.io/notes/programming/languages/bash.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/languages/bash.html</id>
    <content type="html"><![CDATA[<p><a href="#">#</a> Bash</p>
<ul>
<li>
<p>Functions Info</p>
<p><strong>apropos</strong> - List of man pages for possible matches based on a search term.</p>
</li>
</ul>
<h2>Commands</h2>
<ul>
<li>
<p>Man Page Organization</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Man%20Page%202df02a5a631a4ebe9bcfd37a72009fc0.csv">Man Page</a></p>
</li>
<li>
<p>Redirecting Standard Output</p>
<pre><code class="language-bash">ls -l /usr/bin &gt; ls-output.txt
</code></pre>
<ul>
<li>This makes output of ls command</li>
</ul>
</li>
<li>
<p>About <code>uniq</code></p>
<ul>
<li><code>uniq</code> to remove any duplicates from the output of the <code>sort</code> command.</li>
</ul>
<pre><code class="language-bash">ls /bin /usr/bin | sort | uniq
</code></pre>
<ul>
<li>To see the list of duplicates instead, add the <code>d</code> option to <code>uniq</code></li>
</ul>
<pre><code class="language-bash">ls /bin /usr/bin | sort | uniq -d
</code></pre>
</li>
<li>
<p>About <code>tee</code></p>
<ul>
<li><code>tee</code> is like <code>ls &gt; output.txt</code> but it can work with grep command.</li>
</ul>
<pre><code class="language-bash">ls /usr/bin | tee ls.txt | grep zip
</code></pre>
<h2>About <code>echo</code></h2>
<pre><code class="language-bash">echo $((2 + 2))
</code></pre>
</li>
<li>
<p>Symbols</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Symbols%20d88a1a92cda7446fa8a9d2c975c8947e.csv">Symbols</a></p>
</li>
<li>
<p><code>echo</code> Arithmetic Exponentiation can be nested</p>
<pre><code class="language-bash">echo $(($((5**2)) * 3))
</code></pre>
</li>
<li>
<p>The range of integers.</p>
<pre><code class="language-bash">echo {1..10}
echo a{A{1,2},B{3,4}}b
</code></pre>
</li>
<li>
<p>Enverment Value List</p>
<pre><code class="language-bash">cli printenv | less
set | less
</code></pre>
</li>
</ul>
<h2>History</h2>
<ul>
<li>
<p>To see the history</p>
<pre><code class="language-bash">history
</code></pre>
</li>
<li>
<p>History Command</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/History%20Command%205694bb062b694eb68fa66879592e9106.csv">History Command</a></p>
</li>
<li>
<p>History Expansion Commands</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/History%20Expansion%20Commands%204935186cd0cd4e49a5c894c0463b2851.csv">History Expansion Commands</a></p>
</li>
<li>
<p>To record the command</p>
<pre><code class="language-bash">script
</code></pre>
</li>
</ul>
<h2>Permissions</h2>
<ul>
<li>
<p>To see the group number</p>
<pre><code class="language-bash">id
</code></pre>
</li>
<li>
<p>File Type</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/File%20Type%20b93329415ef14da18905fe8e533748f4.csv">File Type</a></p>
</li>
<li>
<p>Permission Attributes -rwxrwxr–</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Permission%20Attributes%20-rwxrwxr%E2%80%93%2035ff6cb19e8645a3b96ba09a33eba035.csv">Permission Attributes -rwxrwxr–</a></p>
</li>
<li>
<p>File Modes in Binary and Octal</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/File%20Modes%20in%20Binary%20and%20Octal%208ac1bb600cca40ebb1db460155009adb.csv">File Modes in Binary and Octal</a></p>
</li>
<li>
<p>The attribute for changing the file permission</p>
<ul>
<li><code>7 (rwx)</code>, <code>6 (rw-)</code>, <code>5 (r-x)</code>, <code>4 (r--)</code>, and <code>0 (---)</code></li>
</ul>
</li>
<li>
<p><code>chmod</code> Symbolic Notation</p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/chmod%20Symbolic%20Notation%2036655aed32be491d8cf121e4b3981626.csv">chmod Symbolic Notation</a></p>
<p><a href="/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/chmod%20Symbolic%20Notation%20Examples%20d2fdf09328984fce96f5699222acfa25.csv">chmod Symbolic Notation Examples</a></p>
</li>
<li>
<p><code>umask</code> command controls the default permissions given to a file when it is created.</p>
<pre><code class="language-bash">umask 005
</code></pre>
</li>
</ul>
<h2>File System</h2>
<ul>
<li>
<p>Testing and Repairing File Systems</p>
<pre><code class="language-bash">sudo fsck /dev/sdb1
</code></pre>
</li>
<li>
<p>Make bootable USB drive</p>
<pre><code class="language-bash">sudo dd bs=4M if=path/to/input.iso of=/dev/sd&lt;?&gt; conv=fdatasync  status=progress
</code></pre>
</li>
</ul>
<h2>Helpful Command</h2>
<ul>
<li>
<p>Execute <code>find</code> file with command use <code>xargs</code></p>
<pre><code class="language-bash">find ~ -type f -name &quot;index.html&quot; | xargs ls -l
</code></pre>
</li>
<li>
<p>Use <code>find</code> to find the file</p>
<pre><code class="language-bash">find ~ -type f -name &quot;index.html&quot;
</code></pre>
</li>
<li>
<p>Best way to compress in tar</p>
<pre><code class="language-bash">tar cfJ playground.tar.xz playground
</code></pre>
</li>
<li>
<p>How to Mount ISO File on Linux</p>
<pre><code class="language-bash">mount -t iso9660 -o loop image.iso /mnt/iso_image
</code></pre>
</li>
<li>
<p>How to sort in Linux</p>
<pre><code class="language-bash">sort -nk 5

# With command

ls -l /usr/share | sort -nk 5

# Sort in ':'

sort -ht ':' -k 3 /etc/passwd | head
</code></pre>
</li>
<li>
<p>Remove Duplicate use <code>uniq</code></p>
<pre><code class="language-bash">sort foo.txt | uniq
</code></pre>
</li>
<li>
<p>Spell check in Terminal</p>
<pre><code class="language-bash">aspell check filename

# To check HTML code

aspell -H check html-filename
</code></pre>
</li>
<li>
<p>To make PDF</p>
<pre><code class="language-bash">ls -l ~/ | pr pr.ps | groff &gt; pr.ps

# Convert PostScript file into Potable Document File

ps2pdf pr.ps pr.pdf
</code></pre>
</li>
<li>
<p>Good Locations for Scripts</p>
<ul>
<li><code>~/bin</code>Scripts intended for personal use.</li>
<li><code>/usr/local/bin</code>Script that everyone on a system is allowed to use.</li>
<li><code>/usr/local/sbin</code>Scripts intended for use by the system administrator</li>
<li><code>/usr/local</code>Locally supplied software, scripts and compiled programs</li>
</ul>
</li>
</ul>
<h1>Shell Script</h1>
<ul>
<li>
<p>Assigning Values to Variables and Constants.</p>
<pre><code class="language-bash">a=z # Assign the string &quot;z&quot; to variable a.
b=&quot;a string&quot; # Embedded spaces must be within quotes.
c=&quot;a string and $b&quot; # Other expansions such as variables can be expanded into the assignment.
d=&quot;$(ls -l foo.txt)&quot; # Results of a command.
e=$((5 * 7)) # Arithmetic expansion.
f=&quot;\t\ta string\n&quot; # Escape sequences such as tabs and newlines.
</code></pre>
</li>
<li>
<p>Using variables with other commands.</p>
<pre><code class="language-bash">filename=&quot;myFile&quot;
touch file
mv file ${filename}
</code></pre>
</li>
<li>
<p>Here script</p>
<pre><code class="language-bash">command &lt;&lt; token
text
token
</code></pre>
</li>
<li>
<p><code>_EOF_</code></p>
<ul>
<li>
<p>Example</p>
<pre><code class="language-bash"># !/bin/bash
date=$(date +&quot;%x %r %Z&quot;)

cat &lt;&lt; _EOF_
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Website&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Website&lt;/h1&gt;
        &lt;p&gt;Hello World&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
_EOF_
</code></pre>
</li>
<li>
<p><code>_EOF_</code> with command</p>
<pre><code class="language-bash">#!/bin/bash
# Script to retrieve a file via FTP
FTP_SERVER=ftp.nl.debian.org
FTP_PATH=/debian/dists/stretch/main/installer-amd64/current/images/
cdrom REMOTE_FILE=debian-cd_info.tar.gz
ftp -n &lt;&lt; _EOF_
open $FTP_SERVER
user anonymous me@linuxbox
cd $FTP_PATH
hash
get $REMOTE_FILE
bye
_EOF_
ls -l &quot;$REMOTE_FILE&quot;
</code></pre>
</li>
<li>
<p><code>_EOF_</code> with <code>-</code></p>
<pre><code class="language-bash"># !/bin/bash
date=$(date +&quot;%x %r %Z&quot;)

cat &lt;&lt;- _EOF_
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Website&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Website&lt;/h1&gt;
        &lt;p&gt;Hello World&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
_EOF_
</code></pre>
</li>
</ul>
</li>
<li>
<p>Shell Functions</p>
<pre><code class="language-bash"># !/bin/bash

z=human # Gobal variable

echo_1() {
echo &quot;hello&quot;
return
}

echo_2() {
i=world # local veariable
echo &quot;world&quot;
return
}

echo ${echo_1} ${echo_2} $z
</code></pre>
</li>
<li>
<p>Flow Control: Branching with if</p>
<ul>
<li>
<p><code>if</code></p>
<pre><code class="language-bash">x=5
if [ &quot;$x&quot; -eq 5 ]; then
echo &quot;x equals 5.&quot;
else
echo &quot;x does not equal 5.&quot;
fi
</code></pre>
</li>
<li>
<p><code>if</code> in shell</p>
<pre><code class="language-bash">if [ “$x” -eq 5 ]; then echo &quot;equals 5&quot;; else echo &quot;does not equal 5&quot;; fi
</code></pre>
</li>
<li>
<p><code>if</code>, <code>elif</code> and <code>else</code></p>
<pre><code class="language-bash">if commands; then
commands
[elif commands; then
commands...]
[else
commands]
fi
</code></pre>
</li>
</ul>
</li>
</ul>
<h2>Expressions Examples</h2>
<ul>
<li>
<p>File Expressions</p>
<pre><code class="language-bash">#!/bin/bash
# test-file: Evaluate the status of a file
FILE=~/.bashrc
if [ -e &quot;$FILE&quot; ]; then
if [ -f &quot;$FILE&quot; ]; then
echo &quot;$FILE is a regular file.&quot;
fi
if [ -d &quot;$FILE&quot; ]; then
echo &quot;$FILE is a directory.&quot;
fi
if [ -r &quot;$FILE&quot; ]; then
echo &quot;$FILE is readable.&quot;
fi
if [ -w &quot;$FILE&quot; ]; then
echo &quot;$FILE is writable.&quot;
fi
if [ -x &quot;$FILE&quot; ]; then
echo &quot;$FILE is executable/searchable.&quot;
fi
else
echo &quot;$FILE does not exist&quot;
exit 1
fi
exit
</code></pre>
</li>
<li>
<p>String Expressions</p>
<pre><code class="language-bash">#!/bin/bash
# test-string: evaluate the value of a string
ANSWER=maybe
if [ -z &quot;$ANSWER&quot; ]; then
echo &quot;There is no answer.&quot; &gt;&amp;2
exit 1
fi
if [ &quot;$ANSWER&quot; = &quot;yes&quot; ]; then
echo &quot;The answer is YES.&quot;
elif [ &quot;$ANSWER&quot; = &quot;no&quot; ]; then
echo &quot;The answer is NO.&quot;
elif [ &quot;$ANSWER&quot; = &quot;maybe&quot; ]; then
echo &quot;The answer is MAYBE.&quot;
else
echo &quot;The answer is UNKNOWN.&quot;
fi
</code></pre>
</li>
<li>
<p>Integer Expressions</p>
<pre><code class="language-bash">#!/bin/bash
# test-integer: evaluate the value of an integer.
INT=-5
if [ -z &quot;$INT&quot; ]; then
echo &quot;INT is empty.&quot; &gt;&amp;2
exit 1
fi
if [ &quot;$INT&quot; -eq 0 ]; then
echo &quot;INT is zero.&quot;
else
if [ &quot;$INT&quot; -lt 0 ]; then
echo &quot;INT is negative.&quot;
else
echo &quot;INT is positive.&quot;
fi
if [ $((INT % 2)) -eq 0 ]; then
echo &quot;INT is even.&quot;
else
echo &quot;INT is odd.&quot;
fi
fi
</code></pre>
</li>
<li>
<p>File Expressions</p>
<table>
<thead>
<tr>
<th>Expression</th>
<th>Is True If:</th>
</tr>
</thead>
<tbody>
<tr>
<td>file1 -ef file2</td>
<td>file1 and file2 have the same inode numbers (the two filenames refer to the same file by hard linking).</td>
</tr>
<tr>
<td>file1 -nt file2</td>
<td>file1 is newer than file2.</td>
</tr>
<tr>
<td>file1 -ot file2</td>
<td>file1 is older than file2.</td>
</tr>
<tr>
<td>-b file</td>
<td>file exists and is a block-special (device) file.</td>
</tr>
<tr>
<td>-c file</td>
<td>file exists and is a character-special (device) file.</td>
</tr>
<tr>
<td>-d file</td>
<td>file exists and is a directory.</td>
</tr>
<tr>
<td>-e file</td>
<td>file exists.</td>
</tr>
<tr>
<td>-f file</td>
<td>file exists and is a regular file.</td>
</tr>
<tr>
<td>-g file</td>
<td>file exists and is set-group-ID.</td>
</tr>
<tr>
<td>-G file</td>
<td>file exists and is owned by the effective group ID.</td>
</tr>
<tr>
<td>-k file</td>
<td>file exists and has its “sticky bit” set.</td>
</tr>
<tr>
<td>-L file</td>
<td>file exists and is a symbolic link.</td>
</tr>
<tr>
<td>-O file</td>
<td>file exists and is owned by the effective user ID.</td>
</tr>
<tr>
<td>-p file</td>
<td>file exists and is a named pipe.</td>
</tr>
<tr>
<td>-r file</td>
<td>file exists and is readable (has readable permission for the effective user).</td>
</tr>
<tr>
<td>-s file</td>
<td>file exists and has a length greater than zero.</td>
</tr>
<tr>
<td>-S file</td>
<td>file exists and is a network socket.</td>
</tr>
<tr>
<td>-t fd</td>
<td>fd is a file descriptor directed to/from the terminal. This can be used to determine whether standard input/output/error is being redirected.</td>
</tr>
<tr>
<td>-u file</td>
<td>file exists and is setuid.</td>
</tr>
<tr>
<td>-w file</td>
<td>file exists and is writable (has write permission for the effective user).</td>
</tr>
<tr>
<td>-x file</td>
<td>file exists and is executable (has execute/search permission for the effective user).</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>String Expressions</p>
<table>
<thead>
<tr>
<th>Expression</th>
<th>Is True If…</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td>string is not null.</td>
</tr>
<tr>
<td>-n string</td>
<td>The length of string is greater than zero.</td>
</tr>
<tr>
<td>-z string</td>
<td>The length of string is zero.</td>
</tr>
<tr>
<td><code>string1 = string2</code> <code>string1 == string2</code></td>
<td>string1 and string2 are equal. Single or double equal signs may be used. The use of double equal signs is supported by bash and is generally preferred, but it is not POSIX compliant.</td>
</tr>
<tr>
<td>string1 != string2</td>
<td>string1 and string2 are not equal.</td>
</tr>
<tr>
<td>string1 &gt; string2</td>
<td>string1 sorts after string2.</td>
</tr>
<tr>
<td>string1 &lt; string2</td>
<td>string1 sorts before string2.</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>Integer Expressions</p>
<table>
<thead>
<tr>
<th>Expression</th>
<th>Is True If…</th>
</tr>
</thead>
<tbody>
<tr>
<td>integer1 -eq integer2</td>
<td>integer1 is equal to integer2.</td>
</tr>
<tr>
<td>integer1 -ne integer2</td>
<td>integer1 is not equal to integer2.</td>
</tr>
<tr>
<td>integer1 -le integer2</td>
<td>integer1 is less than or equal to integer2.</td>
</tr>
<tr>
<td>integer1 is less than or equal to integer2.</td>
<td>integer1 is less than integer2.</td>
</tr>
<tr>
<td>integer1 -ge integer2</td>
<td>integer1 is greater than or equal to integer2.</td>
</tr>
<tr>
<td>integer1 -gt integer2</td>
<td>integer1 is greater than integer2.</td>
</tr>
</tbody>
</table>
</li>
</ul>]]></content>
  </entry>
  <entry>
    <title>c</title>
    <link href="https://anzenkodo.github.io/notes/programming/languages/c.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/languages/c.html</id>
    <content type="html"><![CDATA[<h1>C</h1>
<ul>
<li>In fact, you should use the main() to do very little except call each of the other functions.</li>
<li>A good rule of thumb is that a function should not take more lines than will fit on a single screen. If the function is longer than that, you’re probably making it do too much.</li>
<li>The difference between local and global variables:
<ul>
<li>A variable is global only if you define the variable (such as inti;) before a function name.</li>
<li>A variable is local only if you define it after an opening brace. A function always begins with opening braces. Some statements, such as while, also have opening braces, and you can define local variables within those braces as well.</li>
</ul>
</li>
<li>Local variables are safer than global variables.</li>
<li>Don’t define global variables in the middle of a program. They’re too hard to locate if you do.</li>
</ul>]]></content>
  </entry>
  <entry>
    <title>css</title>
    <link href="https://anzenkodo.github.io/notes/programming/languages/css.html" />
    <updated>2022-12-29T10:33:21.808Z</updated>
    <id>/notes/programming/languages/css.html</id>
    <content type="html"><![CDATA[<h1>CSS</h1>
<p><a href="/notes/CSS%208946e12a95f04e3490bd9c09bfb99d1e/SASS%20d57c9cbb233644a3a615a487f4cdf949.md">SASS</a></p>
<ul>
<li>
<p>BEM Method</p>
<pre><code class="language-css">/* Block component */
.btn {}
/* Element that depends upon the block */
.btn__price {}
/* Modifier that changes the style of the block */
.btn--orange {}
.btn--big {}
</code></pre>
</li>
<li>
<p>Dark Mode Setting</p>
<pre><code class="language-css">:root {
  color-scheme: light dark; /* both supported */
}
</code></pre>
</li>
<li>
<p>Image Dark</p>
<ul>
<li>
<p>Apply the filter directly on the body tag.</p>
<pre><code class="language-css">body.dark-theme img {
  filter: brightness(.8) contrast(1.2);
}
</code></pre>
</li>
<li>
<p>Or apply it via media query.</p>
<pre><code class="language-css">@media (prefers-color-scheme: dark) {
  img {
    filter: brightness(.8) contrast(1.2);
  }
}
</code></pre>
</li>
</ul>
</li>
<li>
<p>Image prefer Dark</p>
<pre><code class="language-html">&lt;picture&gt;
  &lt;!-- Use this image if the user's OS setting is light or unset --&gt;
  &lt;source srcset=&quot;photo-light.png&quot; media=&quot;(prefers-color-scheme: light) or (prefers-color-scheme: no-preference)&quot;&gt;
  &lt;!-- Use this image if the user's OS setting is dark --&gt;
  &lt;source srcset=&quot;photo-dark.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;
&lt;/picture&gt;
</code></pre>
</li>
<li>
<p>Non-standard attributes, dataset</p>
<pre><code class="language-css">&lt;style&gt;
  /* styles rely on the custom attribute &quot;order-state&quot; */
  .order[order-state=&quot;new&quot;] {
    color: green;
  }

  .order[order-state=&quot;pending&quot;] {
    color: blue;
  }

  .order[order-state=&quot;canceled&quot;] {
    color: red;
  }
&lt;/style&gt;

&lt;div class=&quot;order&quot; order-state=&quot;new&quot;&gt;
  A new order.
&lt;/div&gt;

&lt;div class=&quot;order&quot; order-state=&quot;pending&quot;&gt;
  A pending order.
&lt;/div&gt;

&lt;div class=&quot;order&quot; order-state=&quot;canceled&quot;&gt;
  A canceled order.
&lt;/div&gt;
</code></pre>
</li>
</ul>]]></content>
  </entry>
</feed>
