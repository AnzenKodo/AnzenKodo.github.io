<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AK#Notes</title>
    <link>https://anzenkodo.github.io/notes/</link>
    <description>This my personal website where I post my notes about thing that I have learn.</description>
    <language>en-US</language>
    <lastBuildDate>2023-01-01T22:05:18.398Z</lastBuildDate>
    <image>
      <url>https://anzenkodo.github.io/notes/favicon.png</url>
      <title>AK#Notes</title>
      <link>https://anzenkodo.github.io/notes/</link>
      <width>500</width>
      <height>500</height>
    </image>
    <atom:link href="https://anzenkodo.github.io/notes/feed.xml" rel="self" type="application/rss+xml" />
    <atom:link href="https://anzenkodo.github.io/notes/feed.xml" rel="alternate" type="application/rss+xml" />
      <item>
    <title>Home</title>
    <link>https://anzenkodo.github.io/notes/</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<p>This my personal website where I post my notes about thing that I have learn.</p>
<h2>Features</h2>
<ul>
<li>Easy to:
<ul>
<li>Setup</li>
<li>Configure</li>
<li>Write</li>
</ul>
</li>
<li>Supports:
<ul>
<li>Tags</li>
<li>Search (Power by <a href="https://duckduckgo.com/">DuckDuckGo</a>)</li>
<li>Canonical</li>
<li><a href="https://ogp.me/">Open Graph</a></li>
<li>Analytics</li>
<li><a href="https://pages.github.com/">GitHub Pages</a></li>
</ul>
</li>
<li>Auto generate:
<ul>
<li>GitHub Pages Actions file</li>
<li>Favicon</li>
<li>Sitemap</li>
<li>404 page</li>
<li>CSS</li>
<li><code>mainfest.json</code> file</li>
<li>Feeds
<ul>
<li>RSS</li>
<li>JSON</li>
<li>Atom</li>
</ul>
</li>
</ul>
</li>
<li>No Client side JavaScript</li>
<li>Minified HTML &amp; Inline CSS</li>
<li>Lightweight</li>
</ul>
<h2>Getting Started</h2>
<h3>Installing</h3>
<ul>
<li>Download deno from <a href="https://deno.land/">https://deno.land/</a> and install it.</li>
<li>After installing deno run following commands.</li>
</ul>
<pre><code class="language-sh"># Install the dblog
deno run https://deno.land/x/dblog/install.js # Add deno to path, if you didn't already.

# See all the options that are available
dblog --help

# Setup the your blog (Skip this if already your blog setup)
dblog --setup

# Make your blog and Run on localhost
dblog --serve
</code></pre>
<h3>Update</h3>
<p>To update dblog, rerun the installation command.</p>
<pre><code class="language-sh">deno run https://deno.land/x/dblog/install.js
</code></pre>
<h3>Run dblog without installing dblog</h3>
<pre><code class="language-sh">deno run -A https://deno.land/x/dblog/mod.js --help
</code></pre>
<h2>Live Demo &amp; Folder</h2>
<ul>
<li><a href="https://anzenkodo.github.io/dblog">Live Demo</a></li>
<li><a href="https://github.com/AnzenKodo/dblog/tree/gh-pages">Generated Files</a></li>
</ul>
<h2>Configuration</h2>
<p>Place <code>config.json</code> in root folder to edit default configuration. The
<code>config.json</code> is optional.</p>
<p><strong>The <code>config.json</code> with default configuration:</strong></p>
<pre><code class="language-json">{
  &quot;name&quot;: &quot;dblog&quot;,
  &quot;start_url&quot;: &quot;https://AnzenKodo.github.io/dblog/&quot;,
  &quot;description&quot;: &quot;dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.&quot;,
  &quot;email&quot;: &quot;&quot;,
  &quot;author&quot;: &quot;AnzenKodo&quot;,
  &quot;posts&quot;: &quot;./posts&quot;,
  &quot;output&quot;: &quot;./site&quot;,
  &quot;favicon&quot;: &quot;favicon.svg&quot;,
  &quot;lang&quot;: &quot;en-US&quot;,
  &quot;port&quot;: 8000,
  &quot;background&quot;: &quot;#ffffff&quot;,
  &quot;foreground&quot;: &quot;#000000&quot;,
  &quot;theme&quot;: &quot;#01a252&quot;,
  &quot;footer&quot;: &quot;&lt;p&gt;Made by &lt;a href=\&quot;https://AnzenKodo.github.io/AnzenKodo\&quot;&gt;AnzenKodo&lt;/a&gt; under &lt;a href=\&quot;https://anzenkodo.github.io/dblog/LICENSE\&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;\n&quot;,
  &quot;page404&quot;: &quot;404 Page Not Found, Sorry :(&quot;,
  &quot;backup&quot;: false,
  &quot;exclude&quot;: [
    &quot;config.json&quot;,
    &quot;backup.json&quot;
  ],
  &quot;nav&quot;: {},
  &quot;head&quot;: &quot;&quot;
}
</code></pre>
<p><strong>Note:</strong> Every option is optional.</p>
<ul>
<li><strong>name</strong> - Name of your blog.</li>
<li><strong>start_url</strong> - Start URL of your site. <em>Example:</em> ‘<a href="https://example.com/">https://example.com/</a>’,
‘<a href="https://blog.example.com/">https://blog.example.com/</a>’, ‘<a href="https://example.com/blog/">https://example.com/blog/</a>’</li>
<li><strong>email</strong> - Your email address. This will enable ‘Reply with Email’ button in
posts.</li>
<li><strong>author</strong> - Your name or username.</li>
<li><strong>posts</strong> - Path of posts.</li>
<li><strong>output</strong> - Folder where your blog build will be placed. <em>Example:</em> ‘./blog’,
‘…/site/blog’, ‘site/blog’.</li>
<li><strong>favicon</strong> - <em><strong>Recommended 500x500px</strong></em>. Favicon location. <em>If empty,
generated favicon will be used</em>. <em>Example:</em> ‘./favicon.png’,
‘./static/favicon.icon’, ‘…/favicon.jpg’.</li>
<li><strong>lang</strong> - Blog language in ‘RFC 5646’ format. Example: ‘ja’ for Japanese,
‘sv’ for Swedish, ‘it’ for Italian. See
<a href="https://wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags">List of common primary language subtags in Wikipedia</a></li>
<li><strong>footer</strong> - Footer of your website. <em>Supports CommonMark Markdown format</em>.
<em>Example:</em>
<code>Made by [AnzenKodo](https://AnzenKodo.github.io/AnzenKodo) uder [MIT License](https://anzenkodo.github.io/dblog/LICENSE.html)</code>.</li>
<li><strong>port</strong> - Port of your blog on localhost. <em>Example</em>: ‘8080’, ‘8300’, ‘8400’.</li>
<li><strong>background</strong> - Background color in light mode. Becomes foreground color in
light mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>
<li><strong>foreground</strong> - Foreground color in light mode. Becomes background color in
light mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>
<li><strong>theme</strong> - Blog theme color. <em>Example:</em> ‘#0583f2’, ‘#f20544’, ‘#f2b705’.</li>
<li><strong>page404</strong> - 404 page message. <em>Example:</em> ‘Sorry, page not found :(’.</li>
<li><strong>backup</strong> - Backup file location. <em>Example:</em> <code>false</code> to don’t generate
<code>backup.json</code> file, ‘./backup.json’, ‘./site/backup.json’, ‘…/backup.json’.</li>
<li><strong>exclude</strong> - Exclude files or folder. <em>Example:</em><pre><code class="language-json">&quot;exclude&quot;: [ &quot;.env&quot;, &quot;todo.md&quot;, &quot;drafts&quot; ],
</code></pre>
</li>
<li><strong>nav</strong> - Nav bar item list. Example:<pre><code class="language-json">&quot;nav&quot;: {
  &quot;about&quot;: &quot;./about.md&quot;,
  &quot;stie&quot;: &quot;https://anzenkodo.github.io/AnzenKodo&quot;
}
</code></pre>
</li>
<li><strong>head</strong> - If you analytics or any other tags you want to put on head tag.
<em>Example:</em>
<code>&lt;link rel=&quot;preconnect&quot; href=&quot;//www.google-analytics.com&quot; crossorigin=&quot;&quot;&gt;</code>.</li>
</ul>
<h2>CLI Options</h2>
<pre><code class="language-sh">dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.

Website: https://anzenkodo.github.io/dblog
Package: https://deno.land/x/dblog
Repo: https://github.com/AnzenKodo/dblog
Docs: https://anzenkodo.github.io/dblog/posts/dblog-Docs.html

USAGE:
  dblog [OPTIONS]

OPTIONS:
  --serve   Build blog and Start localhost.
    --noopen  Don't open browser, when starting localhost.
  --build   Build blog without starting localhost.
  --setup   Setup new blog.
  --backup  Restore blog if 'backup.json' file available.
  --readme  Generate 'README.md' file.
  --help    Print help information.
</code></pre>
<h2>File Options</h2>
<pre><code>---
title: If empty the file name will be used
description: If empty the first paragraph will be used.
tags: [ &quot;tag1&quot;, &quot;tag2&quot; ]
date: 20/08/2020
canonical:
---
</code></pre>
<ul>
<li><strong>date</strong> - If empty, the file date will be used. <em>Note:</em> The file <code>date</code> might
not always right. So always give you own date.</li>
<li><strong>canonical</strong> - Share content between multiple sites without impacting SEO.
Just put canonical URL. Know more about
<a href="https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls">canonical url</a>.</li>
</ul>
<h3>If file name start with underscore “_” it will be consider as draft.</h3>
<p><strong>Example:</strong> <code>posts/_This is draft.md</code></p>
<h2>Markdown Guide</h2>
<h3><a href="https://commonmark.org/help/">CommonMark</a> Syntex</h3>
<h4>Heading</h4>
<pre><code class="language-md"># H1

## H2

### H3

#### H4

##### H5

###### H6
</code></pre>
<h1>H1</h1>
<h2>H2</h2>
<h3>H3</h3>
<h4>H4</h4>
<h5>H5</h5>
<h6>H6</h6>
<h4>Inline style</h4>
<pre><code class="language-md">**Bold** _Italic_ ~~Strikethrough~~
</code></pre>
<p><strong>Bold</strong> <em>Italic</em> <s>Strikethrough</s></p>
<h4>Link and Image</h4>
<pre><code class="language-md">[website](https://anzenkodo.github.io/dblog)
![Jurassic Deno by Samip Poudel](https://deno.land/images/artwork/jurassicDeno.jpg)
</code></pre>
<p><a href="https://anzenkodo.github.io/dblog">website</a>
<img src="https://deno.land/images/artwork/jurassicDeno.jpg" alt="Jurassic Deno by Samip Poudel"></p>
<h4>Blockquote</h4>
<pre><code class="language-md">&gt; 'The road to hell is paved with good intentions' by Abbot Bernard
</code></pre>
<blockquote>
<p>‘The road to hell is paved with good intentions’ by Abbot Bernard</p>
</blockquote>
<h4>List</h4>
<pre><code class="language-md">- List
  - List
- List

1. One
2. Two
3. Three
</code></pre>
<ul>
<li>List
<ul>
<li>List</li>
</ul>
</li>
<li>List</li>
</ul>
<ol>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ol>
<h4>Horizontal rule</h4>
<pre><code class="language-md">---
</code></pre>
<hr>
<h4>Code block</h4>
<div class="highlight highlight-source-lisp notranslate position-relative overflow-auto">
<pre>
`Inline code` with backticks
```js
  console.log("Code Blog in JavaScript");
```
</pre>
</div>
<p><code>Inline code</code> with backticks</p>
<pre><code class="language-js">console.log(&quot;Code Blog in JavaScript&quot;);
</code></pre>
<h3>Additional Markdown syntax</h3>
<h4>Checkbox</h4>
<pre><code class="language-md">- [ ] Checkbox
- [x] Checkbox with tick
</code></pre>
<ul class="task-list">
<li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> Checkbox</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> Checkbox with tick</label></li>
</ul>
<h4>Image with caption</h4>
<pre><code class="language-md">![Deno](https://deno.land/images/artwork/deno_matrix.png &quot;Matrix by bramaudi&quot;)
</code></pre>
<figure data-type="image"><img src="https://deno.land/images/artwork/deno_matrix.png" alt="Deno" loading="lazy" decoding="async"><figcaption>Matrix by bramaudi</figcaption></figure>
<h4>Footer</h4>
<pre><code class="language-md">Here is a footnote reference[^1]. [^1]: Here is the footnote.
</code></pre>
<p>Here is a footnote reference[^1]. [^1]: Here is the footnote.</p>
<h4>Additional inline syntax</h4>
<pre><code class="language-md">~sub~ ^sup^ ==mark== [[kbd]] _underline_ ++insert++ ~~delete~~
</code></pre>
<p><sub>sub</sub>
<sup>sup</sup>
<mark>mark</mark>
<kbd>kbd</kbd>
<u>underline</u>
<ins>insert</ins>
<del>delete</del></p>
<h4>Description list</h4>
<pre><code class="language-md">: Definition 1 Term 2 with _inline markup_ : Definition 2 Third paragraph of
definition 2.
</code></pre>
<dl>
  <dt>Definition 1</dt>
  <dd>Term 2 with inline.</dd>
  <dt>Definition 2</dt>
  <dd>Third paragraph of definition 2.</dd>
</dl>
<h4>Abbreviation</h4>
<pre><code class="language-md">*[abbr]: Abbreviation
</code></pre>
<p><abbr title="Abbreviation">abbr</abbr></p>
<h4>Table</h4>
<h5>Normal</h5>
<pre><code class="language-md">| Syntax    | Description |
| --------- | ----------- |
| Header    | Title       |
| Paragraph | Text        |
</code></pre>
<table>
<thead>
<tr>
<th>Syntax</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Header</td>
<td>Title</td>
</tr>
<tr>
<td>Paragraph</td>
<td>Text</td>
</tr>
</tbody>
</table>
<h5>Multiline</h5>
<pre><code class="language-md">| Markdown  | Rendered HTML |
| --------- | ------------- |
| _Italic_  | _Italic_      |
|           |               |
| - Item 1  | - Item 1      |
| - Item 2  | - Item 2      |
| ```python | ```python \   |
| .1 + .2   | .1 + .2       |
</code></pre>
<table><thead><tr><th>Markdown</th><th>Rendered HTML</th></tr></thead> <tbody>
  <tr> <td> <pre><code>*Italic* </code></pre> </td> <td> <p><em>Italic</em></p>
  </td> </tr> <tr> <td> <pre><code>- Item 1 - Item 2</code></pre> </td> <td>
  <ul> <li>Item 1</li> <li>Item 2</li> </ul> </td> </tr> <tr> <td>
<pre><code>
```python
.1 + .2
```
</code></pre> </td> <td> <pre><code class="language-python">.1 + .2
  </code></pre> </td> </tr> </tbody> </table>
<h5>Rowspan</h5>
<pre><code class="language-md">|                       Stage | Direct Products | ATP Yields |
| --------------------------: | --------------: | ---------: |
|                  Glycolysis |           2 ATP |            |
|                          ^^ |          2 NADH |   3--5 ATP |
|          Pyruvaye oxidation |          2 NADH |      5 ATP |
|           Citric acid cycle |           2 ATP |            |
|                          ^^ |          6 NADH |     15 ATP |
|                          ^^ |         2 FADH2 |      3 ATP |
|              **30--32** ATP |                 |            |
| [Net ATP yields per hexose] |                 |            |
</code></pre>
<table> <caption id="netatpyieldsperhexose">Net ATP yields per hexose</caption>
  <thead> <tr> <th align="right">Stage</th> <th align="right">Direct
Products</th> <th align="right">ATP Yields</th> </tr> </thead> <tbody> <tr> <td
align="right" rowspan="2">Glycolysis</td> <td align="right" colspan="2">2
ATP</td> </tr> <tr> <td align="right">2 NADH</td> <td align="right">3–5
ATP</td> </tr> <tr> <td align="right">Pyruvaye oxidation</td> <td
align="right">2 NADH</td> <td align="right">5 ATP</td> </tr> <tr> <td
align="right" rowspan="3">Citric acid cycle</td> <td align="right"
colspan="2">2 ATP</td> </tr> <tr> <td align="right">6 NADH</td> <td
align="right">15 ATP</td> </tr> <tr> <td align="right">2 FADH2</td> <td
align="right">3 ATP</td> </tr> <tr> <td align="right"
colspan="3"><strong>30–32</strong> ATP</td> </tr> </tbody> </table>
<h4>Headerless</h4>
<pre><code class="language-md">|--|--|--|--|--|--|--|--| |♜| |♝|♛|♚|♝|♞|♜| | |♟|♟|♟| |♟|♟|♟| |♟| |♞| | | | | |
| |♗| | |♟| | | | | | | | |♙| | | | | | | | | |♘| | | |♙|♙|♙|♙| |♙|♙|♙|
|♖|♘|♗|♕|♔| | |♖|
</code></pre>
<table> <tbody> <tr> <td>♜</td> <td></td> <td>♝</td> <td>♛</td> <td>♚</td>
  <td>♝</td> <td>♞</td> <td>♜</td> </tr> <tr> <td></td> <td>♟</td> <td>♟</td>
  <td>♟</td> <td></td> <td>♟</td> <td>♟</td> <td>♟</td> </tr> <tr> <td>♟</td>
  <td></td> <td>♞</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>
  <tr> <td></td> <td>♗</td> <td></td> <td></td> <td>♟</td> <td></td> <td></td>
  <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> <td>♙</td>
  <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td>
  <td></td> <td></td> <td>♘</td> <td></td> <td></td> </tr> <tr> <td>♙</td>
  <td>♙</td> <td>♙</td> <td>♙</td> <td></td> <td>♙</td> <td>♙</td> <td>♙</td>
  </tr> <tr> <td>♖</td> <td>♘</td> <td>♗</td> <td>♕</td> <td>♔</td> <td></td>
  <td></td> <td>♖</td> </tr> </tbody> </table>]]></description>
  </item>
  <item>
    <title>UT2 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/php/ut2-6s.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h1>PHP Unit 2 AB</h1>
<h3>1. Write the syntax for creating Cookie.</h3>
<ul>
<li>To set cookie in PHP, the <code>setcookie()</code> function is used.</li>
<li>Syntex:<pre><code class="language-php">setcookie($name, $value, $expire_time, $path, $domain)
</code></pre>
</li>
<li><code>setcookie()</code> function the parameters.
<ul>
<li><strong>name</strong> - Name of the cookie, which is used with $_COOKIE function to get
value.</li>
<li><strong>value</strong> - Value of the named variable.</li>
<li><strong>expire time</strong> - Time when cookie will expire.</li>
<li><strong>path</strong> - Directory where cookie will valied.</li>
<li><strong>domain</strong> - The default server hostname.</li>
</ul>
</li>
</ul>
<h3>2. WAP to connect PHP with MySQL.</h3>
<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if ($conn) {
	echo &quot;MySQL connected&quot;;
} else {
	echo &quot;MySQL can't connect&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>MySQL connected
</code></pre>
<h3>3. Differentiate between Session and Cookies.</h3>
<table>
<thead>
<tr>
<th>SESSION</th>
<th>COOKIES</th>
</tr>
</thead>
<tbody>
<tr>
<td>Session are stored in server side</td>
<td>Cookies are stored in client browser.</td>
</tr>
<tr>
<td>Session is server resource.</td>
<td>Cookies are client-side resource.</td>
</tr>
<tr>
<td>It stores unlimeted data.</td>
<td>It stores limited data.</td>
</tr>
<tr>
<td>It holds multiple variables.</td>
<td>It doen’t hold multiple variables.</td>
</tr>
<tr>
<td>Session values can’t accessed easily.</td>
<td>Cookies values can accessed easily.</td>
</tr>
<tr>
<td>It is more secure.</td>
<td>It is less secure.</td>
</tr>
</tbody>
</table>
<h3>4. Define session and explain how it works.</h3>
<ul>
<li>A session is a way to store information in variables to be used across
multiple pages.</li>
<li>Sessions allow us to store data on the web server that associated with a
session ID.</li>
<li>Once we create a session, PHP sends a cookie that contains the session ID to
the web browser.</li>
<li>A session is started with the session_start() function.</li>
<li>The session_start() function first checks if a session is already started and
if none is started then it starts one.</li>
<li>Example:<pre><code class="language-php">&lt;?php
session_start();

$_SESSION[&quot;color&quot;] = &quot;Red&quot;;
$_SESSION[&quot;animal&quot;] = &quot;Cat&quot;;
echo $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];
?&gt;
</code></pre>
</li>
</ul>
<h3>5. Write update and delete operations on table.</h3>
<pre><code class="language-php">UPDATE:
&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
	echo &quot;Can't connect to MySQL&quot;;
}

$sql = &quot;UPDATE my_table SET name='Jonney' WHERE id=2&quot;;
if (!mysqli_query($conn, $sql)) {
	die(&quot;Can't Update Table&quot;);
}
echo &quot;Update data&lt;/br&gt;&quot;;
?&gt;
DELETE:
&lt;?php
$sql = &quot;DELETE my_table WHERE id=1&quot;;
if (!mysqli_query($conn, $sql)) {
	die(&quot;Can't Delete data&quot;);
}
echo &quot;Deleted data&lt;/br&gt;&quot;;

mysqli_close($conn);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>UPDATE:Update data
DELETE:Deleted data
</code></pre>
<h3>6. Answer the following</h3>
<h4>i) Get session variables</h4>
<ul>
<li>The session variables are not passed individually to each new page, instead
they are retrieved from the session we open at the beginning of each page.</li>
<li>All session variable values are stored in the global <code>$_SESSION</code> variable.</li>
</ul>
<h4>ii) Destroy session.</h4>
<ul>
<li>To remove all global session variables and destroy the session, we use
<code>session_unset()</code> and <code>session_destroy()</code> functions.</li>
<li>No arguments are needed in <code>session_destroy()</code> function.</li>
<li>Example:<pre><code class="language-php">&lt;?php
session_start();

$_SESSION[&quot;color&quot;] = &quot;red&quot;;
$_SESSION[&quot;animal&quot;] = &quot;Lion&quot;;
echo $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];
session_unset();
session_destroy();
?&gt;
</code></pre>
</li>
</ul>
<h3>7. Explain inserting and retrieving the query result operations.</h3>
<ul>
<li>For inserting a data into the table we use the INSERT query.</li>
<li>For retrieving the data, we use the SELECT query.</li>
</ul>
<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
	echo &quot;Can't connect to MySQL&quot;;
}

// Insert the data
$sql = &quot;INSERT INTO my_table(id, name) VALUES (1, 'Jonney'), (2, 'Jone')&quot;;
if (!mysqli_query($conn, $sql)) {
	echo &quot;Can't Insert the data&quot;;
}

// Retriving
$sql = &quot;SELECT * FROM my_table&quot;;
$result = mysqli_connect($conn, $sql);

if ($mysqli_num_rows($result) &gt; 0) {
	while ($row = mysqli_fetch_array($result)) {
		echo &quot;Name: &quot;.$row['name'].&quot;, ID: &quot;.$row['id'].&quot;&lt;br/&gt;&quot;;
	}
} else {
	echo &quot;Rows can't be zero.&quot;;
}
</code></pre>
<h3>8. Explain web page validation with example.</h3>
<ul>
<li>For validating a web page we use preg_match() function.</li>
<li>The preg_match() function searches string for pattern, returning true if
pattern exists, and false otherwise.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if (!preg_match(&quot;/^[a-zA-Z_ ]*$/&quot;, $_POST[&quot;name&quot;])) {
	echo &quot;Only letter and whitespace is allowed&quot;;
}
?&gt;
</code></pre>
</li>
</ul>
<h3>9.  Elaborate the following:</h3>
<h4>i) <code>mysqli_query()</code></h4>
<p>This function in php is used to pass a sql query to mysql database.
This function returns the query handle for SELECT queries, TRUE/FALSE for other
queries, or FALSE on failure.</p>
<ul>
<li>Syntex:<pre><code class="language-php">mysqli_query(string, query, resource link_identifier])
</code></pre>
</li>
</ul>
<h4>ii) <code>mysqli_connect()</code></h4>
<ul>
<li>This function opens a connection to a MySQL server.</li>
<li>It returns a MySQL link identifier on success, or FALSE on failure.</li>
<li>Syntax:<pre><code class="language-php">mysqli_connect($server, $username, $password)
</code></pre>
</li>
<li>Example:<pre><code class="language-php">$conn = mysqli_connect(&quot;mydb&quot;, &quot;root&quot;, &quot;root&quot;);
</code></pre>
</li>
</ul>
<h3>10. Explain the use of mail() function in php.</h3>
<ul>
<li><code>mail()</code> function is useful to sending the mail.</li>
<li>Syntex:<pre><code class="language-php">mail($to, $subject, $message, $header, $parametes);
</code></pre>
</li>
<li><code>mail()</code> function parametes:
<ul>
<li><strong>to</strong> - represents the address of receiver.</li>
<li><strong>subject</strong> - it specifies the subject of mail.</li>
<li><strong>message</strong> - it defines the message which is to be sent.</li>
<li><strong>headers</strong> - it is optional and specifies the additional headers like Cc, Bcc.</li>
<li><strong>parameters</strong> - it is optional and specifies the additional parameters.</li>
</ul>
</li>
</ul>
<pre><code class="language-php">&lt;?php
$sent = mail(&quot;AnzenKodo@altmail.com&quot;, &quot;Title&quot;, &quot;Message&quot;);

if (!$sent) {
  echo &quot;Message is not sent.&quot;;
} else {
  echo &quot;Message is sent.&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>Message is sent.
</code></pre>
<h3>11. How to use radio button in form? Give suitable example.</h3>
<ul>
<li>The radio buttons are for single choice from multiple options.</li>
<li>All radio buttons in the group have the same name attribute.</li>
<li>Only one button can be selected per group.</li>
<li>The value attribute is mandatory for checkboxes and radio buttons.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	Color:
	&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;White&quot;&gt;White&lt;/input&gt;
	&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;Blue&quot;&gt;Blue&lt;/input&gt;
	&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;Red&quot;&gt;Red&lt;/input&gt;
	&lt;input type=&quot;Submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if (isset($_POST[&quot;color&quot;])) {
	echo $_POST[&quot;color&quot;];
}
?&gt;
</code></pre>
</li>
</ul>
<h3>12. WAP in php to counting no. of rows in table.</h3>
<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
	die(&quot;Can't connect to MySQL&quot;);
}

$sql = &quot;SELECT * FROM my_table&quot;;
if ($result = mysqli_query($conn, $sql)) {
	echo &quot;No of rows: &quot;.mysqli_num_rows($result);
} else {
	echo &quot;Can't connect&quot;;
}

mysqli_close($conn);
?&gt;
</code></pre>
<h3>13. WAP in php to counting no. of fields in table.</h3>
<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
	die(&quot;Can't connect to MySQL&quot;);
}

$sql = &quot;SELECT * FROM my_table&quot;
if ($result = mysqli_query($conn, $sql)) {
	echo &quot;No of fields: &quot;.mysqli_num_fields($result);
}
mysqli_close();
?&gt;
</code></pre>
<h3>14. WAP in php to create database and creation of table.</h3>
<pre><code class="language-php">Creating database:
&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;);
if (!$conn) {
	die(&quot;Can't connect to MySQL&quot;);
}

$sql = &quot;CREATE DATABASE db&quot;;
if (!mysqli_query($conn, $sql) {
	die(&quot;Can't create Database&quot;);
}
echo &quot;Created database&lt;/br&gt;&quot;;

mysqli_close($conn);
?&gt;

Creating Table:
&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;db&quot;);
if (!$conn) {
	die(&quot;Can't create Table&quot;);
}

$sql = &quot;CREATE TABLE my_table(name VARCHAR(22), id INT(4))&quot;;
if(!mysqli_query($conn, $sql) {
	die(&quot;Error: &quot;.mysqli_error($conn));
}
echo &quot;Created table&lt;br/&gt;&quot;;

mysqli_close($conn);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Created database
Created table
</code></pre>
<h3>15. How to used list and button in form? Give suitable example.</h3>
<ul>
<li>List
<ul>
<li>The list represents a windows control to display a list of items to a user.</li>
<li>A user can select an item from the list.</li>
<li>User can either select one option from a list or multiple options, depending
on the type of list.</li>
</ul>
</li>
<li>Button
<ul>
<li>A button is a control, which is an interactive component that enables users
to communicate with an application which we click and release to perform
some actions.</li>
<li>A button can be clicked by using the mouse, ENTER key, or SPACEBAR if the
button has focus.</li>
</ul>
</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	&lt;select name=&quot;language&quot;&gt;
		&lt;option name=&quot;C&quot;&gt;C&lt;/option&gt;
		&lt;option name=&quot;C++&quot;&gt;C++&lt;/option&gt;
		&lt;option name=&quot;PHP&quot;&gt;PHP&lt;/option&gt;
	&lt;/select&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if (isset($_POST[&quot;language&quot;])) {
	echo &quot;Selected: &quot;.$_POST[&quot;language&quot;];
}
?&gt;
</code></pre>
</li>
</ul>
<h3>16. Answer the following</h3>
<h4>i) Use of cookies</h4>
<ul>
<li>Cookie save the data in browser, so next time refresh the browser it will not
delete from browser.</li>
<li>Cookie is used to identify the user.</li>
<li>A cookie is a small file that server embeds to user’s computer.</li>
<li>Each time the same computer requests a page with a browser, it will send the
cookie too.</li>
</ul>
<h4>ii) How to set the cookie?</h4>
<ul>
<li>Use <code>setcookie</code> function to create cookie.</li>
<li>Syntex:<pre><code>setcookie($cookie_name, $cookie_value, $time, $location)
</code></pre>
</li>
</ul>
<h4>iii) How to modify?</h4>
<ul>
<li>Set cookie agien with <code>setcookie</code> function.</li>
</ul>
<h4>iv) How to delete the cookies?</h4>
<ul>
<li>To delete cookie, we can use <code>setcookie</code> function with expiration date in
past.</li>
<li>Example:<pre><code>setcookie($cookie_name, &quot;&quot;, time() - 3600);
</code></pre>
</li>
<li>We can also put <code>null</code> in time section to delete cookie.</li>
<li>Example<pre><code>setcookie($cookie_name, &quot;&quot;, null);
</code></pre>
</li>
</ul>
<h3>17. Define GET and POST methods.</h3>
<h4>GET</h4>
<ul>
<li>It sends the encoded user information appended to the page request (to the
URL).</li>
<li>The page and the encoded information are separated by the ? character.</li>
<li>The GET method produces a long string the appears in our server logs, in the
browser’ location box.</li>
<li>The GET method is restricted to send up to 1024 characters only.</li>
<li>Never use GET method if we have password or other sensitive information.</li>
<li>GET cannot be used to send binary data to the server.</li>
<li>The php provides $_GET assoiative array to a access all the sent information
using GET method.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;GET&quot;&gt;
	Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if ($_GET[&quot;name&quot;]) {
	echo $_GET[&quot;name&quot;];
}
?&gt;
</code></pre>
</li>
<li>Output:<pre><code>Name: Joey
Submit

Joey
</code></pre>
</li>
</ul>
<h4>POST</h4>
<ul>
<li>It transfers information via HTTP header, not throought the URL.</li>
<li>The POST method does not have any restriction on data size.</li>
<li>The POST method can be used to send ASCII as well as binary data.</li>
<li>The data sent by POST  method goes through HTTP header, so security depends on
HTTP protocol.</li>
<li>By using secure HTTP, we can make sure that our information is secure.</li>
<li>The PHP provides $_POST associative array to access all the sent information
using POST method.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if ($_POST[&quot;name&quot;]) {
	echo $_POST[&quot;name&quot;];
}
?&gt;
</code></pre>
</li>
<li>Output<pre><code>Name: Joey
Submit

Joey
</code></pre>
</li>
</ul>]]></description>
  </item>
  <item>
    <title>Pratical Sem6</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/php/pratical-sem6.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h2>1. Write a PHP program using expressions and operator (ternary operator, arithmetic operators and comparison operators)</h2>
<pre><code class="language-php">&lt;?php
  echo 1 &gt; 2 ? 1 : 2;
  echo &quot;&lt;br&gt;&quot;;
  echo 1 + 2;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>2
3
</code></pre>
<h2>2. Write a PHP program to the use of decision making and control structures using:</h2>
<h3><code>if</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = 1;
if ($x &gt; 0) {
  echo &quot;The number is positive&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>The number is positive
</code></pre>
<h3><code>if else</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = &quot;August&quot;;

if ($x &gt; 0) {
  echo &quot;The number is positive&quot;;
} else {
  echo &quot;The number is negative&quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Happy Independence Day!!!
</code></pre>
<h3><code>if elseif if</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = &quot;August&quot;;

if ($x &gt; 0) {
  echo &quot;The number is positive&quot;;
} elseif ( $x &lt; 0 ) {
  echo &quot;The number is negative&quot;;
} else {
  echo &quot;The value is not number&quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>The number is positive
</code></pre>
<h3><code>switch case</code> statement</h3>
<pre><code class="language-php">&lt;?php
$n = &quot;Monday&quot;;

switch($n) {
  case &quot;Monday&quot;:
    echo &quot;Its Monday&quot;;
    break;
  case &quot;Tuesday&quot;:
    echo &quot;Its Tuesday&quot;;
    break;
  case &quot;Wednesday&quot;:
    echo &quot;Its Wednesday&quot;;
    break;
  case &quot;Thuesday&quot;:
    echo &quot;Its Thuesday&quot;;
    break;
  case &quot;Friday&quot;:
    echo &quot;Its Friday&quot;;
    break;
  case &quot;Saturday&quot;:
    echo &quot;Its Saturday&quot;;
    break;
  case &quot;Sunday&quot;:
    echo &quot;Its Suday&quot;;
    break;
  default:
    echo &quot;Doesn't exist&quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Its Monday
</code></pre>
<h2>3. Write a PHP program to the use of looping structure using:</h2>
<h3><code>while</code> statement</h3>
<pre><code class="language-php">&lt;?php
$num = 0;

while ($num &lt;= 10) {
  echo $num;
  $num++;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>012345678910
</code></pre>
<h3><code>do while</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = 1;
do {
  echo $x;
  $x++;
} while ($x &lt;= 5);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>12345
</code></pre>
<h3><code>for</code> statement</h3>
<pre><code class="language-php">&lt;?php
for ($i = 1; $i &lt;= 10; $i++) {
  echo $i;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>12345678910
</code></pre>
<h2>4. Write a PHP program to the use of looping structure using for statement, for each statement.</h2>
<h3><code>for</code> statement</h3>
<pre><code class="language-php">&lt;?php
for ($x = 0; $x &lt;= 5; $x++) {
  echo $x;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>012345
</code></pre>
<h3><code>foreach</code> statement</h3>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Hello&quot;, &quot;World&quot;);

foreach ($a as $b) {
  echo $b.&quot; &quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>5. Write a PHP program for creating and manipulating , associative array and multidimensional array.</h2>
<h3>Indexed array</h3>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Red&quot;, &quot;Blue&quot;, &quot;Green&quot;);
echo &quot;My fav color is: &quot;.$a[0];
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>My fav color is: Red
</code></pre>
<h3>Associative arrays</h3>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Red&quot;=&gt;1, &quot;Blue&quot;=&gt;2, &quot;Green&quot;=&gt;3);
echo $a[&quot;Red&quot;].$a[&quot;Blue&quot;],$a[&quot;Green&quot;];
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>123
</code></pre>
<h3>Multidimensional array</h3>
<pre><code class="language-php">&lt;?php
$a = array(array(&quot;Red&quot;, &quot;Blue&quot;, &quot;Green&quot;));
echo &quot;My fav color is: &quot;.$a[0][1];
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>My fav color is: Blue
</code></pre>
<h2>6. Write a PHP program to calculate</h2>
<h3>Length of string</h3>
<pre><code class="language-php">&lt;?php
  echo strlen(&quot;Hello world!&quot;);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>12
</code></pre>
<h3>Count the no of words in string</h3>
<pre><code class="language-php">&lt;?php
  echo str_word_count(&quot;Hello world!&quot;);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>2
</code></pre>
<h3>Compare two string using string function.</h3>
<pre><code class="language-php">&lt;?php
  echo strcmp(&quot;Hello world!&quot;, &quot;Hello world&quot;);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>0
</code></pre>
<h2>7. Write a PHP program using following string function:</h2>
<ul>
<li>strrev()</li>
<li>strpos()</li>
<li>strrpos()</li>
<li>str_replace()</li>
<li>ucwords()</li>
<li>strtoupper()</li>
<li>strtolower()</li>
</ul>
<pre><code class="language-php">&lt;?php
  echo strrev(&quot;Hello world!&quot;).&quot;&lt;/br&gt;&quot;;
  echo strpos(&quot;Hello world!&quot;, &quot;world&quot;).&quot;&lt;/br&gt;&quot;;
  echo strrpos(&quot;I love php, I love php too!&quot;,&quot;php&quot;).&quot;&lt;/br&gt;&quot;;
  echo str_replace(&quot;world&quot;, &quot;bvit&quot;, &quot;Hello world!&quot;).&quot;&lt;/br&gt;&quot;;
  echo ucwords(&quot;Welcome to php world&quot;).&quot;&lt;/br&gt;&quot;;
  echo strtoupper(&quot;Information Technology&quot;).&quot;&lt;/br&gt;&quot;;
  echo strtolower(&quot;INFORMATION TECHNOLOGY&quot;).&quot;&lt;/br&gt;&quot;;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>!dlrow olleH
6
19
Hello bvit!
Welcome To Php World
INFORMATION TECHNOLOGY
information technology
</code></pre>
<h2>8. Write a PHP program to use: and anonymous function.</h2>
<h3>User define function</h3>
<pre><code class="language-php">&lt;?php
  function writeMessage() {
    echo &quot;Welcome to PHP world&quot;;
  }
  writeMessage();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Welcome to PHP world
</code></pre>
<h3>Variable function</h3>
<pre><code class="language-php">&lt;?php
  function writeMessage() {
    echo &quot;Welcome to PHP world&quot;;
  }

  $w = &quot;writeMessage&quot;;
  $w();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Welcome to PHP world
</code></pre>
<h3>Anonymous function</h3>
<pre><code class="language-php">&lt;?php
  $a=function() { echo &quot;Anonymous function&quot;; };
  $a();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Anonymous function
</code></pre>
<h2>9. Write a PHP program to create PDF document by using graphics concept.</h2>
<pre><code class="language-php">&lt;?php
  require('fpdf.php');
  $pdf = new FPDF();
  $pdf-&gt;AddPage();
  $pdf-&gt;SetFont('Arial','B',16);
  $pdf-&gt;Cell(40,10,'Hello World!');
  $pdf-&gt;Output();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>10. Write a PHP program</h2>
<h3>a) To inherit member of superclass in subclass</h3>
<pre><code class="language-php">&lt;?php
class Class1 {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Class2 extends Class1 {
  function echo() {
    echo &quot;Bye World&quot;;
  }
}

$o = new Class2;
$o-&gt;func();
$o-&gt;echo();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Hello World
Bye World
</code></pre>
<h3>b) Create constructor to initialize object of class by using object oriented concept.</h3>
<pre><code class="language-php">&lt;?php
class Obj {
  public function __construct($name, $surname) {
    $this-&gt;name=$name;
    $this-&gt;surname=$surname;
  }
  public function showName() {
    echo &quot;My name is &quot;.$this-&gt;name.&quot; &quot;.$this-&gt;surname;
  }
}

$sid=new Obj(&quot;Aman&quot;,&quot;Varma&quot;);
$sid-&gt;showName();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>My name is Aman Varma
</code></pre>
<h2>11. Write a PHP program on</h2>
<h3>Introspection</h3>
<pre><code class="language-php">&lt;?php
if (!class_exists(&quot;Obj&quot;)) {
  echo &quot;Class don't exists.&quot;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Class don't exists
</code></pre>
<h3>Serialization.</h3>
<pre><code class="language-php">&lt;?php
echo serialize(array(&quot;Red&quot;));
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>a:1:{i:0;s:3:&quot;Red&quot;;}
</code></pre>
<h2>12. Design a web page using following form controls:</h2>
<ul>
<li>a) Textbox</li>
<li>b) Radio button</li>
<li>c) Check box</li>
<li>d) Button</li>
</ul>
<pre><code class="language-php">&lt;form action=&quot;&lt;?php 1_SELF_PHP ?&gt;&quot; method=&quot;post&quot;&gt;
  Name:
  &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
  Sex:
  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male&lt;/input&gt;
  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female&lt;/input&gt;
  Vehical:
  &lt;input type=&quot;checkbox&quot; name=&quot;vehicle[]&quot; value=&quot;bike&quot;&gt;Bike&lt;/input&gt;
  &lt;input type=&quot;checkbox&quot; name=&quot;vehicle[]&quot; value=&quot;car&quot;&gt;Car&lt;/input&gt;
  &lt;input type=&quot;checkbox&quot; name=&quot;vehicle[]&quot; value=&quot;scooter&quot;&gt;Scooter&lt;/input&gt;
  &lt;button name=&quot;submit&quot;&gt;Submit&lt;/button&gt;
&lt;/form&gt;

&lt;?php
if ( isset($_POST[&quot;submit&quot;]) ) {
  echo $_POST[&quot;name&quot;].&quot; is &quot;.$_POST[&quot;sex&quot;].&quot; will travel by &quot;;
  foreach ($_POST[&quot;vehicle&quot;] as $selected) {
    echo $selected.&quot; &quot;;
  }
}
?&gt;
</code></pre>
<h2>13. Design a web page using following form controls:</h2>
<ul>
<li>a) List box</li>
<li>b) Hidden field box</li>
</ul>
<pre><code class="language-php">&lt;form action=&quot;&lt;? $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
  &lt;input type=&quot;hidden&quot; name=&quot;name&quot; value=&quot;Jone&quot;&gt;
  &lt;select name=&quot;foods&quot;&gt;
    &lt;option value=&quot;Tomatoes&quot;&gt;Tomatoes&lt;/option&gt;
    &lt;option value=&quot;Cucumbers&quot;&gt;Cucumbers&lt;/option&gt;
    &lt;option value=&quot;Celery&quot;&gt;Celery&lt;/option&gt;
  &lt;/select&gt;
  &lt;br&gt;
  &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot;/&gt;
&lt;/form&gt;

&lt;?php
  if( isset($_POST[&quot;foods&quot;]) ) {
    echo $_POST[&quot;name&quot;].&quot; have chosen &quot;.$_POST[&quot;foods&quot;];
  }
?&gt;
</code></pre>
<h2>14. Develop a web page with data validation.</h2>
<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
  Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;
  &lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
  if (!preg_match(&quot;/^[a-zA-Z_ ]*$/&quot;, $_POST[&quot;name&quot;])) {
    echo &quot;Only letter and whitespace is allowed&quot;;
  }
?&gt;
</code></pre>
<h2>15. Write a PHP program to:</h2>
<h3>Create cookies</h3>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;Jone&quot;, time() + (86400 * 30), &quot;/&quot;);
?&gt;
&lt;?php
if (isset($_COOKIE[&quot;name&quot;])) {
  echo &quot;Name: &quot;.$_COOKIE[&quot;name&quot;];
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Name: Jone
</code></pre>
<ul>
<li>
<p>Modify cookies value
Set cookie agien with setcookie function.</p>
</li>
<li>
<p>Delete cookies</p>
</li>
</ul>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;&quot;, time() - 3600, &quot;/&quot;);
?&gt;
&lt;?php
if (isset($_COOKIE[&quot;name&quot;])) {
  echo &quot;Name: &quot;.$_COOKIE[&quot;name&quot;];
} else {
  echo &quot;Cookie is not set.&quot;;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Cookie is not set.
</code></pre>
<h2>16. Write a PHP program to:</h2>
<ul>
<li>Start session</li>
<li>Get session variable</li>
<li>Destroy session</li>
</ul>
<pre><code class="language-php">&lt;?php
  session_start();

  $_SESSION[&quot;color&quot;] = &quot;Red&quot;;
  $_SESSION[&quot;animal&quot;] = &quot;Lion&quot;;

  echo $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];

  session_unset();
  session_destroy();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Red Lion
</code></pre>
<h2>17. Write a PHP program for sending and receiving plain text message (sending email).</h2>
<pre><code class="language-php">&lt;?php
  $status = mail(&quot;AnzenKodo@altmail.com&quot;, &quot;Title&quot;, &quot;Hello World&quot;);
  if ($status) {
    echo &quot;Mail is sent.&quot;;
  } else {
    echo &quot;Mail can't be sent&quot;;
  }
?&gt;
</code></pre>
<h2>18. Write a PHP program to</h2>
<h3>Create database</h3>
<pre><code class="language-php">&lt;?php
// Create connection
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
// Check connection
if ($conn-&gt;connect_error) {
  die(&quot;Connection failed.&quot;);
}

// Create database
$sql = &quot;CREATE DATABASE myDB&quot;;
if (mysqli_query($conn, $sql)) {
  echo &quot;Database created successfully&quot;;
} else {
  echo &quot;Error creating database&quot;;
}

mysqli_close($conn);
?&gt;
</code></pre>
<h3>Creation of table.</h3>
<pre><code class="language-php">&lt;?php
// Create connection
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
// Check connection
if (!$conn) {
  die(&quot;Connection failed&quot;);
}

// sql to create table
$sql = &quot;CREATE TABLE MyGuests(id INT(6))&quot;;

if (mysqli_query($conn, $sql)) {
  echo &quot;Table MyGuests created successfully&quot;;
} else {
  echo &quot;Error creating table: &quot; . $conn-&gt;error;
}

$conn-&gt;close();
?&gt;
</code></pre>
<h2>19. Write a PHP program to Inserting and retrieving the query result operations and Update ,Delete operations on table data.</h2>
<pre><code class="language-php">&lt;?php
// Connecting to MySQL
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
  die(&quot;Error: &quot;.mysqli_error($conn));
}

// Inserting data
$sql = &quot;INSERT INTO my_table(id, name) VALUES (1, 'Jone'), (2, 'Jonney)&quot;;
if (!mysqli_query($conn, $sql)) {
  die(&quot;Error&quot;);
}

// Retrieving data
$sql = &quot;SELECT * FROM my_table&quot;;
if ($result = mysqli_query($conn, $sql)) {
  if (mysqli_num_rows($result) &gt; 0) {
    while ($row = mysqli_fetch_array($result)) {
      echo &quot;ID: &quot;.$row[&quot;id&quot;].&quot;, Name: &quot;.$row[&quot;name&quot;];
    }
  } else {
    echo &quot;Rows can't be zero&quot;;
  }
} else {
  die(&quot;Error: &quot;.mysqli_error($conn));
}

// Update data
$sql = &quot;UPDATE my_table SET name='tim' WHERE id=2&quot;;
if (!mysqli_query($conn, $sql) {
  die(&quot;Error&quot;);
}

// Delete data
$sql = &quot;DELETE FROM my_table WHERE id=1&quot;;
if (!mysqli_query($conn, $sql) {
  die(&quot;Error&quot;));
}

mysqli_close();
?&gt;
</code></pre>]]></description>
  </item>
  <item>
    <title>Final</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/php/final.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h1>PHP</h1>
<h2>Attempt any FIVE :</h2>
<h3>(a) Describe advantage of PHP.</h3>
<ul>
<li><strong>Web Application Features</strong> - PHP is a programming language support most
commonly used Web application features like HTTP Cookie, Session, File
Upload, etc.</li>
<li><strong>CLI (Command Line Interface)</strong> - PHP is commonly used to write Web
applications to be integrated to Web servers using the Common Gateway
Interface (CGI).</li>
<li><strong>Built-in Modules</strong> - The standard PHP build comes with many free and open
source libraries included as built-in modules.</li>
<li><strong>Object-Oriented Programming (OOP)</strong> - PHP supports object-oriented
programming features like object.</li>
<li><strong>Pre-Compilation</strong> - PHP Web applications are usually deployed in source
code, which will be interpreted on-the-fly when Web requests arrive to the
server.</li>
<li><strong>Real Time Access Monitoring</strong> - PHP provides access logging by creating the
summary of recent accesses for the user.</li>
<li><strong>File I/O</strong> - PHP supports most commonly used file I/O features like local
file and path management, remote resource access using Internet protocols
like HTTP and FTP.</li>
</ul>
<h3>(b) What is array ? How to store data in array ?</h3>
<ul>
<li>An array is a special variable, which can hold more than one value at a time.</li>
<li>To create array we use <code>array()</code> function.</li>
</ul>
<pre><code class="language-php">&lt;?php
$array = array(&quot;Hello&quot;, &quot;World&quot;);
print_r($array);
</code></pre>
<p>O/P</p>
<pre><code>Array ( [0] =&gt; &quot;Hello&quot;, [1] =&gt; &quot;World&quot; )
</code></pre>
<h3>© List types of inheritance.</h3>
<ul>
<li>Single</li>
<li>Multiple</li>
<li>Multilevel Inheritance.</li>
</ul>
<h3>(d) How can we destroy cookies ?</h3>
<ul>
<li>To delete cookie, we can use <code>setcookie</code> function with expiration date in</li>
</ul>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;&quot;, time() - 3600, &quot;/&quot;);
?&gt;
</code></pre>
<h3>(e) List any four data types in MySQL.</h3>
<ul>
<li>int</li>
<li>float</li>
<li>char</li>
<li>json</li>
<li>boolean</li>
<li>xml</li>
</ul>
<h3>(f) Write syntax of PHP.</h3>
<pre><code class="language-php">&lt;?php
$hello = &quot;Hello World&quot;;
?&gt;
</code></pre>
<h3>(g) How to create session variable in PHP ?</h3>
<p>A session is a way to store information in variables to be used across multiple pages.</p>
<pre><code class="language-php">&lt;?php
session_start();

$_SESSION[&quot;color&quot;] = &quot;Red&quot;;
$_SESSION[&quot;animal&quot;] = &quot;Cat&quot;;
echo $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];
?&gt;
</code></pre>
<h2>2. Attempt any THREE :</h2>
<h3>(a) Write down rules for declaring PHP variable.</h3>
<ul>
<li>A variable starts with the $ sign, followed by the name of the variable.</li>
<li>A variable name must start with a letter or the underscore character.</li>
<li>A variable name cannot start with a number.</li>
</ul>
<h3>(b) Write a program to create associative array in PHP.</h3>
<p>Associative arrays are arrays that use named keys that you assign to them.</p>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Red&quot;=&gt;1, &quot;Blue&quot;=&gt;2, &quot;Green&quot;=&gt;3);
echo $a[&quot;Red&quot;].$a[&quot;Blue&quot;],$a[&quot;Green&quot;];
</code></pre>
<p>O/P</p>
<pre><code>123
</code></pre>
<h3>© Define Introspection and explain it with suitable example.</h3>
<ul>
<li>PHP Introspection is the ability of a program to examine an object’s
characteristics such as its name, parent class (if any), properties and
methods.</li>
<li>Introspection in PHP offers a useful Ability to examine classes’ interfaces
properties methods. With introspection we can write code that operates on any
object or class.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {}

class Obj2 extends Obj {
  public $hello = &quot;world&quot;;
  function func() {}
}
$o = new Obj2;

if (class_exists('Obj2')) {
  echo &quot;Class exists&quot;;
}
if (is_object($o)) {
  echo &quot;Is object&quot;;
}

print_r(get_class($o));
print_r(get_class_methods($o));
print_r(get_class_vars('Obj'));
print_r(get_parent_class($o));
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>class exists
Is object
Obj2
Array ( [0] =&gt; func )
Array ( [hello] =&gt; world )
Obj
</code></pre>
<h3>(d) Write difference between get( ) &amp; post( ) method of form (Any four points).</h3>
<h4>GET</h4>
<ul>
<li>It sends the encoded user information appended to the page request (to the URL).</li>
<li>The page and the encoded information are separated by the ? character.</li>
<li>The GET method produces a long string the appears in our server logs, in the browser’ location box.</li>
<li>The GET method is restricted to send up to 1024 characters only.</li>
<li>Never use GET method if we have password or other sensitive information.</li>
<li>GET cannot be used to send binary data to the server.</li>
<li>The php provides $_GET assoiative array to a access all the sent information using GET method.</li>
</ul>
<h4>POST</h4>
<ul>
<li>It transfers information via HTTP header, not throought the URL.</li>
<li>The POST method does not have any restriction on data size.</li>
<li>The POST method can be used to send ASCII as well as binary data.</li>
<li>The data sent by POST  method goes through HTTP header, so security depends on HTTP protocol.</li>
<li>By using secure HTTP, we can make sure that our information is secure.</li>
<li>The PHP provides $_POST associative array to access all the sent information using POST method.</li>
</ul>
<h2>3. Attempt any THREE :</h2>
<h3>(a) Define function. How to define user defined function in PHP ? Give example.</h3>
<p>A function is a block of statements that can be used repeatedly in a program.</p>
<pre><code class="language-php">&lt;?php
function func() {
  echo &quot;Hello World&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h3>(b) Explain method overloading with example.</h3>
<p>If the derived class is having the same method name as the base class then the method in the derived class takes precedence over or overrides the base class method.</p>
<pre><code class="language-php">&lt;?php
class First {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Second extends First {
  function func() {
    echo &quot;Bye World&quot;;
  }
}

$o = new Second;
$o-&gt;func();
</code></pre>
<h3>© Define session &amp; cookie. Explain use of session start.</h3>
<h4>What is cookie?</h4>
<ul>
<li>Cookie save the data in browser, so next time refresh the browser it will not
delete from browser.</li>
<li>Cookie is used to identify the user.</li>
<li>A cookie is a small file that server embeds to user’s computer.</li>
<li>Each time the same computer requests a page with a browser, it will send the
cookie too.</li>
</ul>
<h4>How to create it?</h4>
<ul>
<li>Use <code>setcookie</code> function to create cookie.</li>
<li>Syntex:<pre><code>setcookie($cookie_name, $cookie_value, $time, $location)
</code></pre>
</li>
</ul>
<h4>Example</h4>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;Jonney&quot;, time() + (86400 * 30), &quot;/&quot;);
if (isset($_COOKIE[&quot;name&quot;])) {
  echo &quot;Name: &quot;.$_COOKIE[&quot;name&quot;];
}
</code></pre>
<p>O/P</p>
<pre><code>Name: Jonney
</code></pre>
<h4>Session</h4>
<ul>
<li>A session is a way to store information in variables to be used across
multiple pages.</li>
<li>Sessions allow us to store data on the web server that associated with a
session ID.</li>
<li>Once we create a session, PHP sends a cookie that contains the session ID to
the web browser.</li>
<li>A session is started with the session_start() function.</li>
<li>The session_start() function first checks if a session is already started and
if none is started then it starts one.</li>
</ul>
<pre><code class="language-php">&lt;?php
session_start()
?&gt;
&lt;?php
$_SESSION[&quot;name&quot;] = &quot;Jonney&quot;;
echo &quot;Name: &quot;.$_SESSION[&quot;name&quot;];
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Name: Jonney
</code></pre>
<h3>(d) Explain delete operation of PHP on table data.</h3>
<ul>
<li>We can create a MySQL database by using MySQL Command Line Client.</li>
<li>Open the MySQL console and write down password, if we set one while
installation.</li>
<li>We will get the following:
<ul>
<li>To create the data base enter <code>CREATE DATABASE database_name</code></li>
<li>To check the database is crated enter <code>SHOW DATABASES</code></li>
</ul>
</li>
<li>Creating database through php:<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);

if (!$conn) {
  die(&quot;Can't connect to MySQL &quot;);
}

$sql = &quot;CRATE DATABASE emp&quot;;

if (!mysqli_query($conn, $sql)) {
  die(&quot;Can't create database &quot;.mysqli_error($conn);
}

echo &quot;Created database &lt;br/&gt;&quot;;
?&gt;
</code></pre>
O/P<pre><code>Created database
</code></pre>
</li>
</ul>
<h2>4. Attempt any THREE :</h2>
<h3>(a) Write PHP script to sort any five numbers using array function.</h3>
<pre><code class="language-php">&lt;?php
$cars = array(&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Toyota&quot;);
sort($cars);
?&gt;
</code></pre>
<p>Output:</p>
<pre><code>BMW
Toyota
Volvo
</code></pre>
<h3>(b) Write PHP program for cloning of an object.</h3>
<pre><code class="language-php">&lt;?php
class Obj {
  public $name;
}

$o = new Obj;
$c = clone $o;

$o-&gt;name = &quot;Jonney&quot;;
$c-&gt;name = &quot;Jone&quot;;

echo &quot;Origenal: &quot;.$o-&gt;name.&quot;, Clone: &quot;.$c-&gt;name;
?&gt;
</code></pre>
<p>Output:</p>
<pre><code>Origenal: Jonney, Clone: JOne
</code></pre>
<h3>© Create customer form like customer name, address, mobile no, date of birth using different form of input elements &amp; display user inserted values in new PHP form.</h3>
<pre><code class="language-php">&lt;form action=&quot;&lt;?php 1_SELF_PHP ?&gt;&quot; method=&quot;post&quot;&gt;
  Name:
  &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
  Sex:
  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male&lt;/input&gt;
  &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female&lt;/input&gt;
  Vehical:
  &lt;input type=&quot;checkbox&quot; name=&quot;vehicle[]&quot; value=&quot;bike&quot;&gt;Bike&lt;/input&gt;
  &lt;input type=&quot;checkbox&quot; name=&quot;vehicle[]&quot; value=&quot;car&quot;&gt;Car&lt;/input&gt;
  &lt;input type=&quot;checkbox&quot; name=&quot;vehicle[]&quot; value=&quot;scooter&quot;&gt;Scooter&lt;/input&gt;
  &lt;button name=&quot;submit&quot;&gt;Submit&lt;/button&gt;
&lt;/form&gt;

&lt;?php
if ( isset($_POST[&quot;submit&quot;]) ) {
  echo $_POST[&quot;name&quot;].&quot; is &quot;.$_POST[&quot;sex&quot;].&quot; will travel by &quot;;
  foreach ($_POST[&quot;vehicle&quot;] as $selected) {
    echo $selected.&quot; &quot;;
  }
}
?&gt;
</code></pre>
<h3>(d) Inserting and retrieving the query result operations.</h3>
<pre><code class="language-php">&lt;?php
$server= &quot;localhost&quot;;
$user = &quot;root&quot;;
$password = &quot;&quot;;
$db = &quot;feedback&quot;;
// Create connection
$conn = new mysqli($server, $user, $password, $db);
// Check connection
if ($conn-&gt;connect_error)
{
die(&quot;Connection failed: &quot; . $conn-&gt;connect_error);
}
$sql = INSERT INTO data VALUES('ashok','you are awesome bro');
[if](if) ($conn-&gt;query($sql) === TRUE)
{
echo &quot;feedback sucessfully submitted&quot;;
}
else
{
echo &quot;Error: &quot; . $sql . &quot;&lt;br&gt;&quot; . $conn-&gt;error;
}
$conn-&gt;close();
?&gt;
</code></pre>
<h3>(e) How do you validate user inputs in PHP ?</h3>
<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
  Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;
  &lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
  if (!preg_match(&quot;/^[a-zA-Z_ ]*$/&quot;, $_POST[&quot;name&quot;])) {
    echo &quot;Only letter and whitespace is allowed&quot;;
  }
?&gt;
</code></pre>
<h2>5. Attempt any TWO :</h2>
<h3>(a) Explain different loops in PHP with example.</h3>
<h4><code>while</code> statement</h4>
<pre><code class="language-php">&lt;?php
$num = 0;

while ($num &lt;= 10) {
  echo $num;
  $num++;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>012345678910
</code></pre>
<h4><code>do while</code> statement</h4>
<pre><code class="language-php">&lt;?php
$x = 1;

do {
  echo &quot;The number is: $x &lt;br&gt;&quot;;
  $x++;
} while ($x &lt;= 5);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>The number is: 1
The number is: 2
The number is: 3
The number is: 4
The number is: 5
</code></pre>
<h4><code>for</code> loop</h4>
<pre><code class="language-php">&lt;?php
for ($i = 1; $i &lt;= 10; $i++) {
  echo $i.&quot; &quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>1 2 3 4 5 6 7 8 9 10
</code></pre>
<h3>(b) How do you connect MySQL database with PHP.</h3>
<pre><code class="language-php">&lt;?php
  // Creating connection
  $conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);

  // Checking connection
  if (!$conn) {
      die(&quot;Connection failed.&quot;);
  }
  echo &quot;Connected successfully&quot;;
?&gt;
</code></pre>
<h3>© Create a class as “Percentage” with two properties length &amp; width. Calculate area of rectangle for two objects.</h3>
<pre><code class="language-php">&lt;?php
class Rectangle {
  public $width = 0;
  public $height = 0;

  function setSize($w = 0, $h = 0) {
    $this-&gt;width = $w;
    $this-&gt;height = $h;
  }

  function getArea() {
    return ($this-&gt;width * $this-&gt;height);
  }

  function getPerimeter() {
    return ( ($this-&gt;width + $this-&gt;height) * 2 );
  }

  function isSquare() {
    if ($this-&gt;width == $this-&gt;height) {
       return true;
     } else {
        return false;
     }
  }

}
</code></pre>
<h2>6. Attempt any TWO :</h2>
<h3>(a) Write a PHP program to demonstrate use of cookies.</h3>
<ul>
<li>Cookie save the data in browser, so next time refresh the browser it will not
delete from browser.</li>
<li>Cookie is used to identify the user.</li>
<li>A cookie is a small file that server embeds to user’s computer.</li>
<li>Each time the same computer requests a page with a browser, it will send the
cookie too.</li>
</ul>
<h4>How to create it?</h4>
<ul>
<li>Use <code>setcookie</code> function to create cookie.</li>
<li>Syntex:<pre><code>setcookie($cookie_name, $cookie_value, $time, $location)
</code></pre>
</li>
</ul>
<h4>Example</h4>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;Jonney&quot;, time() + (86400 * 30), &quot;/&quot;);
if (isset($_COOKIE[&quot;name&quot;])) {
  echo &quot;Name: &quot;.$_COOKIE[&quot;name&quot;];
}
</code></pre>
<p>O/P</p>
<pre><code>Name: Jonney
</code></pre>
<h3>(b) Explain any four string functions in PHP with example.</h3>
<ul>
<li><strong>strrev()</strong> - Reverses a string.</li>
<li><strong>strpos()</strong> - Returns the position of the first occurrence of a string.</li>
<li><strong>strrpos()</strong> - Finds the position of the last occurrence of a string.</li>
<li><strong>str_replace()</strong> - Replaces some characters in a string.</li>
</ul>
<h3>© What is inheritance?</h3>
<ul>
<li>The old class is the base class, also called as parent class or super class,
and the new class is the derived class also called as child class or sub
class.</li>
<li>The derived class has its own variables and methods plus variables and
methods from the base class.</li>
<li>The <code>extends</code> keyword is used for the inheritance.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Class1 {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Class2 extends Class1 {
  function echo() {
    echo &quot;Bye World&quot;;
  }
}

$o = new Class2;
$o-&gt;func();
$o-&gt;echo();
</code></pre>
<p>O/P</p>
<pre><code>Hello World
Bye World
</code></pre>
<h3>(ii) Write update operation on table data.</h3>
<pre><code class="language-php">&lt;?php
// Connect MySQL
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
  echo &quot;Error: &quot;.mysqli_error($conn);
}

// Create table
$table = &quot;CREATE TABLE employee(id INT(4), name VARCHAR(22), salary INT(4))&quot;;
if (!mysqli_query($conn, $table)) {
  echo &quot;Can't create table.&quot;;
}
echo &quot;Created table&lt;br/&gt;&quot;;

// Insert data
$insert = &quot;INSERT INTO employee(id, name, salary) VALUES (1, 'Sam', 3200), (2, 'Jonney', 4500), (3, 'Jone', 2000)&quot;;
if (!mysqli_query($conn, $insert)) {
  echo &quot;Can't insert data.&quot;;
}

// Dalete data
$delete = &quot;DELETE FROM employee WHERE id=2&quot;;
if (!mysqli_query($conn, $delete)) {
  echo &quot;Can't delete data.&quot;;
}

// Retrive data
$retrive = &quot;SELECT * FROM employee&quot;;
$result = mysqli_query($conn, $retrive);

if (mysqli_num_rows($result)) {
  while ($row = mysqli_fetch_assoc($result)) {
    echo &quot;Name: &quot;.$row['name'].&quot;, Salary: &quot;.$row['salary'].&quot;, ID: &quot;.$row['id'].&quot;&lt;/br&gt;&quot;;
  }
}
?&gt;
</code></pre>]]></description>
  </item>
  <item>
    <title>Sample Paper 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/php/sample-paper-6s.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h1><em>22619</em> - Web Based Application development with PHP</h1>
<ul>
<li><strong>Programme Name:</strong> Computer/Information Technology Engineering</li>
<li><strong>Programmecode:</strong> CO/IF</li>
<li><strong>Semester:</strong> VI Sem</li>
<li><strong>Marks:</strong> 70</li>
</ul>
<h2>Q.1) Attempt any FIVE of the following. <em>(10 Marks)</em></h2>
<h3>a) List any four advantages of PHP?</h3>
<ol>
<li>PHP is open source and free from cost.</li>
<li>It is platform independent.</li>
<li>PHP based application can run on any OS like UNIX, Linux and Windows, etc</li>
<li>Easy to learn.</li>
<li>Has built-in database connection modules.</li>
</ol>
<h3>b) State the use of <code>str_word_count</code> along with its syntax.</h3>
<ul>
<li><code>str_word_count()</code> function counts the numbers of word in a string.</li>
<li>Syntax:<pre><code>str_word_count(string,return,char)
</code></pre>
</li>
<li>Example:<pre><code class="language-php">&lt;?php
echo set_word_count(&quot;Hello World&quot;);
?&gt;
</code></pre>
O/P<pre><code>2
</code></pre>
</li>
</ul>
<h3>c) Define serialization.</h3>
<ul>
<li>Serialization of data means converting it into a string of bytes in such a way
that you can produce the original data again from the string via a process as
unserialization.</li>
<li>After you have the ability to serialize/unserialize, you can store your
serialized string anywhere and recreate a copy of the data again when needed.</li>
<li>PHP offers two functions, serialize() and unserialize(), which take a value of
any type (except type resource) and encode the value into string form and
decode again, respectively.</li>
</ul>
<h3>d) Write the syntax for creating Cookie.</h3>
<ul>
<li>To set cookie in PHP, the <code>setcookie()</code> function is used.</li>
<li>Syntex:<pre><code class="language-php">setcookie($name, $value, $expire_time, $path, $domain)
</code></pre>
</li>
<li><code>setcookie()</code> function the parameters.
<ul>
<li><strong>name</strong> - Name of the cookie, which is used with $_COOKIE function to get
value.</li>
<li><strong>value</strong> - Value of the named variable.</li>
<li><strong>expire time</strong> - Time when cookie will expire.</li>
<li><strong>path</strong> - Directory where cookie will valied.</li>
<li><strong>domain</strong> - The default server hostname.</li>
</ul>
</li>
</ul>
<h3>e) Write syntax of Connecting PHP Webpage with MySQL.</h3>
<ul>
<li>
<p>Syntex:</p>
<pre><code>mysqli_connect(host, username, password, dbname, port, socket)
</code></pre>
</li>
<li>
<p>Parameter:</p>
<ul>
<li><strong>host</strong> - Specifies a host name or an IP address.</li>
<li><strong>username</strong> -Specifies the MySQL username</li>
<li><strong>password</strong> - Specifies the MySQL password</li>
<li><strong>dbname</strong> - Specifies the default database to be used</li>
<li><strong>port</strong>  - Specifies the port number to attempt to connect to the MySQL
server</li>
<li><strong>socket</strong> - Specifies the socket or named pipe to be used</li>
</ul>
</li>
<li>
<p>Example:</p>
<pre><code class="language-php">&lt;?php
mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;/&quot;, &quot;domain.com&quot;,
	&quot;/run/mysql/mysql.sock&quot;)
</code></pre>
</li>
</ul>
<h3>f) Define GET and POST methods.</h3>
<h4>GET</h4>
<ul>
<li>It sends the encoded user information appended to the page request (to the
URL).</li>
<li>The page and the encoded information are separated by the ? character.</li>
<li>The GET method produces a long string the appears in our server logs, in the
browser location box.</li>
<li>The GET method is restricted to send up to 1024 characters only.</li>
<li>Never use GET method if we have password or other sensitive information.</li>
<li>GET cannot be used to send binary data to the server.</li>
<li>The php provides $_GET assoiative array to a access all the sent information
using GET method.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;GET&quot;&gt;
	Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;
&lt;?php
if ($_GET[&quot;name&quot;]) {
	echo $_GET[&quot;name&quot;];
}
?&gt;
</code></pre>
</li>
<li>Output:<pre><code>Name: Joey
Submit
Joey
</code></pre>
</li>
</ul>
<h4>POST</h4>
<ul>
<li>It transfers information via HTTP header, not throought the URL.</li>
<li>The POST method does not have any restriction on data size.</li>
<li>The POST method can be used to send ASCII as well as binary data.</li>
<li>The data sent by POST  method goes through HTTP header, so security depends on
HTTP protocol.</li>
<li>By using secure HTTP, we can make sure that our information is secure.</li>
<li>The PHP provides $_POST associative array to access all the sent information
using POST method.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;
&lt;?php
if ($_POST[&quot;name&quot;]) {
	echo $_POST[&quot;name&quot;];
}
?&gt;
</code></pre>
</li>
<li>Output<pre><code>Name: Joey
Submit
Joey
</code></pre>
</li>
</ul>
<h3>g) State the use of <code>$</code> sign in PHP.</h3>
<ul>
<li>The $ operator in PHP is used to declare a variable.</li>
<li>A variable starts with the $ sign followed by the name of the variable.</li>
<li>Example:<pre><code class="language-php">&lt;?php
$var_name = &quot;Hello World!&quot;;
?&gt;
</code></pre>
</li>
</ul>
<h2>Q.2) Attempt any THREE of the following. <em>(12 Marks)</em></h2>
<h3>a) Write a program using foreach loop.</h3>
<pre><code class="language-php">&lt;?php
  //declare array
  $season = array (&quot;Summer&quot;, &quot;Winter&quot;, &quot;Autumn&quot;, &quot;Rainy&quot;);
  //access array elements using foreach loop
  foreach ($season as $element) {
    echo &quot;$element&quot;;
    echo &quot;&lt;/br&gt;&quot;;
  }
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Summer
Winter
Autumn
Rainy
</code></pre>
<h3>b) Explain Indexed and Associative arrays with suitable example.</h3>
<h4>Indexed arrays</h4>
<p>Indexed array: An array having only integer keys is typically referred to as an
indexed array and index arrays can store numbers, drinks and any object but
their index will be represented by number.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  // Define an indexed array
  $colors = array(&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;);
  // Printing array structure
  print_r($colors);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Array ( [0] =&gt; Red [1] =&gt; Green [2] =&gt; Blue )
</code></pre>
<h4>Associative arrays</h4>
<p>The associative arrays are very similar to numeric arrays in terms of
functionality but they are different in terms of their index. Associative arrays
will have their index as string so that you can establish a strong association
between key and values.</p>
<pre><code class="language-php">&lt;?php
  // Define an associative array
  $ages = array(&quot;Peter&quot;=&gt;22, &quot;Clark&quot;=&gt;32, &quot;John&quot;=&gt;28);
  // Printing array structure
  print_r($ages);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Array ( [Peter] =&gt; 22 [Clark] =&gt; 32 [John] =&gt; 28 )
</code></pre>
<h3>c) Define Introspection and explain it with suitable example.</h3>
<p>PHP Introspection is the ability of a program to examine an object’s
characteristics such as its name, parent class (if any), properties and methods.</p>
<p>Introspection  in PHP offers a useful Ability  to examine classes’ interfaces
properties methods. With introspection we can write  code that operates on any
object or class.</p>
<p><strong>Example</strong>:</p>
<pre><code class="language-php">&lt;?php
  if (class_exists('MyClass')) {
    $myclass = new MyClass();
  }
?&gt;
</code></pre>
<h3>d) Differentiate between Session and Cookies.</h3>
<table>
<thead>
<tr>
<th>SESSION</th>
<th>COOKIES</th>
</tr>
</thead>
<tbody>
<tr>
<td>Session are stored in server side</td>
<td>Cookies are stored in client browser.</td>
</tr>
<tr>
<td>Session is server resource.</td>
<td>Cookies are client-side resource.</td>
</tr>
<tr>
<td>It stores unlimeted data.</td>
<td>It stores limited data.</td>
</tr>
<tr>
<td>It holds multiple variables.</td>
<td>It doen’t hold multiple variables.</td>
</tr>
<tr>
<td>Session values can’t accessed easily.</td>
<td>Cookies values can accessed easily.</td>
</tr>
<tr>
<td>It is more secure.</td>
<td>It is less secure.</td>
</tr>
</tbody>
</table>
<h2>Q.3) Attempt any THREE of the following. <em>(12 Marks)</em></h2>
<h3>a) Differentiate between implode and explode functions.</h3>
<table>
<thead>
<tr>
<th>No.</th>
<th>Implode</th>
<th>Explode</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>The implode() function returns a string from the elements of an array.</td>
<td>explode function breaks a string  into smaller parts and stores it  as an array.</td>
</tr>
<tr>
<td>2</td>
<td>The implode() function accepts its  parameters in either order.  However, for consistency with explode(),  you should use the documented order of  arguments.</td>
<td>The explode() function splits  these strings based on a specific  delimiter and returns an array that  contains elements which are sustained  by the splitting operation.</td>
</tr>
<tr>
<td>3</td>
<td>syntax :-string implode (pieces)</td>
<td>array explode (delimiter, string, limit)</td>
</tr>
<tr>
<td>4</td>
<td><strong>Example</strong>:  <code>php &lt;?php $arr = array(&quot;I&quot;, &quot;love&quot;, &quot;PHP.&quot;); $pole = implode(&quot; &quot;, $arr); \ echo &quot;$pole&quot;; ?&gt; </code>  Output: I love PHP.</td>
<td>Example: <?php  $string = "I love php."; $pole = explode(" ", $string); \ \ print_r($pole); ?>  Output: Array ( [0] =&gt; I [1] =&gt; love [2] =&gt; php. )</td>
</tr>
</tbody>
</table>
<h3>b) Write a program for cloning of an object.</h3>
<pre><code class="language-php">&lt;?php
class Obj {
  public $name;
}

$o = new Obj;
$c = clone $o;

$o-&gt;name = &quot;Jonney&quot;;
$c-&gt;name = &quot;Jone&quot;;

echo &quot;Origenal: &quot;.$o-&gt;name.&quot;, Clone: &quot;.$c-&gt;name;
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Origenal: Jonney, Clone: JOne
</code></pre>
<h3>c) Define session and explain how it works.</h3>
<ul>
<li>A session is a way to store information in variables to be used across
multiple pages.</li>
<li>Sessions allow us to store data on the web server that associated with a
session ID.</li>
<li>Once we create a session, PHP sends a cookie that contains the session ID to
the web browser.</li>
<li>A session is started with the session_start() function.</li>
<li>The session_start() function first checks if a session is already started and
if none is started then it starts one.</li>
<li>Example:<pre><code class="language-php">&lt;?php
session_start();
$_SESSION[&quot;color&quot;] = &quot;Red&quot;;
$_SESSION[&quot;animal&quot;] = &quot;Cat&quot;;
echo $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];
?&gt;
</code></pre>
</li>
</ul>
<h3>d) Write Update and Delete operations on table data.</h3>
<h2>Q.4) Attempt any THREE of the following. <em>(12 Marks)</em></h2>
<h3>a) State the variable function.Explain it with example.</h3>
<p>PHP supports the concept of variable function means that we can call a function
based on a value of a variable if a variable name has a round parentheses
appended to it PHP will look for a function with the same name as a whatever
variable Evaluates to and will attempt to execute it.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  function add($x, $y){
    echo $x + $y;
  }
  $var =  &quot;add&quot;;
  $var(10,20);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>30
</code></pre>
<h3>b) Explain the concept of Serialization with example.</h3>
<p>A string representation of any object in the form of byte-stream is obtained by
serialize() function in PHP. All property variables of the object are contained
in the string and methods are not saved. This string can be stored in any file.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
echo serialize(array(&quot;Red&quot;));
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>a:1:{i:0;s:3:&quot;Red&quot;;}
</code></pre>
<h3>c) Answer the following:</h3>
<h4>i) Get session variables</h4>
<ul>
<li>The session variables are not passed individually to each new page, instead
they are retrieved from the session we open at the beginning of each page.</li>
<li>All session variable values are stored in the global <code>$_SESSION</code> variable.</li>
</ul>
<h4>ii) Destroy session.</h4>
<ul>
<li>To remove all global session variables and destroy the session, we use
<code>session_unset()</code> and <code>session_destroy()</code> functions.</li>
<li>No arguments are needed in <code>session_destroy()</code> function.</li>
<li>Example:<pre><code class="language-php">&lt;?php
session_start();
$_SESSION[&quot;color&quot;] = &quot;red&quot;;
$_SESSION[&quot;animal&quot;] = &quot;Lion&quot;;
echo $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];
session_unset();
session_destroy();
?&gt;
</code></pre>
</li>
</ul>
<h2>Q.5) Attempt any TWO of the following. <em>(12 Marks)</em></h2>
<h3>a) Explain any three data types used in PHP.</h3>
<ol>
<li><strong>Integer:</strong> integer data type used to specify a numeric value  without a fractional component the range of integers.</li>
<li><strong>Strings:</strong> a string is a sequence of characters where characters are the same as a byte.</li>
<li><strong>Boolean:</strong> boolean  value can be either true or false both are  case-insensitive.</li>
</ol>
<h3>b) Write a program to connect PHP with MySQL.</h3>
<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;mydb&quot;, &quot;root&quot;, &quot;root&quot;);
if ($conn) {
	echo &quot;Connection Successful&quot;;
} else {
	echo &quot;Connection Unsuccessful&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>Connction Successful
</code></pre>
<h3>c) Explain the concept of overriding in detail.</h3>
<p>In function overriding, both parent and child classes should have the same
function name with and number of arguments. It is used to replace the parent
method in child class.</p>
<pre><code class="language-php">&lt;?php
class ParentClass {
  function helloWorld() {
    echo &quot;Parent&quot;;
  }
}
class ChildClass extends ParentClass {
  function helloWorld() {
    echo &quot;Child&quot;;
  }
}
$p = new ParentClass;
$c = new ChildClass;
$p-&gt;helloWorld();
$c-&gt;helloWorld();
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Parent
Child
</code></pre>
<h2>Q.6) Attempt any TWO of the following. <em>(12 Marks)</em></h2>
<h3>a) Explain web page validation with example.</h3>
<ul>
<li>For validating a web page we use preg_match() function.</li>
<li>The preg_match() function searches string for pattern, returning true if
pattern exists, and false otherwise.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;
&lt;?php
if (!preg_match(&quot;/^[a-zA-Z_ ]*$/&quot;, $_POST[&quot;name&quot;])) {
	echo &quot;Only letter and whitespace is allowed&quot;;
}
?&gt;
</code></pre>
</li>
</ul>
<h3>b) Write a program to create PDF document in PHP.</h3>
<pre><code class="language-php">&lt;?php
  require('fpdf.php');
  $pdf = new FPDF();
  $pdf-&gt;AddPage();
  $pdf-&gt;SetFont('Arial','B',16);
  $pdf-&gt;Cell(40,10,'Hello World!');
  $pdf-&gt;Output();
?&gt;
</code></pre>
<h3>c) Elaborate the following:</h3>
<h4>i) __call()</h4>
<ul>
<li>The __call() method is invoked automatically when a non-existing method or
inaccessible method is called.</li>
<li>The __call() method accepts two arguments:
<ul>
<li>$name is the name of the method that is being called by the object.</li>
<li>$arguments is an array of arguments passed to the method call.</li>
</ul>
</li>
<li>Syntax:<pre><code>public __call ( string $name , array $arguments ) : mixed
</code></pre>
</li>
<li>Example:<pre><code class="language-php">&lt;?php
  class Obj {
  	function __call($method, $argument) {
  		print_r($method);
  		print_r($argument);
  	}
  }

  $o = new Obj;

  $o-&gt;hello(&quot;World&quot;);
?&gt;
</code></pre>
O/P<pre><code>hello
Array([0]=&gt;&quot;World&quot;)
</code></pre>
</li>
</ul>
<h4>ii) mysqli_connect()</h4>
<ul>
<li>This function opens a connection to a MySQL server.</li>
<li>It returns a MySQL link identifier on success, or FALSE on failure.</li>
<li>Syntax:<pre><code class="language-php">mysqli_connect($server, $username, $password)
</code></pre>
</li>
<li>Example:<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;mydb&quot;, &quot;root&quot;, &quot;root&quot;, &quot;text&quot;);
?&gt;
</code></pre>
</li>
</ul>]]></description>
  </item>
  <item>
    <title>UT1 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/php/ut1-6s.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h2>Write a php program to find the largest number among three numbers.</h2>
<pre><code class="language-php">&lt;?php
  function largest($x, $y, $z) {
    if ($x &gt;= $y) {
      if($x &gt;= $z) {
        echo $x;
      } else {
        echo $z;
      }
    }
    else {
      if($y &gt;= $z) {
        echo $y;
      } else {
        echo $z;
      }
    }
  }

  largest(100, 50, 25);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>100
</code></pre>
<h2>Write a php code for creating a basic image.</h2>
<pre><code class="language-php">&lt;?php
$image = imagecreatetruecolor(500, 300);
imagefilledrectangle($image, 20, 20, 480, 280);
header(&quot;Content-type: image/png&quot;);
imagepng($image);
?&gt;
</code></pre>
<h2>Explain inheritance with examples.</h2>
<p>In Inheritance  the new class can inherit the properties and methods from the
old class.</p>
<p>The old class is the base class also called a parent class and then the new
class is a derived  class also called a subclass.</p>
<p><strong>Example</strong>:</p>
<pre><code class="language-php">&lt;?php
  class Person {
    var $name, $age;
  }
  class Employee extends Person {
    var $salary, $designation;
  }
?&gt;
</code></pre>
<h2>Explain the concept of introspection in php with an example.</h2>
<p>PHP Introspection is the ability of a program to examine an object’s
characteristics such as its name, parent class (if any), properties and methods.</p>
<p>Introspection  in PHP offers a useful Ability  to examine classes’ interfaces
properties methods. With introspection we can write  code that operates on any
object or class.</p>
<p><strong>Example</strong>:</p>
<pre><code class="language-php">&lt;?php
  if (class_exists('MyClass')) {
    $myclass = new MyClass();
  }
?&gt;
</code></pre>
<h2>How to use overloading and overriding functions in php?</h2>
<h2>Overloading</h2>
<p>Method overloading is the ability to create a multiple function
of the same name with a different implementation  depending upon the types of
arguments.</p>
<p>How to use overloading in PHP?</p>
<pre><code class="language-php">&lt;?php
class First {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Second extends First {
  function func() {
    echo &quot;Bye World&quot;;
  }
}

$o = new Second;
$o-&gt;func();
</code></pre>
<p>O/P</p>
<pre><code>Bye World
</code></pre>
<h2>Overriding</h2>
<p>In function overriding, both parent and child classes should have the same
function name with and number of arguments. It is used to replace the parent
method in child class.</p>
<pre><code class="language-php">&lt;?php
&lt;?php
class First {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Second extends First {
  function func() {
    echo &quot;Bye World&quot;;
  }
}

$f = new First;
$s = new Second;
$f-&gt;func();
$s-&gt;func();
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Hello World
Bye World
</code></pre>
<h2>How to use the flip function in php.</h2>
<p>The array_flip function flips/All keys with their associated values in array.</p>
<p>This function is very useful when we have a big/ large array.and we want to
know if a given value  is in the array.</p>
<p><strong>Syntax</strong>:</p>
<pre><code>array_flip(array_name)
</code></pre>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  $a = array(&quot;a&quot;);
  print_r(array_flip($a));  //flip function is used
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Array( [0]=&gt; a )
</code></pre>
<h2>How to define properties and methods of a class? Explain with suitable examples.</h2>
<ol>
<li>Objects have access to special variables called. properties.</li>
<li>A property Can be valued as an array and even another object.</li>
<li>All properties go inside the curly braces.</li>
<li>The characteristics of a class are known as its properties.</li>
</ol>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  class Student {
    var $roll_no;
    var $name;
    function display() {
      echo &quot;Roll No: &quot; . $this-&gt;roll_no. &quot;&lt;br&gt;&quot;;
      echo &quot;Name: &quot; $this-&gt;name;
    }
  }

  $s1 = new Student;
  $s1-&gt;roll_no = 10;
  $s1-&gt;name = &quot;Amar&quot;;
  $si-&gt;display();
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Roll No: 10
Name: Amar
</code></pre>
<p>A class method is exactly similar to PHP functions.</p>
<ol>
<li>Method is a function defined within the class.</li>
<li>Methods on the other hand are functions that operate on the data.</li>
<li>Method is also written within the braces {}.</li>
</ol>
<p>The method can be accessed from outside the class.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
class Person {
	public $age = 25;

	public function printAge() {
		echo &quot;The age is: $this-&gt;age&quot;;
	}
}

$person = new Person;
$person-&gt;age = 20;
$person-&gt;printAge();
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>The age is: 20
</code></pre>
<h2>Explain the arithmetic operators that can be used in php with examples.</h2>
<p>The PHP arithmetic operators are used with numeric values to perform common
arithmetical operations, such as addition, subtraction, multiplication etc.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  $a = 42;
  $b = 20;

  $c = $a + $b;
  echo &quot;Addition is: $c &lt;br/&gt;&quot;;
  $c = $a - $b;
  echo &quot;Subtraction is: $c &lt;br/&gt;&quot;;
  $c = $a * $b;
  echo &quot;Multiplication is: $c &lt;br/&gt;&quot;;
  $c = $a / $b;
  echo &quot;Division is: $c &lt;br/&gt;&quot;;
  $c = $a % $b;
  echo &quot;Modulus is: $c &lt;br/&gt;&quot;;
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Addition is: 62
Subtraction is: 22
Multiplication is: 840
Division is: 2.1
Modulus is: 2
</code></pre>
<h2>What is the use of anonymous functions in php? Explain with examples.</h2>
<p>Anonymous functions, also known as closures, allow the creation of functions
which have no specified name. They are most useful as the value of callable
parameters, but they have many other uses.</p>
<pre><code class="language-php">&lt;?php
$func = function () { echo &quot;Hello World&quot;; };
$func();
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>Explain cloning objects with examples.</h2>
<p>Object cloning is the process in PHP to create a copy of an object. An object
copy is created by using the clone keyword when the object is cloned PHP will
perform Shallow copy  of all the object properties and properties that are
referenced to their variables will remain references.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
class Obj {
  public $name;
}

$o = new Obj;
$c = clone $o;

$o-&gt;name = &quot;Jonney&quot;;
$c-&gt;name = &quot;Jone&quot;;

echo &quot;Origenal: &quot;.$o-&gt;name.&quot;, Clone: &quot;.$c-&gt;name;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Origenal: Jonney, Clone: Jone
</code></pre>
<h2>Explain indexed and associative arrays with examples.</h2>
<p>Indexed array: An array having only integer keys is typically referred to as an
indexed array and index arrays can store numbers, drinks and any object but
their index will be represented by number.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  $colors = array(&quot;Red&quot;);
  print_r($colors);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Array ( [0] =&gt; Red )
</code></pre>
<p>The associative arrays are very similar to numeric arrays in terms of
functionality but they are different in terms of their index. Associative arrays
will have their index as string so that you can establish a strong association
between key and values.</p>
<pre><code class="language-php">&lt;?php
  $ages = array( &quot;Peter&quot;=&gt;22 );
  print_r($ages);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Array ( [Peter] =&gt; 22 )
</code></pre>
<h2>How to define constructor and destructor in php with an example?</h2>
<ul>
<li><strong>constructor</strong> - When we create a new object it is useful to initialize its
properties.</li>
<li><strong>destructor</strong> - The destructor method will be called as soon as there are no
other references to a particular object.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {
  function __construct() {
    echo &quot;Class created&quot;;
  }

  function __destruct() {
    echo &quot;Class destroyed&quot;;
  }
}

$o = new Obj;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Class Created
Class Destroyed
</code></pre>
<h2>Explain the following string function with an example.</h2>
<ol>
<li>strpos()</li>
<li>strlen()</li>
<li>strcmp()</li>
<li>str_word_count()</li>
<li>strpos()</li>
</ol>
<ul>
<li><strong>strpos()</strong> - Returns the position of the first occurrence of a string.</li>
<li><strong>strlen()</strong> - Returns the length of a string.</li>
<li><strong>strcmp()</strong> - Compares two strings.</li>
<li><strong>str_word_count()</strong> - Count the number of words in a string.</li>
<li><strong>strrpos()</strong> - Finds the position of the last occurrence of a string.</li>
</ul>
<pre><code class="language-php">&lt;?php
echo strpos(&quot;Hello World&quot;, &quot;Hello&quot;);
echo strlen(&quot;Hello World&quot;);
echo strcmp(&quot;Hello World&quot;, &quot;Hello World&quot;);
echo str_word_count(&quot;Hello World&quot;);
echo strrpos(&quot;Hello World&quot;, &quot;Hello&quot;);
</code></pre>
<p>O/P</p>
<pre><code>0
11
0
2
0
</code></pre>
<h2>Write a program using a foreach loop.</h2>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
$a = array(1, 2, 3, 4, 5);
foreach ($a as $n) {
  echo $n;
}
</code></pre>
<p>O/P</p>
<pre><code>12345
</code></pre>
<h2>Explain serialization with suitable examples.</h2>
<p>A string representation of any object in the form of byte-stream is obtained by
serialize() function in PHP. All property variables of the object are contained
in the string and methods are not saved. This string can be stored in any file.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
echo serialize(array(&quot;Red&quot;));
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>a:1:{i:0;s:3:&quot;Red&quot;;}
</code></pre>
<h2>Define <code>imagecolorallocate()</code> function along with suitable examples.</h2>
<p><code>imagecolorallocate()</code> function is another inbuilt PHP function mainly used to
implement a new color to an image. It returns the color of an image in an RGB
format (RED GREEN BLUE).</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  $im = imagecreate(100, 100);
  // sets background to red
  $background = imagecolorallocate($im, 255, 0, 0);
  // sets some colors
  $white = imagecolorallocate($im, 255, 255, 255);
  $black = imagecolorallocate($im, 0, 0, 0);
  // hexadecimal way
  $white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
  $black = imagecolorallocate($im, 0x00, 0x00, 0x00);
?&gt;
</code></pre>
<h2>Write a program to create a filled rectangle.</h2>
<pre><code class="language-php">&lt;?php
$image = imagecreatetruecolor(500, 300);
imagefilledrectangle($image, 20, 20, 480, 280);
header(&quot;Content-type: image/png&quot;);
imagepng($image);
?&gt;
</code></pre>
<h2>Explain any three data types used in php.</h2>
<ol>
<li><strong>Integer:</strong> integer data type used to specify a numeric value  without a fractional component the range of integers.</li>
<li><strong>Strings:</strong> a string is a sequence of characters where characters are the same as a byte.</li>
<li><strong>Boolean:</strong>   boolean  value can be either true or false both are  case-insensitive.</li>
</ol>
<h2>Differentiate between implode and explode function.</h2>
<table>
<thead>
<tr>
<th>No.</th>
<th>Implode</th>
<th>Explode</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>The implode() function returns a string from the elements of an array.</td>
<td>explode function breaks a string  into smaller parts and stores it  as an array.</td>
</tr>
<tr>
<td>2</td>
<td>The implode() function accepts its  parameters in either order.  However, for consistency with explode(),  you should use the documented order of  arguments.</td>
<td>The explode() function splits  these strings based on a specific  delimiter and returns an array that  contains elements which are sustained  by the splitting operation.</td>
</tr>
<tr>
<td>3</td>
<td>syntax :-string implode (pieces)</td>
<td>array explode (delimiter, string, limit)</td>
</tr>
<tr>
<td>4</td>
<td><strong>Example</strong>:  <code>php &lt;?php $arr = array(&quot;I&quot;, &quot;love&quot;, &quot;PHP.&quot;); $pole = implode(&quot; &quot;, $arr); \ echo &quot;$pole&quot;; ?&gt; </code>  Output: I love PHP.</td>
<td>Example: <?php  $string = "I love php."; $pole = explode(" ", $string); \ \ print_r($pole); ?>  Output: Array ( [0] =&gt; I [1] =&gt; love [2] =&gt; php. )</td>
</tr>
</tbody>
</table>
<h2>State the variable function. Explain it with an example.</h2>
<p>PHP supports the concept of variable function means that we can call a function
based on a value of a variable if a variable name has a round parentheses
appended to it PHP will look for a function with the same name as a whatever
variable Evaluates to and will attempt to execute it.</p>
<p><strong>Example:</strong></p>
<pre><code class="language-php">&lt;?php
  function add($x, $y){
    echo $x + $y;
  }
  $var =  &quot;add&quot;;
  $var(10,20);
?&gt;
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>30
</code></pre>]]></description>
  </item>
  <item>
    <title>Notes</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/php/notes.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h1>1. Expressions and Control Statements in PHP</h1>
<h2>1. What is web application?</h2>
<ul>
<li>A Web application is a computer software or program that performs some
specific tasks at its client by using a Web browser.</li>
<li>The Web-based applications are also known as Web apps.</li>
<li>Web applications are usually based on the client-server architecture where
the client input/request data while the server stores and responds with
result.</li>
</ul>
<h2>3. What is PHP?</h2>
<ul>
<li>PHP is a widely used open source language that is specifically used for web
application development and can be embedded within HTML.</li>
<li>PHP is a server-side scripting language that is used in Web based
applications.</li>
<li>PHP is a general-purpose programming language originally designed for web
application development. PHP is a recursive. acronym for “PHP: Hypertext
Preprocessor”.</li>
</ul>
<h2>4. Enlist features of PHP.</h2>
<ul>
<li><strong>Web Application Features</strong> - PHP is a programming language support most
commonly used Web application features like HTTP Cookie, Session, File
Upload, etc.</li>
<li><strong>CLI (Command Line Interface)</strong> - PHP is commonly used to write Web
applications to be integrated to Web servers using the Common Gateway
Interface (CGI).</li>
<li><strong>Built-in Modules</strong> - The standard PHP build comes with many free and open
source libraries included as built-in modules.</li>
<li><strong>Object-Oriented Programming (OOP)</strong> - PHP supports object-oriented
programming features like object.</li>
<li><strong>Pre-Compilation</strong> - PHP Web applications are usually deployed in source
code, which will be interpreted on-the-fly when Web requests arrive to the
server.</li>
<li><strong>Real Time Access Monitoring</strong> - PHP provides access logging by creating the
summary of recent accesses for the user.</li>
<li><strong>File I/O</strong> - PHP supports most commonly used file I/O features like local
file and path management, remote resource access using Internet protocols
like HTTP and FTP.</li>
</ul>
<h2>5. What is variable? How to declare it? Explain with example.</h2>
<ul>
<li>PHP variables are nothing but a named storage locations in the memory.</li>
<li>A variable is a named container in a PHP script in which a data value can be
stored.</li>
<li>A variable starts with the ($) sign, followed by the name of the variable.</li>
<li><strong>Syntax</strong> - $var</li>
</ul>
<pre><code class="language-php">$var = &quot;Hello World&quot;;
echo $var;
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>6. Explain constants in PHP with example.</h2>
<ul>
<li>A PHP script is executed on the server, and the plain HTML result is sent
back to the browser.</li>
<li>A PHP script can be placed anywhere in the document. A PHP programming script
starts with <code>&lt;?php</code> and ends with <code>?&gt;</code>.</li>
<li>The default file extension for PHP files is “.php”.</li>
<li>A PHP file normally contains HTML tags and some PHP scripting code.</li>
</ul>
<pre><code class="language-php">&lt;?phh
  $var = &quot;Hello World&quot;
  echo $var;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>7. What are the decision statements used by PHP?</h2>
<h3><code>if</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = -12;

if ($x &gt; 0) {
  echo &quot;The number is positive&quot;;
}

else{
  echo &quot;The number is negative&quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>The number is negative
</code></pre>
<h3><code>if else</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = &quot;August&quot;;

if ($x == &quot;January&quot;) {
  echo &quot;Happy Republic Day&quot;;
} elseif ($x == &quot;August&quot;) {
  echo &quot;Happy Independence Day!!!&quot;;
} else {
  echo &quot;Nothing to show&quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Happy Independence Day!!!
</code></pre>
<h3>Nested <code>if</code> statement</h3>
<pre><code class="language-php">&lt;?php
$a = 10;
$b = 20;

if ($a == 10) {
  if ($b == $20) {
      echo &quot;The addiotion is: &quot;.($a + b);
  }
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>The addition is 30
</code></pre>
<h3><code>switch case</code> statement</h3>
<pre><code class="language-php">&lt;?php
$n = &quot;Monday&quot;;

switch($n) {
  case &quot;Monday&quot;:
    echo &quot;Its Monday&quot;;
    break;
  case &quot;Tuesday&quot;:
    echo &quot;Its Tuesday&quot;;
    break;
  case &quot;Wednesday&quot;:
    echo &quot;Its Wednesday&quot;;
    break;
  case &quot;Thuesday&quot;:
    echo &quot;Its Thuesday&quot;;
    break;
  case &quot;Friday&quot;:
    echo &quot;Its Friday&quot;;
    break;
  case &quot;Saturday&quot;:
    echo &quot;Its Saturday&quot;;
    break;
  case &quot;Sunday&quot;:
    echo &quot;Its Suday&quot;;
    break;
  default:
    echo &quot;Doesn't exist&quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Its Monday
</code></pre>
<h2>8. Describe loops in PHP.</h2>
<h3><code>while</code> statement</h3>
<pre><code class="language-php">&lt;?php
$num = 0;

while ($num &lt;= 10) {
  echo $num;
  $num++;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>012345678910
</code></pre>
<h3><code>do while</code> statement</h3>
<pre><code class="language-php">&lt;?php
$x = 1;

do {
  echo &quot;The number is: $x &lt;br&gt;&quot;;
  $x++;
} while ($x &lt;= 5);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>The number is: 1
The number is: 2
The number is: 3
The number is: 4
The number is: 5
</code></pre>
<h3><code>for</code> loop</h3>
<pre><code class="language-php">&lt;?php
for ($i = 1; $i &lt;= 10; $i++) {
  echo $i.&quot; &quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>1 2 3 4 5 6 7 8 9 10
</code></pre>
<h2>10. Define the term expressions with example.</h2>
<ul>
<li>An expression is a piece of code that evaluates to a value.</li>
<li>A value a number, a string of text, or a Boolean.</li>
<li>An expression is a combination of values, variables, operators, and functions
that results in a value.</li>
<li>Like <code>$z = $x+$y</code>, where <code>$x + $y</code> is the expression.</li>
</ul>
<h2>11. Describe data types in PHP in detail.</h2>
<ul>
<li>A data type is defined as, “a set of values and the allowable operations on
those values”.</li>
<li>The data type determines the operations that we can perform on it.</li>
<li>PHP supports eight primitive types:
<ul>
<li>Four Scalar Types:
<ul>
<li><strong>Integer</strong> - The integer data type is used to specify a numeric value.</li>
<li><strong>Float</strong> - Floating point numbers are real numbers, representing numeric
values with decimal digits.</li>
<li><strong>String</strong> - A string is a sequence of characters where a character is
the same as a byte.</li>
<li><strong>Boolean</strong> - .Boolean value can be either TRUE value or FALSE value.</li>
</ul>
</li>
<li>Two Compound Types:
<ul>
<li><strong>Array</strong> - An array stores group of values under single variable name.</li>
<li><strong>Object</strong> - PHP supports Object Oriented Programming (OOP).</li>
</ul>
</li>
<li>Two Special Types:
<ul>
<li><strong>Resource</strong> - The resource is a special PHP data type that refers to
external resource (e.g. file, image etc.).</li>
<li><strong>Null</strong> - The null value represents a variable that has no value.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>12. Explain variable scope in PHP.</h2>
<ul>
<li>Scope of variable is an area or part of program in which it is
accessible/visible.</li>
<li>There are two type of scope in PHP:
<ul>
<li><strong>Local Scope</strong> - A variable which is declared inside the function is
called as local variable.</li>
<li><strong>Global Scope</strong> - Variables declared outside function are by default
global variables and can accessed from any part of program.</li>
</ul>
</li>
</ul>
<pre><code class="language-php">&lt;?php
$a = &quot;Hello&quot; // Global Scope

function func() {
  $b = &quot;World&quot;; // Local scope
}
</code></pre>
<h2>13. Write the difference between break and continue statement of PHP with example.</h2>
<h3><code>break</code></h3>
<ul>
<li>You have already seen the break statement used in an earlier chapter of this
tutorial. It was used to “jump out” of a switch statement.</li>
<li>The break statement can also be used to jump out of a loop.</li>
</ul>
<pre><code class="language-php">&lt;?php
for ($x = 0; $x &lt; 10; $x++) {
  if ($x == 4) {
    break;
  }
  echo $x.&quot; &quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>0 1 2 3
</code></pre>
<h3><code>continue</code></h3>
<ul>
<li>The continue statement breaks one iteration (in the loop), if a specified
condition occurs, and continues with the next iteration in the loop.</li>
</ul>
<pre><code class="language-php">&lt;?php
for ($x = 0; $x &lt; 10; $x++) {
  if ($x == 4) {
    continue;
  }
  echo $x.&quot; &quot;;
}
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>0 1 2 3 5 6 7 8 9
</code></pre>
<h2>16. Find output:</h2>
<pre><code class="language-php">&lt;?php
  $a= &quot;9 Lives.&quot; -1;
  var_dump($a);
?&gt;
</code></pre>
<h2>17. Find the output.</h2>
<pre><code class="language-php">&lt;?php
  $str = &quot;welcome&quot;;
  echo &quot;You are $str&quot;;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>You are welcome
</code></pre>
<h2>18. Write program to find a area of rectangle.</h2>
<pre><code class="language-php">&lt;?php
 $length = 14;
 $width = 12;
 echo &quot;area of rectangle is $length * $width= &quot; . ($length * $width) . &quot;&lt;br /&gt;&quot;;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>area of rectangle is 14 * 12= 168
</code></pre>
<h1>2. Arrays, Function and Graphics</h1>
<h2>2. How to create an array? Explain with example.</h2>
<ul>
<li>An array is a special variable, which can hold more than one value at a time.</li>
<li>To create array we use <code>array()</code> function.</li>
</ul>
<pre><code class="language-php">&lt;?php
$array = array(&quot;Hello&quot;, &quot;World&quot;);
print_r($array);
</code></pre>
<p>O/P</p>
<pre><code>Array ( [0] =&gt; &quot;Hello&quot;, [1] =&gt; &quot;World&quot; )
</code></pre>
<h2>3. What is string?</h2>
<ul>
<li>A string is collection of characters.</li>
<li>A string is series of characters, where a character is the same as a byte.</li>
</ul>
<pre><code class="language-php">&lt;?php
$string = &quot;Hello World&quot;;
?&gt;
</code></pre>
<h2>4. What is function?</h2>
<ul>
<li>A function is a block of statements that can be used repeatedly in a program.</li>
<li>A function will be executed by a call to the function.</li>
</ul>
<pre><code class="language-php">&lt;?php
function func() {
  echo &quot;Hello World&quot;;
}
func();
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>5. How to extract data from array? Explain with example.</h2>
<ul>
<li>The extract() function imports variables into the local symbol table from an
array.</li>
<li>This function uses array keys as variable names and values as variable
values. For each element it will create a variable in the current symbol
table.</li>
</ul>
<pre><code class="language-php">&lt;?php
$color[&quot;red&quot;] = &quot;#rrr&quot;;
extract($color);
echo $red;
</code></pre>
<p>O/P</p>
<pre><code>#rrr
</code></pre>
<h2>6. Enlist types of arrays. Describe with example.</h2>
<h3>Indexed array</h3>
<p>Indexed Arrays are arrays in which the elements are ordered based on index.</p>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Red&quot;, &quot;Blue&quot;, &quot;Green&quot;);
echo &quot;My fav color is: &quot;.$a[0];
</code></pre>
<p>O/P</p>
<pre><code>My fav color is: Red
</code></pre>
<h3>Associative Arrays</h3>
<p>Associative arrays are arrays that use named keys that you assign to them.</p>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Red&quot;=&gt;1, &quot;Blue&quot;=&gt;2, &quot;Green&quot;=&gt;3);
echo $a[&quot;Red&quot;].$a[&quot;Blue&quot;],$a[&quot;Green&quot;];
</code></pre>
<p>O/P</p>
<pre><code>123
</code></pre>
<h3>Multidimensional array</h3>
<p>A multidimensional array is an array containing one or more arrays.</p>
<pre><code class="language-php">&lt;?php
$a = array(array(&quot;Red&quot;, &quot;Blue&quot;, &quot;Green&quot;));
echo &quot;My fav color is: &quot;.$a[0][1];
</code></pre>
<p>O/P</p>
<pre><code>My fav color is: Blue
</code></pre>
<h2>8. How to add image in PHP? Explain with example.</h2>
<pre><code class="language-php">&lt;?php
$image = imagecreatetruecolor(500, 300);
imagefilledrectangle($image, 20, 20, 480, 280);
header(&quot;Content-type: image/png&quot;);
imagepng($image);
?&gt;
</code></pre>
<h2>14. With the help of example describe traversing of array.</h2>
<p>Traversing an array means to visit each and every element of array using a
looping structure and iterator functions.</p>
<pre><code class="language-php">&lt;?php
$a = array(1, 2, 3, 4, 5);
foreach ($a as $n) {
  echo $n;
}
</code></pre>
<p>O/P</p>
<pre><code>12345
</code></pre>
<h2>16. Which operations performed on string in PHP?</h2>
<ul>
<li><strong>strrev()</strong> - Reverses a string.</li>
<li><strong>strpos()</strong> - Returns the position of the first occurrence of a string.</li>
<li><strong>strrpos()</strong> - Finds the position of the last occurrence of a string.</li>
<li><strong>str_replace()</strong> - Replaces some characters in a string.</li>
<li><strong>ucwords()</strong> - Converts the first character of each word in a string to
uppercase.</li>
<li><strong>strtoupper()</strong> - Converts a string to uppercase letters.</li>
<li><strong>strtolower()</strong> - Converts a string to lowercase letters.</li>
<li><strong>strcmp()</strong> - Compares two strings.</li>
<li><strong>str_word_count()</strong> - Count the number of words in a string.</li>
<li><strong>strlen()</strong> - Returns the length of a string.</li>
</ul>
<pre><code class="language-php">&lt;?php
strrev(&quot;Hello World&quot;);
strpos(&quot;Hello World&quot;, &quot;Hello&quot;);
strrpos(&quot;Hello World&quot;, &quot;Hello&quot;);
str_replace(&quot;Hello&quot;, &quot;Bye&quot;, &quot;Hello World&quot;);
ucwords(&quot;hello world&quot;);
strtoupper(&quot;Hello World&quot;);
strtolower(&quot;Hello World&quot;);
strcmp(&quot;Hello World&quot;, &quot;Hello World&quot;);
str_word_count(&quot;Hello World&quot;);
strlen(&quot;Hello World&quot;);
</code></pre>
<p>O/P</p>
<pre><code>dlroW olleH
0
0
Bye World
Hello World
HELLO WORLD
hello world
0
2
11
</code></pre>
<h2>18. Explain the following types of functions with example:</h2>
<h3>(i) User defined functions</h3>
<p>A function is a block of statements that can be used repeatedly in a program.</p>
<pre><code class="language-php">&lt;?php
function func() {
  echo &quot;Hello World&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h3>(ii) Variable function</h3>
<p>If a variable name has parentheses appended to it, PHP will look for a function
with the same name as whatever the variable evaluates</p>
<pre><code class="language-php">&lt;?php
function func() {
  echo &quot;Hello World&quot;;
}

$f = &quot;func&quot;;
$f();
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h3>(iii) Anonymous function.</h3>
<p>Anonymous function is a function without any user defined name.</p>
<pre><code class="language-php">&lt;?php
$func = function () { echo &quot;Hello World&quot;; };
$func();
</code></pre>
<p>O/P</p>
<pre><code>Hello World
</code></pre>
<h2>18. How to create PDF in PHP? Describe with example.</h2>
<pre><code class="language-php">&lt;?php
require('fpdf.php');
$pdf = new FPDF();
$pdf-&gt;AddPage();
$pdf-&gt;SetFont('Arial', 'B', 16);
$pdf-&gt;Cell(40, 10, &quot;Hello World&quot;);
$pdf-&gt;Output();
?&gt;
</code></pre>
<h2>19. How to scaling an image in PHP?</h2>
<pre><code class="language-php">&lt;?php
$image = imagecreatefrompng(&quot;image.png&quot;);
$img = imagescale($image, 500, 500);
header(&quot;Content-type: image/png&quot;);
imagepng($img);
</code></pre>
<h2>20. Explain array_flip() function with example.</h2>
<ul>
<li>The array_flip() function flips/exchanges all keys with their associated
values in an array.</li>
<li><strong>Syntax</strong> - <code>array_flip($array)</code></li>
</ul>
<pre><code class="language-php">&lt;?php
$a = array(&quot;Hello&quot;, &quot;World&quot;);
print_r(array_flip($a));
</code></pre>
<p>O/P</p>
<pre><code>Array ( [Hello] =&gt; 0, [World] =&gt; 1 )
</code></pre>
<h1>3. Apply Object Oriented Concepts in PHP</h1>
<h2>1. What is OOP?</h2>
<ul>
<li>In object oriented programming, everything will be around the objects and
class.</li>
<li>By using OOP in PHP we can create modular web application.</li>
<li>By using OOP in PHP we can perform any activity in the object model structure.</li>
<li>OPP helps in building complex, reusable web applications.</li>
<li>Object Oriented is an approach to software development that models
application around real world objects such as employees, cars, bank accounts,
etc.</li>
<li>A class defines the properties and methods of a real world object.</li>
<li>An object is an occurrence of a class.</li>
</ul>
<h2>2. What is object?</h2>
<ul>
<li>An object is an instance or occurrence of a class.</li>
<li>Anything in the world is an object like laptop, books, car etc. even object
has two thing properties and behaviors.</li>
<li>The data associated with an object are called its properties.</li>
<li>The functions associated with an object are called its methods.</li>
<li>We can group similar objects with the same characteristics and behaviors in
into one class.</li>
</ul>
<h2>5. What is inheritance?</h2>
<ul>
<li>The old class is the base class, also called as parent class or super class,
and the new class is the derived class also called as child class or sub
class.</li>
<li>The derived class has its own variables and methods plus variables and
methods from the base class.</li>
<li>The <code>extends</code> keyword is used for the inheritance.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Class1 {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Class2 extends Class1 {
  function echo() {
    echo &quot;Bye World&quot;;
  }
}

$o = new Class2;
$o-&gt;func();
$o-&gt;echo();
</code></pre>
<p>O/P</p>
<pre><code>Hello World
Bye World
</code></pre>
<h2>6. Describe method overloading with example.</h2>
<p>If the derived class is having the same method name as the base class then the method in the derived class takes precedence over or overrides the base class method.</p>
<pre><code class="language-php">&lt;?php
class First {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Second extends First {
  function func() {
    echo &quot;Bye World&quot;;
  }
}

$o = new Second;
$o-&gt;func();
</code></pre>
<h2>7. Explain sleep and wakeup functions?</h2>
<ul>
<li>These functions are used to notify objects that they are being serialized or
unserialised.</li>
</ul>
<h3><code>__sleep()</code></h3>
<ul>
<li>serialize() checks if our class has a function with the magic name sleep().</li>
<li>If so, that function is executed prior (i.e. just before) to any
serialization.</li>
</ul>
<h3><code>__wakeup()</code></h3>
<ul>
<li>unserialize() checks for the presence of a function with the magic name ___
wakeup().</li>
<li>If present, this function can reconstruct any resources that the object may
have.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {
  function __sleep() {
    $this-&gt;name = &quot;Jonney&quot;;
    echo &quot;Obj is serialize()&quot;;
    return array(&quot;name&quot;);
  }

  function __wakeup() {
    echo &quot;Obj is unserialize()&quot;;
  }
}

$o = new Obj;
$s = serialize($o);
unserialize($s);
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Obj is serialize()
Obj is unserialize()
</code></pre>
<h2><code>__call</code></h2>
<ul>
<li>The __call() method is invoked automatically when a non-existing method or
inaccessible method is called.</li>
<li>The __call() method accepts two arguments:
<ul>
<li>$name is the name of the method that is being called by the object.</li>
<li>$arguments is an array of arguments passed to the method call.</li>
</ul>
</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {
  function __call($method, $parameters) {
    print_r($method);
    print_r($parameters);
  }
}

$o = new Obj;
$o-&gt;hello(&quot;World&quot;);
</code></pre>
<p>O/P</p>
<pre><code>hello
Array ( [0] =&gt; &quot;World&quot; )
</code></pre>
<h2>8. What serialization in PHP?</h2>
<ul>
<li>Serialization of data means converting it into a string of bytes in such a
way that you can produce the original data again from the string via a
process as unserialization.</li>
<li>After you have the ability to serialize/unserialize, you can store your
serialized string anywhere and recreate a copy of the data again when needed.</li>
</ul>
<pre><code class="language-php">&lt;?php
echo serialize(array(&quot;Red&quot;));
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>a:1:{i:0;s:3:&quot;Red&quot;;}
</code></pre>
<ul>
<li>O/P means:
<ul>
<li>a:1 - <strong>a</strong>rray - There are <strong>1</strong> array.</li>
<li>i:0 - <strong>i</strong>tem - This is <strong>0</strong>th item.</li>
<li>s:3 - <strong>s</strong>tring - There are <strong>3</strong> string in <strong>“Red”</strong>.</li>
</ul>
</li>
</ul>
<h2>10. Define method overriding.</h2>
<ul>
<li>In function overriding, both parent and child classes should have same
function name with and number of arguments.</li>
<li>It is used to replace parent method in child class.</li>
<li>The purpose of overriding is to change the behavior of parent class method.</li>
<li>The two methods with the same name and same parameter is called overriding.</li>
</ul>
<pre><code class="language-php">&lt;?php
class First {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

class Second extends First {
  function func() {
    echo &quot;Bye World&quot;;
  }
}

$f = new First;
$s = new Second;
$f-&gt;func();
$s-&gt;func();
</code></pre>
<p>O/P</p>
<pre><code>Hello World
Bye World
</code></pre>
<h2>12. What is object cloning? Describe with example.</h2>
<ul>
<li>Object cloning is the process in PHP to create a copy of an object.</li>
<li>An object copy is created by using the clone keyword when the object is
cloned PHP will perform Shallow copy of all the object properties and
properties that are referenced to their variables will remain references.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {
  public $name;
}

$o = new Obj;
$c = clone $o;

$o-&gt;name = &quot;Jonney&quot;;
$c-&gt;name = &quot;Jone&quot;;

echo &quot;Origenal: &quot;.$o-&gt;name.&quot;, Clone: &quot;.$c-&gt;name;
?&gt;
</code></pre>
<h2>13. Define the terms:</h2>
<h3>(i) Object</h3>
<p>Objects are the things you create out of a class.</p>
<h3>(ii) Class</h3>
<p>A class is what you use to define the properties, methods and behavior of objects.</p>
<h3>(iii) Inheritance</h3>
<ul>
<li>The old class is the base class, also called as parent class or super class,
and the new class is the derived class also called as child class or sub
class.</li>
</ul>
<h3>(iv) Constructor.</h3>
<ul>
<li>When we create a new object it is useful to initialize its properties.</li>
<li>PHP provides us with a special method to help initialize an object’s
properties called a constructor.</li>
</ul>
<h2>16. Differentiate between constructor and destructor.</h2>
<ul>
<li><strong>constructor</strong> - When we create a new object it is useful to initialize its
properties.</li>
<li><strong>destructor</strong> - The destructor method will be called as soon as there are no
other references to a particular object.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {
  function __construct() {
    echo &quot;Class created&quot;;
  }

  function __destruct() {
    echo &quot;Class destroyed&quot;;
  }
}

$o = new Obj;
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Class Created
Class Destroyed
</code></pre>
<h2>17. Compare object and class.</h2>
<ul>
<li>A class is what you use to define the properties, methods and behavior of
objects.</li>
<li>Objects are the things you create out of a class.</li>
</ul>
<h2>18. How to examine classes in introspection? Explain with example.</h2>
<ul>
<li>PHP Introspection is the ability of a program to examine an object’s
characteristics such as its name, parent class (if any), properties and
methods.</li>
<li>Introspection in PHP offers a useful Ability to examine classes’ interfaces
properties methods. With introspection we can write code that operates on any
object or class.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {}

class Obj2 extends Obj {
  public $hello = &quot;world&quot;;
  function func() {}
}
$o = new Obj2;

if (class_exists('Obj2')) {
  echo &quot;Class exists&quot;;
}
if (is_object($o)) {
  echo &quot;Is object&quot;;
}

print_r(get_class($o));
print_r(get_class_methods($o));
print_r(get_class_vars('Obj'));
print_r(get_parent_class($o));
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>class exists
Is object
Obj2
Array ( [0] =&gt; func )
Array ( [hello] =&gt; world )
Obj
</code></pre>
<h2>Examining an Object</h2>
<ul>
<li><code>is_object()</code> - Checks if an object.</li>
<li><code>get_class()</code> - Return object’s class name.</li>
<li><code>method_exists()</code> - Checks if method exists.</li>
<li><code>class_exists()</code> - Checks if class exists.</li>
</ul>
<pre><code class="language-php">&lt;?php
class Obj {
  function func() {
    echo &quot;Hello World&quot;;
  }
}

$o = new Obj;
echo is_object($o);
echo get_class($o);
echo method_exists($o, 'func');
echo class_exists('Obj');
</code></pre>
<p>O/P</p>
<pre><code>1
Obj
1
1
</code></pre>
<h1>4. Creating and Validating forms</h1>
<h2>1. What is form? How to create it?</h2>
<h3>What is form?</h3>
<ul>
<li>Forms are essential parts in web development. Forms are used to get input from
the user and submi it to the web server for processing.</li>
<li>Forms are used to communicate between users and the server.</li>
</ul>
<h3>How to create it?</h3>
<ul>
<li>A document that containing blank fields, that the user can fill the data or
user can select the data. It is known as Form.</li>
<li>Generally, the data will store in the database. We can create and use forms
in PHP. To get form data, we need to use PHP superglobals <code>$_GET</code>and $_POST</li>
<li>The form request may be get or post. To retrieve data from get request, we
need to use <code>$_GET</code>, for post request <code>$_POST</code></li>
</ul>
<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_SELF_PHP ?&gt;&quot; method=&quot;post&quot;&gt;
  &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
  &lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if (isset($_POST[&quot;name&quot;])) {
  echo &quot;Your name is: &quot;.$_POST[&quot;name&quot;];
}
?&gt;
</code></pre>
<h2>2. What is form control?</h2>
<ul>
<li>There are different types of form controls that we can use to collect data
using form namely, Textbox, Checkbox, Radio button, and so on.</li>
<li><strong>TEXTBOX</strong> - A text input field allows the user to enter a singel text.</li>
<li><strong>TEXTAREA</strong> - A textarea field is similar a text input field but it allows
the user to enter multiple lines of text.</li>
<li><strong>RADIO BUTTON</strong> - The radio buttons are for single choice from multiple
options. All radio buttons in the group have the same name attribute.</li>
<li><strong>CHECKBOX</strong> - A checkbox field is a simple toggle button. It can be either
ON or OFF. The value attribute should contain the value that will be sent to
the server when the checkbox is selected.</li>
<li><strong>LIST</strong> - There are two type of list:
<ul>
<li><strong>Singleline LIST</strong> - The list represents a Windows control to display a
list of items to a user. A user can select an item from the list.</li>
<li><strong>Multiline LIST</strong> - A multi-select list allows the user to select multiple
items. To turn a normal list into a multi-select list, add the attribute
multiple with a value of “multiple” to the select element.</li>
</ul>
</li>
</ul>
<h2>3. Write short note on: Server role.</h2>
<ul>
<li>PHP is a server-side scripting language.</li>
<li>Using PHP we can create dynamic web sites.</li>
<li>That means its processing happens in the server by consuming server’s
resources and sends only the output to the client.</li>
</ul>
<h2>5. When to use GET and POST method.</h2>
<h3>GET</h3>
<ul>
<li>It sends the encoded user information appended to the page request (to the
URL).</li>
<li>The page and the encoded information are separated by the ? character.</li>
<li>The GET method produces a long string the appears in our server logs, in the
browser’ location box.</li>
<li>The GET method is restricted to send up to 1024 characters only.</li>
<li>Never use GET method if we have password or other sensitive information.</li>
<li>GET cannot be used to send binary data to the server.</li>
<li>The php provides $_GET assoiative array to a access all the sent information
using GET method.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;GET&quot;&gt;
	Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if ($_GET[&quot;name&quot;]) {
	echo $_GET[&quot;name&quot;];
}
?&gt;
</code></pre>
</li>
<li>Output:<pre><code>Name: Joey
Submit

Joey
</code></pre>
</li>
</ul>
<h3>POST</h3>
<ul>
<li>It transfers information via HTTP header, not throought the URL.</li>
<li>The POST method does not have any restriction on data size.</li>
<li>The POST method can be used to send ASCII as well as binary data.</li>
<li>The data sent by POST  method goes through HTTP header, so security depends on
HTTP protocol.</li>
<li>By using secure HTTP, we can make sure that our information is secure.</li>
<li>The PHP provides $_POST associative array to access all the sent information
using POST method.</li>
<li>Example:<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
	Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if ($_POST[&quot;name&quot;]) {
	echo $_POST[&quot;name&quot;];
}
?&gt;
</code></pre>
</li>
<li>Output<pre><code>Name: Joey
Submit

Joey
</code></pre>
</li>
</ul>
<h2>7. What is cookie? How to create it? Explain with example.</h2>
<h3>What is cookie?</h3>
<ul>
<li>Cookie save the data in browser, so next time refresh the browser it will not
delete from browser.</li>
<li>Cookie is used to identify the user.</li>
<li>A cookie is a small file that server embeds to user’s computer.</li>
<li>Each time the same computer requests a page with a browser, it will send the
cookie too.</li>
</ul>
<h3>How to create it?</h3>
<ul>
<li>Use <code>setcookie</code> function to create cookie.</li>
<li>Syntex:<pre><code>setcookie($cookie_name, $cookie_value, $time, $location)
</code></pre>
</li>
</ul>
<h3>Example</h3>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;Jonney&quot;, time() + (86400 * 30), &quot;/&quot;);
if (isset($_COOKIE[&quot;name&quot;])) {
  echo &quot;Name: &quot;.$_COOKIE[&quot;name&quot;];
}
</code></pre>
<p>O/P</p>
<pre><code>Name: Jonney
</code></pre>
<h2>8. What is session? Explain with example.</h2>
<ul>
<li>A session is a way to store information in variables to be used across
multiple pages.</li>
<li>Sessions allow us to store data on the web server that associated with a
session ID.</li>
<li>Once we create a session, PHP sends a cookie that contains the session ID to
the web browser.</li>
<li>A session is started with the session_start() function.</li>
<li>The session_start() function first checks if a session is already started and
if none is started then it starts one.</li>
</ul>
<pre><code class="language-php">&lt;?php
session_start()
?&gt;
&lt;?php
$_SESSION[&quot;name&quot;] = &quot;Jonney&quot;;
echo &quot;Name: &quot;.$_SESSION[&quot;name&quot;];
?&gt;
</code></pre>
<p>O/P</p>
<pre><code>Name: Jonney
</code></pre>
<h2>9. How we can get the cookie values and destroy the cookies?</h2>
<h3>To get cookie value.</h3>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;Jonney&quot;, time() + (83400 * 30), &quot;/&quot;);

if ( isset($_COOKIE[&quot;name&quot;]) ) {
  echo &quot;Name: &quot;.$_COOKIE[&quot;name&quot;];
}
?&gt;
</code></pre>
<h3>To destroy the cookie.</h3>
<pre><code class="language-php">&lt;?php
setcookie(&quot;name&quot;, &quot;&quot;, time() - 3600, &quot;/&quot;);
?&gt;
</code></pre>
<h2>11. What is form validation? Explain with suitable example.</h2>
<ul>
<li>For validating a web page we use preg_match() function.</li>
<li>The preg_match() function searches string for pattern, returning true if
pattern exists, and false otherwise.</li>
</ul>
<pre><code class="language-php">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;
  &lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;
  &lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;

&lt;?php
if ( isset($_POST[&quot;name&quot;]) ) {
  if ( !preg_match(&quot;/^[a-zA-Z_ ]*$/&quot;, $_POST[&quot;name&quot;]) ) {
    echo &quot;Only Words and Whitespaces are allowed.&quot;;
  }
}
?&gt;
</code></pre>
<h2>14. How to send e-mail? Describe with example.</h2>
<ul>
<li><code>mail()</code> function is useful to sending the mail.</li>
<li>Syntex:<pre><code class="language-php">mail($to, $subject, $message, $header, $parametes);
</code></pre>
</li>
<li><code>mail()</code> function parametes:
<ul>
<li><strong>to</strong> - represents the address of receiver.</li>
<li><strong>subject</strong> - it specifies the subject of mail.</li>
<li><strong>message</strong> - it defines the message which is to be sent.</li>
<li><strong>headers</strong> - it is optional and specifies the additional headers like Cc, Bcc.</li>
<li><strong>parameters</strong> - it is optional and specifies the additional parameters.</li>
</ul>
</li>
</ul>
<pre><code class="language-php">&lt;?php
$sent = mail(&quot;AnzenKodo@altmail.com&quot;, &quot;Title&quot;, &quot;Message&quot;);

if (!$sent) {
  echo &quot;Message is not sent.&quot;;
} else {
  echo &quot;Message is sent.&quot;;
}
</code></pre>
<p>O/P</p>
<pre><code>Message is sent.
</code></pre>
<h1>5. Database Operations</h1>
<h2>1. What is database?</h2>
<ul>
<li>A database is a collection of related data.</li>
<li>A database is a collection of information that is organized so that it can
easily be accessed, managed and updated.</li>
<li>With PHP, we can connect to and manipulate databases.</li>
</ul>
<h2>2. What is DBMS?</h2>
<ul>
<li>A DataBase Management System (DBMS) is system software for creating and
managing databases.</li>
<li>The DBMS provides users and programmers with a systematic way to create,
retrieve, update and manage data.</li>
</ul>
<h2>3. What is MySQL? How it is used in PHP?</h2>
<ul>
<li>MySQL is an open-source relational database management system (RDBMS).</li>
<li>It is the most popular database system used with PHP.</li>
<li>Using my sql:<pre><code class="language-php">&lt;?php
  // Creating connection
  $conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);

  // Checking connection
  if (!$conn) {
      die(&quot;Connection failed.&quot;);
  }
  echo &quot;Connected successfully&quot;;
?&gt;
</code></pre>
</li>
</ul>
<h2>4. How to create and delete a database in MySQL?</h2>
<ul>
<li>We can create a MySQL database by using MySQL Command Line Client.</li>
<li>Open the MySQL console and write down password, if we set one while
installation.</li>
<li>We will get the following:
<ul>
<li>To create the data base enter <code>CREATE DATABASE database_name</code></li>
<li>To check the database is crated enter <code>SHOW DATABASES</code></li>
</ul>
</li>
<li>Creating database through php:<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);

if (!$conn) {
  die(&quot;Can't connect to MySQL &quot;);
}

$sql = &quot;CRATE DATABASE emp&quot;;

if (!mysqli_query($conn, $sql)) {
  die(&quot;Can't create database &quot;.mysqli_error($conn);
}

echo &quot;Created database &lt;br/&gt;&quot;;
?&gt;
</code></pre>
O/P<pre><code>Created database
</code></pre>
</li>
</ul>
<h2>5. Explain mysqli_connect() function with example.</h2>
<ul>
<li>The mysqli_connect() function is used to connect with MySQL database.</li>
<li>It returns resource if connection is established or null.</li>
<li>Syntax: <code>mysqli_connect(server, username, password, dbname, port, socket)</code></li>
<li>Example:<pre><code class="language-php">&lt;?php
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);

if (!$conn) {
  echo &quot;Can't connect to database.&quot;;
  exit();
} else {
  echo &quot;Databse is connected.&quot;;
}
mysqli_close($conn);
</code></pre>
</li>
</ul>
<h2>7. Write a program to create an employee table to perform insert, delete and update operations.</h2>
<pre><code class="language-php">&lt;?php
// Connect MySQL
$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);
if (!$conn) {
  echo &quot;Error: &quot;.mysqli_error($conn);
}

// Create table
$table = &quot;CREATE TABLE employee(id INT(4), name VARCHAR(22), salary INT(4))&quot;;
if (!mysqli_query($conn, $table)) {
  echo &quot;Can't create table.&quot;;
}
echo &quot;Created table&lt;br/&gt;&quot;;

// Insert data
$insert = &quot;INSERT INTO employee(id, name, salary) VALUES (1, 'Sam', 3200), (2, 'Jonney', 4500), (3, 'Jone', 2000)&quot;;
if (!mysqli_query($conn, $insert)) {
  echo &quot;Can't insert data.&quot;;
}

// Dalete data
$delete = &quot;DELETE FROM employee WHERE id=2&quot;;
if (!mysqli_query($conn, $delete)) {
  echo &quot;Can't delete data.&quot;;
}

// Retrive data
$retrive = &quot;SELECT * FROM employee&quot;;
$result = mysqli_query($conn, $retrive);

if (mysqli_num_rows($result)) {
  while ($row = mysqli_fetch_assoc($result)) {
    echo &quot;Name: &quot;.$row['name'].&quot;, Salary: &quot;.$row['salary'].&quot;, ID: &quot;.$row['id'].&quot;&lt;/br&gt;&quot;;
  }
}
?&gt;
</code></pre>]]></description>
  </item>
  <item>
    <title>UT2 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/ut2-6s.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h1>Python QB UT 2</h1>
<h2>1. Explain scope of a variable in Python.</h2>
<ul>
<li>A variable is only available from inside the region it is created.</li>
<li>This is called scope.</li>
<li>There are two types of scopes in Python:</li>
</ul>
<h3>Local scope</h3>
<ul>
<li>A variable created inside a function belongs to the local scope, and can only
be used inside that function.</li>
<li>Example<pre><code class="language-python">def fun()
  x=10 # X is local variable
  print(x)

fun()
</code></pre>
O/P<pre><code>10
</code></pre>
</li>
</ul>
<h3>Global scope</h3>
<ul>
<li>A variable created in the main body of the code is a global variable and
belongs to the global scope.</li>
<li>Global variables are available from within any scope global and local.</li>
<li>Example:<pre><code class="language-python">a = 50 # a is global variable
def fun()
  print(a)

fun()
print(a)
</code></pre>
O/P<pre><code>50
50
</code></pre>
</li>
</ul>
<h2>2. Define class, data hiding, method overloading, inheritance, data abstraction, numpy, pandas.</h2>
<h3>i) <code>class</code></h3>
<ul>
<li>Class is a blueprint for the object.</li>
<li>We define a class by using the keyword class.</li>
<li>Class objects are used to access different attributes.</li>
</ul>
<h3>ii) Data Hiding</h3>
<ul>
<li>Data hiding is one of the important features of Object Oriented Programming
which allows preventing the functions of a program to access directly the
internal representation of a class type.</li>
</ul>
<h3>iii) Method Overloading</h3>
<ul>
<li>Overloading is the ability of a function or an operator to behave in different
ways based on the parameters that are passed to the function, or the operands
that the operator acts on.</li>
</ul>
<h3>iv) Inheritance</h3>
<ul>
<li>Inheritance refers to defining a new class with little or no modification to
an existing class.</li>
<li>The new class is called as derived or child class and the old class is called
as base or parent class.</li>
</ul>
<h3>v) Data Abstraction</h3>
<ul>
<li>Data abstraction refers to providing only essential information about the data
to the outside world and hiding the background details.</li>
</ul>
<h3>vi) Numpy</h3>
<ul>
<li>Numpy is a python package which stands for “Numerical Python”.</li>
</ul>
<h3>vii) Pandas</h3>
<ul>
<li>Pandas is an open source library that allows to perform data manipulation.</li>
<li>Pandas library is built on the top of Numpy.</li>
</ul>
<h2>3. Explain Composition classes with program.</h2>
<ul>
<li>Composition class is composed of one of or more instance of other classes.</li>
<li>In simple words, one class is container and other class is content, if we
delete the container objects then all of its contents objects are also
deleted.<pre><code class="language-python">class test:
  def __init__(self, name, marks):
    self.name = name
    self.marks = marks

class addr:
  def __init__(self, ad, name, marks):
    self.ad = ad
    self.ob = test(name, marks)

  def disp(self):
    print(self.ad, self.ob.name, self.ob.marks)

t = addr(&quot;Virar&quot;, &quot;ABC&quot;, 99)
t.disp()
</code></pre>
O/P<pre><code>Virar ABC 99
</code></pre>
</li>
</ul>
<h2>4. WAP to create a file, write some contents in it and read the content from file.</h2>
<pre><code class="language-python">o = open(&quot;name.txt&quot;, &quot;w&quot;)
o.write(&quot;I am a programmer&quot;)
o.close()
o = open(&quot;name.txt&quot;, &quot;r&quot;)
print(o.read())
o.close()
</code></pre>
<p>O/P</p>
<pre><code>I am a programmer
</code></pre>
<h2>5. WAP to check <code>ZeroDivisionError</code> Exception.</h2>
<pre><code class="language-python">x = int (input(&quot;x:&quot;))
y = int(input(&quot;y:&quot;))

try:
  x/y
except ZeroDivisionError:
  print(&quot;Error: Division by Zero&quot;)
else:
  print(x/y)
</code></pre>
<p>O/P</p>
<pre><code>x: 0
y: 0

Error: Divison by Zero
</code></pre>
<h2>6. WAP to throw an exception if age&lt;18 (using raise).</h2>
<pre><code class="language-python">age = int(input(&quot;Age:&quot;))
try:
  if age &lt; 18:
    raise Exception
except Exception:
  print(&quot;Too small to vote!!&quot;)
else:
  print(&quot;You can vote!!&quot;)
</code></pre>
<h2>7. List different modes of opening file.</h2>
<p>Following are the different modes of opening file:</p>
<ul>
<li><code>r</code></li>
<li><code>rb</code></li>
<li><code>r+</code></li>
<li><code>rb+</code></li>
<li><code>w</code></li>
<li><code>wb</code></li>
<li><code>wb</code></li>
<li><code>w+</code></li>
<li><code>wb+</code></li>
</ul>
<h2>8. WAP to create class animal having method feed that prints ‘I eat food’. It has a sub class herbivorous having method feed that prints “I eat only plants”. Call the method by creating an object of each of the classes.</h2>
<pre><code class="language-python">class animal:
  def feed(self):
    print(&quot;I eat food&quot;)

class herbivorous(animal):
  def feed(self):
    print(&quot;I eat only plants&quot;)

a = animal()
a.feed()
h = herbivorous()
h.feed()
</code></pre>
<h2>9. WAP to create base classes namely add, mul having method addition and multiplication that prints addition and multiplication respectively. Derive a class derived from add and mul that has method divide and returns division. Create object and call methods.</h2>
<pre><code class="language-python">class add:
  def addition(self, a, b):
    self.a = a
    self.b = b
    print(self.a + self.b)

class mul:
  def multiplication(self, a, b):
    self.a = a
    self.b = b
    print(self.a * self.b)

class derived(add, mul):
  def divide(self, a, b)
    self.a = a
    self.b = b
    return self.a / self.b

d = derived()
print(d.divide(28, 4))
d.multiplication(2, 4)
d.addition(5, 6)
</code></pre>
<p>O/P</p>
<pre><code>7.0
8
11
</code></pre>
<h2>10. WAP to implement multilevel inheritance.</h2>
<pre><code class="language-python">class Student:
  def accept(self):
    self.roll = 10

class Test(Student):
  def getdata(self):
    self.name = &quot;ABC&quot;

class Result(Test):
  def info(self):
    self.marks = 99
  def disp(self):
    print(self.roll, self.name, self.marks)

r = result()
r.accept()
r.getdata()
r.info()
r.disp()
</code></pre>
<p>O/P</p>
<pre><code>10 ABC 99
</code></pre>
<h2>11. Create a 3x4 matrix of random values using numpy and perform following:</h2>
<ol>
<li>print type of array</li>
<li>print dimension</li>
<li>print shape</li>
<li>print size</li>
<li>print type of elements</li>
<li>sort row wise</li>
<li>print min, max, sum, flatten</li>
</ol>
<pre><code class="language-python">import numpy as n

p = n.random.randint(30, size = (3, 3))
print(p)
print(type(p))
print(p.ndim)
print(p.shape)
print(p.size)
print(n.dtype)
print(n.sort(p))
pritt(p.min())
print(p.max())
print(sum(p))
print(p.flatten())
</code></pre>
<p>O/P</p>
<pre><code>[[10, 20, 21]
 [14, 15, 13]
 [23, 24, 29]]
&lt;class 'numpy.ndarray'&gt;
2
(3, 3)
9
int64
[[10, 20, 21]
 [13, 14, 15]
 [23, 24, 29]]
10
29
[51 42 76]
[10 20 21 14 15 13 23 24 29]
</code></pre>
<h2>12. WAP that accepts a string and calculate the number of upper and lower case letters (string=&quot;Viva College)</h2>
<pre><code class="language-python">c = input(&quot;Enter string.&quot;)
u = 0
i = 0

for i in c:
  if (i.isupper()):
    u += 1
  if (i.islower()):
    i += 1

print(&quot;Upper case letters are&quot;, u)
print(&quot;Lower case letters are&quot;, i)
</code></pre>
<h2>13. WAP to generate a random float where the value is between 5 and 50</h2>
<pre><code class="language-python">import random
a = random.uiform(5, 50)
print(a)
</code></pre>
<p>O/P</p>
<pre><code>20.80854522266047
</code></pre>
<h2>14. Plot a line from position (10, 33) to position (80, 65) with following:</h2>
<ol>
<li>marker - 0</li>
<li>line-dotted, line color-red</li>
<li>x-label: student, y-label marks.</li>
<li>Add grid lines</li>
</ol>
<pre><code class="language-python">import matplotlib.pylot as p
import numpy as n

x = n.array([10, 33])
y = n.array([80, 64])

p.xlabel(&quot;Student&quot;)
p.ylable(&quot;Marks&quot;)
p.plot(x, y, marker = 'o', linestyle = 'dotted', color = 'r')
p.grid()
p.show()
</code></pre>
<h2>15. WAP to print 3x3 matrix with o at border and I inside.</h2>
<pre><code class="language-python">import numpy as n
a = n.zeros((3, 3))
a[1:-1, 1:-1] = 1
print(a)
</code></pre>
<p>O/P</p>
<pre><code>[[0. 0. 0.]
 [0. 1. 0.]
 [0. 0. 0.]]
</code></pre>
<h2>16. WAP to create matrix with values 2-10.</h2>
<pre><code class="language-python">import numbpy as n
a = n.arange(2, 11).reshape(3, 3)
print(a)
</code></pre>
<p>O/P</p>
<pre><code>[[2 3 4]
 [5 6 7]
 [8 9 10]]
</code></pre>
<h2>17. Explain Exception Handling in python.</h2>
<ul>
<li>When we executes a Python program, there may be a few uncertain conditions
which occur, known as errors. Errors also referred to as bugs that are
incorrect or inaccurate action that may cause the problems in the running of
the program of program or may interrupt the execution of program.</li>
<li>There are three types of error:
<ul>
<li>i) Compile Time Errors.</li>
<li>ii) Run Time Errors.</li>
<li>iii) Logical Errors.</li>
</ul>
</li>
<li>Errors occured at runtime are known as exception. Exception handling is a
feature that is used for handling any unreported errors in program.</li>
<li>By handling the exceptions, we can provide a meaningful message to the user
about the problem rather than system generated error message, which may not be
understandable to the user.</li>
<li>Exception can be either built-in exception or user defined exceptions.</li>
</ul>]]></description>
  </item>
  <item>
    <title>Finals</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/finals.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h1>Python</h1>
<h2>a) Name different modes of Python.</h2>
<p>Python has two basic modes:</p>
<ol>
<li>Script mode (or Normal mode)</li>
</ol>
<ul>
<li>The mode where the scripted and finished .py files are in the Python
Interpreter.</li>
</ul>
<ol start="2">
<li>Interactive mode</li>
</ol>
<ul>
<li>A command line shell which gives immediate feedback for each statement,
while running previously fed statements in active memory.</li>
</ul>
<h2>b) List identity Operators</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>is</td>
<td>Returns <code>True</code> if both variables are sames object</td>
<td>x is y</td>
</tr>
<tr>
<td>is not</td>
<td>Returns <code>False</code> if both variables are sames object</td>
<td>x is not y</td>
</tr>
</tbody>
</table>
<h2>c) Give two differences between list and tuple.</h2>
<h3>List</h3>
<ul>
<li>Lists are mutable.</li>
<li>The list is better for performing operations.</li>
<li>Lists consume more memory.</li>
<li>More likely error will occur.</li>
</ul>
<h3>Tuple</h3>
<ul>
<li>Tuples are immutable.</li>
<li>The implication of iterations is faster.</li>
<li>Tuple consume less memory.</li>
<li>Less likely error will occur.</li>
</ul>
<h2>d) Explain Local and Global variable.</h2>
<table>
<thead>
<tr>
<th>Local</th>
<th>Global</th>
</tr>
</thead>
<tbody>
<tr>
<td>It is declare  inside a function</td>
<td>It is declared outside the function</td>
</tr>
<tr>
<td>It is created when the function starts execution and lost when the function terminate.</td>
<td>It is created before the program’s global execution starts and lost when the program terminates.</td>
</tr>
<tr>
<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>
<td>You can access global variables by any statement in the program.</td>
</tr>
<tr>
<td>Parameters passing is required for local variables to access the value in other function.</td>
<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>
</tr>
</tbody>
</table>
<h2>e) Define class and object in python.</h2>
<h3>Class</h3>
<ul>
<li>Class is a blueprint for the object.</li>
<li>We define a class by using the keyword class.</li>
<li>Class objects are used to access different attributes.</li>
</ul>
<h3>Object</h3>
<ul>
<li>Classes are the user-defined blueprints that help us create an “object”.</li>
<li>Objects are the instances of a particular class.</li>
<li>Every other element in Python will be an object of some class, such as the string, dictionary, number(10,40), etc.</li>
</ul>
<h2>f) How to give single and multiline comment in python.</h2>
<h3>Single-Line</h3>
<ul>
<li>Add the hash (#) symbol before the comment:</li>
</ul>
<pre><code class="language-python"># This is your comment
</code></pre>
<h3>Multiline</h3>
<p>-Python will ignore string literals that are not assigned to a variable, you can add a multiline string (triple quotes) in your code, and place your comment inside it:</p>
<pre><code class="language-python">&quot;&quot;&quot;
This is a comment
written in
more than just one line
&quot;&quot;&quot;
</code></pre>
<h2>g) List different modes of opening file in python.</h2>
<p>There are four different methods modes for opening a file:</p>
<ul>
<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>
<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not
exist.</li>
<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>
<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not
exist.</li>
</ul>
<p>In addition, the file should be handled as binary or text mode:</p>
<ul>
<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>
<li>b - Binary - Binary mode (e.g. images).</li>
</ul>
<h2>a) Write a program to print following:</h2>
<pre><code class="language-python">rows = int(input(&quot;Enter number of rows: &quot;))

for i in range(rows):
    for j in range(i+1):
        print(j+1, end=&quot; &quot;)
    print(&quot;\n&quot;)
</code></pre>
<h2>b) Explain four Buit-in tuple functions python with example.</h2>
<ul>
<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>
<li><code>max()</code> - Highest value will returned.</li>
<li><code>min()</code> - Lowest value be returned.</li>
<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>
</ul>
<h2>Explain how to use user defined function in python with example.</h2>
<p>In Python, a user-defined function’s declaration begins with the keyword def and followed by the function name.</p>
<pre><code class="language-python">def printt():
    print(&quot;This is Python 3.2 Tutorial&quot;)
    print(&quot;This is Python 3.2 Tutorial&quot;)
    print(&quot;This is Python 3.2 Tutorial&quot;)
printt()
</code></pre>
<p>Output:</p>
<pre><code>This is Python 3.2 Tutorial
This is Python 3.2 Tutorial
This is Python 3.2 Tutorial
</code></pre>
<h2>d) Write a program to create class EMPLOYEE with ID and NAME and display its contents.</h2>
<pre><code class="language-python">class Employee:
	name = &quot;&quot;
	department = &quot;&quot;
	salary = 0

	def setData(self):
		self.name = input(&quot;Enter Name: &quot;)
		self.department = input(&quot;Enter Department: &quot;)
		self.salary = int(input(&quot;Enter Salary: &quot;))

	def showData(self):
		print(&quot;Name:&quot;, self.name)
		print(&quot;Department:&quot;, self.department)
		print(&quot;Salary:&quot;, self.salary)

e = Employee()
e.setData()
e.showData()
</code></pre>
<p>Output:</p>
<pre><code>Enter Name: Jonney
Enter Department: Testing
Enter Salary: 20000
Name: Jonney
Department: Testing
Salary: 20000
</code></pre>
<h2>List Data types used in python. Explain any two with example.</h2>
<p>Thare are three data type in python numbers, string &amp; boolean.</p>
<h3>String</h3>
<ul>
<li>String is a collection of group of characters.</li>
<li>String are identified as a contiguous set of characters enclosed in single quotes(’ ') or double quotes(&quot; &quot;).</li>
<li>String can also can be define with str() function.</li>
</ul>
<h3>Boolean</h3>
<ul>
<li>Boolean represents the two values namely False and True.</li>
<li>The true value is represented true as 1 and false as 0.</li>
</ul>
<h2>b) Explain membership and assignment operators with example.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>in</td>
<td>True if value in list or in sequence</td>
<td>(‘H’ in x) is True</td>
</tr>
<tr>
<td>not in</td>
<td>False if value not in list or in sequence</td>
<td>(‘H’ in x) is False</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Operator</th>
<th style="text-align:center">Description</th>
<th>Syntax</th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td style="text-align:center">Assign value of right side of expression to left side operand</td>
<td>x = y + z</td>
</tr>
<tr>
<td>+=</td>
<td style="text-align:center">Add and Assign: Add right side operand with left side operand and then assign to left operand</td>
<td>a += b</td>
</tr>
<tr>
<td>-=</td>
<td style="text-align:center">Subtract AND: Subtract right operand from left operand and then assign to left operand: True if both operands are equal</td>
<td>a -= b</td>
</tr>
<tr>
<td>*=</td>
<td style="text-align:center">Multiply AND: Multiply right operand with left operand and then assign to left operand</td>
<td>a *= b</td>
</tr>
</tbody>
</table>
<h2>c) Explain indexing and slicing in list with example.</h2>
<ul>
<li>“Indexing” means referring to an element of an iterable by its position within the iterable.</li>
<li>“Slicing” means getting a subset of elements from an iterable based on their indices.</li>
</ul>
<h2>d) Write a program for importing module for addition and substraction of two numbers.</h2>
<pre><code class="language-python">a = int(input(&quot;Enter first number: &quot;))
b = int( input(&quot;Enter second number: &quot;))
Sum = a+b; #Add two numbers
Difference = a-b; #Subtract two numbers
# To print the result
print(&quot;Addition of two numbers = &quot;,Sum)
print(&quot;Subtraction of two numbers = &quot;,Difference)
</code></pre>
<p>Output:</p>
<pre><code>Output:
Enter first number: 30
Enter second number: 20
Addition of two numbers = 50
Subtraction of two numbers = 10
</code></pre>
<h2>a) Write a program to create dictionary of students that includes their ROLL NO. and NAME:</h2>
<p>i) Add three students in above dictionary
ii) Update name= ‘Shreyas’ of ROLL NO = 2
iii) Delete information of ROLL NO = 1</p>
<pre><code class="language-python">students = {
  1: &quot;ronney&quot;,
  2: &quot;jay&quot;
}

students[2] = &quot;Shreyas&quot;
del students[1]
print(students)
</code></pre>
<p>Output:</p>
<pre><code>{ 2: &quot;Shreyas&quot; }
</code></pre>
<h2>b) Explain decision making statements If-else, if-elif-else with example.</h2>
<p>The if…elif…else statement is used in Python for decision making.</p>
<pre><code class="language-python">num = 3.4

if num &gt; 0:
    print(&quot;Positive number&quot;)
elif num == 0:
    print(&quot;Zero&quot;)
else:
    print(&quot;Negative number&quot;)
</code></pre>
<h2>c) Explain use of format () method with example.</h2>
<p>Python format() function has been introduced for handling complex string formatting more efficiently.</p>
<pre><code class="language-python">txt = &quot;I have {an:.2f} Ruppes!&quot;
print(txt.format(an = 4))
</code></pre>
<p>Output:</p>
<pre><code>I have 4.00 Ruppes!
</code></pre>
<h2>d) Explain building blocks of python.</h2>
<ul>
<li>The core data structures to learn in Python are List (list), Dictionary (dict), Tuple (tuple), and Set (set).</li>
<li>To indicate a block of code in Python, you must indent each line of the block by the same amount.</li>
</ul>
<h2>e) Write a program illustrating use of user defined package in python.</h2>
<p>Packages are a way of structuring many packages and modules which helps in a well-organized hierarchy of data set, making the directories and modules easy to access.</p>
<p><a href="http://file1.py/">file1.py</a>:</p>
<pre><code class="language-python">class Bmw:
    # First we create a constructor for this class
    # and add members to it, here models
    def __init__(self):
        self.models = ['i8', 'x1', 'x5', 'x6']

    # A normal print function
    def outModels(self):
        print('These are the available models for BMW')
        for model in self.models:
            print('\t%s ' % model)
</code></pre>
<p><a href="http://file2.py/">file2.py</a></p>
<pre><code class="language-python">from Bmw import Bmw
</code></pre>
<h2>Write the output of the following:</h2>
<pre><code>&gt;&gt;&gt; a = [2, 5, 1, 3, 6, 9, 7]
&gt;&gt;&gt; a[2:6] = [2, 4, 9, 0]
&gt;&gt;&gt; print (a)
</code></pre>
<p>Ans:</p>
<pre><code>[2, 5, 2, 4, 9, 0, 7]
</code></pre>
<pre><code>b = [&quot;Hello&quot;, &quot;Good&quot;]
b.append(&quot;python&quot;)
print (b)
</code></pre>
<p>Ans:</p>
<pre><code>['Hello', 'Good', 'python']
</code></pre>
<pre><code>t1 = [3, 5, 6, 7]
print (t1[2])
print (t1[-1])
print (t1[2:])
print(t1[:])
</code></pre>
<p>Ans:</p>
<pre><code>6
7
[6, 7]
[3, 5, 6, 7]
</code></pre>
<h2>Explain method overloading in python with example.</h2>
<ul>
<li>overloading is the ability of a function or an operator to behave in different ways based on the parameters that are passed to the function, or the operands that the operator acts on.</li>
</ul>
<pre><code class="language-python">class A:
    def __init__(self, a):
        self.a = a

    # adding two objects
    def __add__(self, o):
        return self.a + o.a
ob1 = A(1)
ob2 = A(2)
ob3 = A(&quot;Geeks&quot;)
ob4 = A(&quot;For&quot;)

print(ob1 + ob2)
print(ob3 + ob4)
</code></pre>
<h2>Write a program to open a file in write mode and some contents at the end of file.</h2>
<pre><code class="language-python">o = open(&quot;name.txt&quot;, &quot;w&quot;)
o.write(&quot;I am a programmer&quot;)
o.close()
o = open(&quot;name.txt&quot;, &quot;r&quot;)
print(o.read())
o.close()
</code></pre>
<p>O/P</p>
<pre><code>I am a programmer
</code></pre>
<h2>a) Explain package Numpy with example.</h2>
<ul>
<li>Numpy is a python package which stands for “Numerical Python”.</li>
</ul>
<pre><code class="language-python">import numpy as n
a=n.ones((3, 3))
a[1:-1,1:-1]=0
print(a)
</code></pre>
<p>Output:</p>
<pre><code>[[1. 1. 1.]
 [1. 0. 1.]
 [1. 1. 1.]]
</code></pre>
<h2>6) Write a program to implement the concept of inheritance in python.</h2>
<pre><code class="language-python">class Parent:
	parentname = &quot;&quot;
	childname = &quot;&quot;
	def show_parent(self):
		print(self.parentname)

class Child(Parent):
	def show_child(self):
		print(self.childname)

c = Child()
c.parentname = &quot;Arati&quot;
c.childname = &quot;Purva&quot;
c.show_parent()
c.show_child()
</code></pre>
<h2>c) Explain Try-except block used in exception handling in python with example.</h2>
<ul>
<li>When an exception occurs, Python will normally stop and generate an error message.</li>
<li>These exceptions can be handled using the try statement.</li>
<li>The except block lets you handle the error.</li>
</ul>
<pre><code class="language-python">try:
  print(x)
except NameError:
  print(&quot;Variable x is not defined&quot;)
</code></pre>]]></description>
  </item>
  <item>
    <title>Sample Paper 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/sample-paper-6s.html</link>
    <pubDate>2023-01-01T22:05:18.398Z</pubDate>
    <description><![CDATA[<h2>Q1 Any FIVE</h2>
<h3>a. Name different modes of Python.</h3>
<p>Python has two basic modes:</p>
<ol>
<li>Script mode (or Normal mode)
<ul>
<li>The mode where the scripted and finished .py files are in the Python
Interpreter.</li>
</ul>
</li>
<li>Interactive mode
<ul>
<li>A command line shell which gives immediate feedback for each statement,
while running previously fed statements in active memory.</li>
</ul>
</li>
</ol>
<h3>b. List identity Operators</h3>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>is</td>
<td>Returns <code>True</code> if both variables are sames object</td>
<td>x is y</td>
</tr>
<tr>
<td>is not</td>
<td>Returns <code>False</code> if both variables are sames object</td>
<td>x is not y</td>
</tr>
</tbody>
</table>
<h3>c. Describe Dictionary</h3>
<ul>
<li>A dictionary is collection which is unordered, changeable and indexed.</li>
<li>Dictionaries are written with curl brackets, and they have keys and values.</li>
<li>Example:<pre><code class="language-python">company = {
	&quot;name&quot;: &quot;Apple&quot;,
	&quot;product&quot;: &quot;IPhone&quot;
	&quot;model&quot;: &quot;11&quot;
}
</code></pre>
</li>
</ul>
<h3>d. State use of namespace in Python</h3>
<ul>
<li>A namespace is a simple system to control the names in a program.</li>
<li>Python implements namespaces in the form of dictionaries.</li>
<li>It maintains a name-to-object mapping where names act as keys and the objects
as values.</li>
</ul>
<h3>e. List different object oriented features supported by Python.</h3>
<ul>
<li>Python OPP Concepts
<ol>
<li>Object</li>
<li>Class</li>
<li>Method</li>
<li>Inheritance</li>
<li>Polymorphism</li>
<li>Data Abstraction</li>
<li>Encapsulation</li>
</ol>
</li>
</ul>
<h3>f. Write steps involved in creation of a user defined exception?</h3>
<ul>
<li>Exception can be define by creating a new class.</li>
<li>This exception class has to be derived, either directly or indirectly, from the built-in <code>Exception</code>.</li>
<li>When the programmer suspects the possibility of exception, he should raise his
own exception using <code>raise</code>.</li>
<li>The programmer can insert the code inside a <code>try</code> block.</li>
<li>Catch the exception using <code>except</code> block.</li>
<li>Example:<pre><code class="language-python">class Error(Exception):
	print(&quot;Value can't be 0.&quot;)

number = 0

try:
	if number == 0:
		raise Error
	else:
		print(&quot;Value is more then 0.&quot;)
except Error:
	pass
</code></pre>
</li>
<li>Output:<pre><code>Value can't be 0.
</code></pre>
</li>
</ul>
<h3>g. Describe Python Interpreter</h3>
<ul>
<li>Python interpreter converts the code written in Python language by users to
language which computer hardware or system can understand.</li>
<li>Python interpreter is a bytecode interpreter, its input is instruction set
sets called bytecode.</li>
</ul>
<h3>h. List features of Python</h3>
<ul>
<li>Easy to code</li>
<li>High Level programming language</li>
<li>Object-Oriented Language</li>
<li>Portable language</li>
<li>Use interpreter</li>
<li>GUI Support</li>
</ul>
<h2>Q2 Any THREE</h2>
<h3>a. Explain two Membership and two logical operators in python with appropriate examples.</h3>
<h4>Membership Operators</h4>
<ul>
<li>Membership operators are used to test whether a value is found within a
sequence.</li>
<li>Example of <code>in</code>:<pre><code class="language-python">x = 4
y = 8
list = [1, 2, 3, 4, 5]

if (x in list):
	print(&quot;X is in list array&quot;)
else:
	print(&quot;X is not in list array&quot;)
</code></pre>
Output:<pre><code>X is in list array
</code></pre>
</li>
<li>Example of <code>not in</code>:<pre><code class="language-python">if (y not in list):
	print(&quot;Y is not in list array&quot;)
else:
	print(&quot;Y is in list array&quot;)
</code></pre>
Output:<pre><code>Y is not in list array
</code></pre>
</li>
</ul>
<h4>Logical Operators</h4>
<ul>
<li>Logical operators are usedto perform locical operations on the values of
variables. The value is either <code>true</code> or <code>false</code></li>
<li>Example of <code>and</code>, <code>or</code> and <code>not</code>.<pre><code class="language-python">a = True
b = False
print('a and b is', a and b)
print('a or b is', a or b)
print('not a is', not a)
</code></pre>
<pre><code>a and b is False
a or b is True
a not b is False
</code></pre>
</li>
</ul>
<h3>b. Describe any four methods of lists in Python</h3>
<ul>
<li><code>append()</code> - Adds an element at the end of the list.</li>
<li><code>pop()</code> - Removes the element at the specified position.</li>
<li><code>sort()</code> - Sorts the list</li>
<li><code>clear()</code> - Removes all the elements from the list.
Example:</li>
</ul>
<pre><code class="language-python">fruits = ['apple', 'banana', 'cherry']

fruits.append(&quot;orange&quot;)
print(fruits)

fruits.pop(1)
print(fruits)

fruits.sort()
print(fruits)

fruits.clear()
print(fruits)
</code></pre>
<p>Output:</p>
<pre><code>['apple', 'banana', 'cherry', 'orange']
['apple', 'cherry', 'orange']
['apple', 'cherry', 'orange']

</code></pre>
<h3>c. Comparing between local and global variable</h3>
<table>
<thead>
<tr>
<th>Local</th>
<th>Global</th>
</tr>
</thead>
<tbody>
<tr>
<td>It is declare  inside a function</td>
<td>It is declared outside the function</td>
</tr>
<tr>
<td>It is created when the function starts execution and lost when the function terminate.</td>
<td>It is created before the program’s global execution starts and lost when the program terminates.</td>
</tr>
<tr>
<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>
<td>You can access global variables by any statement in the program.</td>
</tr>
<tr>
<td>Parameters passing is required for local variables to access the value in other function.</td>
<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>
</tr>
</tbody>
</table>
<h3>d. Write a Python program to print Fibonacci series up to n terms</h3>
<p>Example:</p>
<pre><code class="language-python">term = int(input(&quot;Enter the term: &quot;))

n1, n2 = 0, 1

if term &lt; 0:
	print(&quot;Invalid term&quot;)
else:
	for i in range(term):
		print(n1)
		nth = n1 + n2
		n1 = n2
		n2 = nth
</code></pre>
<p>Output:</p>
<pre><code>Enter the term: 7
0
1
1
2
3
5
8
</code></pre>
<h2>Q3 Any THREE</h2>
<h3>a. Write a program to input any two and interchange the tuple variable.</h3>
<p>Example:</p>
<pre><code>a = (1, 2, 3, 4, 5)
b = (13, 23, 36, 47, 75)

a,b = b,a

print(a)
print(b)
</code></pre>
<p>Output:</p>
<pre><code>(13, 23, 36, 47, 75)
(1, 2, 3, 4, 5)
</code></pre>
<h3>b. Explain different loops available in python with suitable examples.</h3>
<h4><code>while</code></h4>
<p>A <code>while</code> loop executes a target statement as long as given condition is true.</p>
<p>Syntax:</p>
<pre><code>while expression: statement(s)
</code></pre>
<p>Example:</p>
<pre><code class="language-python">count = 0

while(count &lt; 5):
	print(count)
	count += 1

print(&quot;over&quot;)
</code></pre>
<p>Output:</p>
<pre><code>0
1
2
3
4
over
</code></pre>
<h4><code>for loop</code></h4>
<p>It has the ability to iterate over the items of any sequence, such as a list or
a string.</p>
<p>Syntax:</p>
<pre><code>for iterating in sequence: statements(s)
</code></pre>
<p>Example:</p>
<pre><code class="language-python">fruits = ['banana', 'apple', 'mango']

for fruit in fruits:
	print(fruit)

print(&quot;over&quot;)
</code></pre>
<p>Output:</p>
<pre><code>banana
apple
mango
over
</code></pre>
<h4>Nested loops</h4>
<p>Python programming language allows to use one loop inside another loop.</p>
<p>Syntax:</p>
<pre><code>for iterating in sequence:
	for iterating in sequence:
		statements(s)
	statements(s)
</code></pre>
<p>Example:</p>
<pre><code class="language-python">nums = [1, 2, 3]
words = [&quot;hello&quot;, &quot;hi&quot;, &quot;bye&quot;]

for num in nums:
	print(num)

	for word in words:
		print(word)
</code></pre>
<p>Output:</p>
<pre><code>1
hello
hi
bye
2
hello
hi
bye
3
hello
hi
bye
</code></pre>
<h3>c. Describe various modes of file object? Explain any two in detail.</h3>
<p>There are four different methods modes for opening a file:</p>
<ul>
<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>
<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not
exist.</li>
<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>
<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not
exist.</li>
</ul>
<p>In addition, the file should be handled as binary or text mode:</p>
<ul>
<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>
<li>b - Binary - Binary mode (e.g. images).</li>
</ul>
<h4>Read a file</h4>
<p>The <code>read()</code> method and <strong>r</strong> mode is used to read files.
Before read a file, the file must open using <code>open()</code> function.</p>
<p><code>text.txt</code> file content:</p>
<pre><code class="language-txt">Hello World
</code></pre>
<p>Program:</p>
<pre><code class="language-python">f = open(&quot;text.txt&quot;, &quot;r&quot;)
print(f.read())
</code></pre>
<p>Output:</p>
<pre><code>Hello world
</code></pre>
<h4>Write a file</h4>
<p>The <code>write()</code> method and <code>a</code> or <code>w</code> modes is used to write files.</p>
<p>Program:</p>
<pre><code class="language-python">f = open(&quot;text.txt&quot;, &quot;w&quot;)
f.write(&quot;Hello World&quot;)
f.close()
</code></pre>
<p><code>text.txt</code> file content:</p>
<pre><code>Hello World
</code></pre>
<h3>d. Illustrate the use of method overriding? Explain with example</h3>
<p>If a class inherits a method from its superclass, then there is a chance to
override the method provided.
Example:</p>
<pre><code class="language-python">class Parent:
	def echo(self):
		print('I am from Parent class.')

class Child(Parent):
	def echo(self):
		print('I am from Child class.')

p = Parent()
c = Child()

p.echo()
c.echo()
</code></pre>
<p>Output:</p>
<pre><code>I am from Parent class.
I am from Child class.
</code></pre>
<h2>Q4 Any THREE</h2>
<h3>a. Use of any four methods of tuple in Python?</h3>
<ul>
<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>
<li><code>max()</code> - Highest value will returned.</li>
<li><code>min()</code> - Lowest value be returned.</li>
<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>
</ul>
<p>Example:</p>
<pre><code class="language-python">t = (12, 45, 43, 8, 35, 12)
print(len(t))
print(max(t))
print(min(t))
print(t1.count(12))
</code></pre>
<p>Output:</p>
<pre><code>6
45
8
2
</code></pre>
<h3>b. Write a python Program to read contents of first.txt and write same content in second.txt file</h3>
<p><code>first.txt</code> file content:</p>
<pre><code>Hello World
</code></pre>
<p>Program:</p>
<pre><code class="language-python">with open('first.txt', 'r') as firstfile, open('second.txt', 'a') as secondfile:

	for line in firstfile:
		secondfile.write(line)
</code></pre>
<p><code>second.txt</code> file content:</p>
<pre><code>Hello world
</code></pre>
<h3>c. Show how try…except block is used for exception handling in Python with example.</h3>
<ul>
<li>When an exception occurs, Python will normally stop and generate an error
message.</li>
<li>These exceptions can be handled using the <code>try</code> statement.</li>
<li>The <code>except</code> block lets you handle the error.</li>
<li>Syntax:<pre><code class="language-python">try:
	# Code
except:
	# Code
</code></pre>
</li>
<li>Example:<pre><code class="language-python">try:
	print(x)
except NameError:
	print(&quot;Variable x is not defined&quot;)
</code></pre>
</li>
<li>Output:<pre><code>Variable x is not defined.
</code></pre>
</li>
</ul>
<h3>d. Write the output for the following if the variable fruit = “banana”</h3>
<pre><code>&gt;&gt;&gt; fruit[:3]
&gt;&gt;&gt; fruit[3:]
&gt;&gt;&gt; fruit[3:3]
&gt;&gt;&gt; fruit[:]
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; fruit = &quot;banana&quot;
&gt;&gt;&gt; fruit[:3]
'ban'
&gt;&gt;&gt; fruit[3:]
'ana'
&gt;&gt;&gt; fruit[3:3]
''
&gt;&gt;&gt; fruit[:]
'banana'
</code></pre>
<h2>Q5 Any TWO</h2>
<h3>a. Determine various data types available in Python with example.</h3>
<h4>Numbers</h4>
<ul>
<li><code>int</code>, <code>float</code> and complex numbers fall under numbers category.</li>
<li>Example:<pre><code class="language-python">a = 5
a = 2.0
a = 1+2j
</code></pre>
</li>
</ul>
<h4>String</h4>
<ul>
<li>String is sequence of Unicode characters.</li>
<li>We can use single quotes or double quotes to represent strings.</li>
<li>Multi-line string can be denoted using triple quotes <code>'''</code> or <code>&quot;&quot;&quot;</code>.</li>
<li>Example:<pre><code class="language-python">s = &quot;This is string&quot;
s = '''
	A multi line string
'''
</code></pre>
</li>
</ul>
<h4>List</h4>
<ul>
<li>List is an ordered sequence of items.</li>
<li>It is one of the most used datatype in Python.</li>
<li>List is very flexible.</li>
<li>All the items in a list don not need to be the same type.</li>
<li>Example:<pre><code class="language-python">a = [1, 2.2, 'python']
</code></pre>
</li>
</ul>
<h4>Tuple</h4>
<ul>
<li>Tuple is an ordered sequence of items same as a list.</li>
<li>The only difference is that tuples are immutable.</li>
<li>Tuples once created cannot be modified.</li>
<li>Example:<pre><code class="language-python">t = (5, 'program', 1+3j)
</code></pre>
</li>
</ul>
<h4>Set</h4>
<ul>
<li>Set is an unordered collection of unique items.</li>
<li>Set is defined by values separated by comma inside braces { }.</li>
<li>Items in a set are not ordered</li>
<li>Example:<pre><code class="language-python">a = {5,2,3,1,4}
</code></pre>
</li>
</ul>
<h4>Dictionary</h4>
<ul>
<li>Dictionary is an unordered collection of key-value pairs.</li>
<li>It is generally used when we have a huge amount of data.</li>
<li>Dictionaries are defined within braces <code>{}</code>.</li>
<li>Example:<pre><code class="language-python">d = {1:'value','key':2}
</code></pre>
</li>
</ul>
<h3>b. Write a python program to calculate factorial of given number using function.</h3>
<p>Example:</p>
<pre><code class="language-python">n = int(input(&quot;Enter the number: &quot;))
f = 1

for i in range(1, n + 1):
	f = f * 1

print(f)
</code></pre>
<p>Output:</p>
<pre><code>Enter the number: 6
720
</code></pre>
<h3>c. Show the output for the following:</h3>
<pre><code>&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = [4, 5, 6]
&gt;&gt;&gt; c = a + b
&gt;&gt;&gt; print(c)
[1, 2, 3, 4, 5, 6]
</code></pre>
<pre><code>&gt;&gt;&gt; [1, 2, 3] * 3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
</code></pre>
<pre><code>&gt;&gt;&gt; t = ['a', 'b', 'c', 'd', 'e', 'f']
&gt;&gt;&gt; t[1:3] = ['x', 'y']
&gt;&gt;&gt; print(t)
['a', 'x', 'y', 'd', 'e', 'f']
</code></pre>
<h2>Q6 Any TWO</h2>
<h3>a. Describe Set in python with suitable examples.</h3>
<h4>Creating a set</h4>
<p>Set can be created using curly braces <code>{}</code> or using <code>set()</code> method.</p>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry'}
fruits = set(['apple', 'banana', 'cherry'])
</code></pre>
<h4>Adding items to the set</h4>
<p>Item can added using <code>add()</code> method.</p>
<p>Example:</p>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry'}
fruits.add('orange')
print(fruits)
</code></pre>
<p>Output:</p>
<pre><code>{'apple', 'banana', 'cherry', 'orange'}
</code></pre>
<h4>Removing items from the set</h4>
<p>There three methods to remove sets:</p>
<ul>
<li><code>discard()</code> - removes given items from set.</li>
<li><code>remove()</code> - removes given item from set. If item is not avaliable it will
give error.</li>
<li><code>pop()</code> - removes list item from the set.</li>
</ul>
<p>Example:</p>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry', 'orange'}
fruits.discard(&quot;apple&quot;)
fruits.remove(&quot;banana&quot;)
fruits.pop()
print(fruits)
</code></pre>
<p>Output:</p>
<pre><code>{'cherry'}
</code></pre>
<h4>Comparison of set</h4>
<ul>
<li><code>|</code> - shows the union of two set.</li>
<li><code>&amp;</code> - shows the intersection of two set.</li>
<li><code>-</code> - shows the difference of two set.</li>
<li><code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code> - comparison operators can also be use in set.</li>
</ul>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry'}
fruits2 = {'orange', 'pineapple', 'apple'}

print(fruits|fruits2)
print(fruits&amp;fruits2)
print(fruits-fruits2)
print(fruits&gt;fruits2)
print(fruits&lt;fruits2)
print(fruits==fruits2)
</code></pre>
<p>Output:</p>
<pre><code>{'apple', 'banana', 'cherry', 'orange', 'pineapple', 'apple'}
{'apple'}
{'banana', 'cherry', 'orange', 'pineapple'}
False
False
True
</code></pre>
<h3>b. Illustrate class inheritance in Python with an example</h3>
<h4>Simple Inheritance</h4>
<p>In inheritance, the child class acquires the properties and access all the data
members and function defined in the parent class.</p>
<p>Illustration:</p>
<pre><code> ┏━━━━━━━━━━┓
 ┃Base Class┃
 ┗━━━━━━━━━━┛
      ⇑
┏━━━━━━━━━━━━┓
┃Deived Class┃
┗━━━━━━━━━━━━┛
</code></pre>
<p>Syntax:</p>
<pre><code class="language-python">class Base:
	# Body of base class
class Derived(Base):
	# Body of derived class
</code></pre>
<p>Example:</p>
<pre><code class="language-python">class Parent:
	parentname = &quot;&quot;
	childname = &quot;&quot;
	def show_parent(self):
		print(self.parentname)

class Child(Parent):
	def show_child(self):
		print(self.childname)

c = Child()
c.parentname = &quot;Arati&quot;
c.childname = &quot;Purva&quot;
c.show_parent()
c.show_child()
</code></pre>
<p>Output:</p>
<pre><code>Arati
Purva
</code></pre>
<h4>Multiple inheritance</h4>
<p>Multiple inheritace means that you’re inheriting the property of multiple
classes into one.</p>
<p>Illustration:</p>
<pre><code>┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓
┃Base Class 1┃┃Base Class 2┃┃Base Class 3┃
┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛
     ┃              ┃             ┃
     ┗━━━━━━━━━━━━━━╋━━━━━━━━━━━━━┛
              ┏━━━━━━━━━━━━┓
              ┃Deived Class┃
              ┗━━━━━━━━━━━━┛
</code></pre>
<p>Syntax:</p>
<pre><code class="language-python">class A:
	# variable of class A
class B:
	# variable of class B
class C(A, B):
	# variable of class C
</code></pre>
<p>Example:</p>
<pre><code class="language-python">class Parent1:
	def echo(self):
		print(&quot;Parent class 1&quot;)

class Parent2:
	def echo2(self):
		print(&quot;Parent class 2&quot;)

class Child(Parent1, Parent2):
	def show(self):
		print(&quot;Child class&quot;)

c = Child()
c.echo()
c.echo2()
c.show()
</code></pre>
<p>Output:</p>
<pre><code>Parent class 1
Parent class 2
Child class
</code></pre>
<h3>c. Design a class Employee with data members: name, department and salary. Create suitable methods for reading and printing employee information</h3>
<p>Example:</p>
<pre><code class="language-python">class Employee:
	name = &quot;&quot;
	department = &quot;&quot;
	salary = 0

	def setData(self):
		self.name = input(&quot;Enter Name: &quot;)
		self.department = input(&quot;Enter Department: &quot;)
		self.salary = int(input(&quot;Enter Salary: &quot;))

	def showData(self):
		print(&quot;Name:&quot;, self.name)
		print(&quot;Department:&quot;, self.department)
		print(&quot;Salary:&quot;, self.salary)

e = Employee()
e.setData()
e.showData()
</code></pre>
<p>Output:</p>
<pre><code>Enter Name: Jonney
Enter Department: Testing
Enter Salary: 20000
Name: Jonney
Department: Testing
Salary: 20000
</code></pre>]]></description>
  </item>
  </channel>
</rss>
