<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AK#Notes</title>
    <link>https://anzenkodo.github.io/notes/</link>
    <description>This my personal website where I post my notes about thing that I have learn.</description>
    <language>en-US</language>
    <lastBuildDate>2022-12-20T05:31:52.793Z</lastBuildDate>
    <image>
      <url>https://anzenkodo.github.io/notes/favicon.png</url>
      <title>AK#Notes</title>
      <link>https://anzenkodo.github.io/notes/</link>
      <width>500</width>
      <height>500</height>
    </image>
    <atom:link href="https://anzenkodo.github.io/notes/feed.xml" rel="self" type="application/rss+xml" />
    <atom:link href="https://anzenkodo.github.io/notes/feed.xml" rel="alternate" type="application/rss+xml" />
      <item>
    <title>Home</title>
    <link>https://anzenkodo.github.io/notes/</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<p>This my personal website where I post my notes about thing that I have learn.</p>
<h2>Features</h2>
<ul>
<li>Easy to:
<ul>
<li>Setup</li>
<li>Configure</li>
<li>Write</li>
</ul>
</li>
<li>Supports:
<ul>
<li>Tags</li>
<li>Search (Power by <a href="https://duckduckgo.com/">DuckDuckGo</a>)</li>
<li>Canonical</li>
<li><a href="https://ogp.me/">Open Graph</a></li>
<li>Analytics</li>
<li><a href="https://pages.github.com/">GitHub Pages</a></li>
</ul>
</li>
<li>Auto generate:
<ul>
<li>GitHub Pages Actions file</li>
<li>Favicon</li>
<li>Sitemap</li>
<li>404 page</li>
<li>CSS</li>
<li><code>mainfest.json</code> file</li>
<li>Feeds
<ul>
<li>RSS</li>
<li>JSON</li>
<li>Atom</li>
</ul>
</li>
</ul>
</li>
<li>No Client side JavaScript</li>
<li>Minified HTML &amp; Inline CSS</li>
<li>Lightweight</li>
</ul>
<h2>Getting Started</h2>
<h3>Installing</h3>
<ul>
<li>Download deno from <a href="https://deno.land/">https://deno.land/</a> and install it.</li>
<li>After installing deno run following commands.</li>
</ul>
<pre><code class="language-sh"># Install the dblog
deno run https://deno.land/x/dblog/install.js # Add deno to path, if you didn't already.

# See all the options that are available
dblog --help

# Setup the your blog (Skip this if already your blog setup)
dblog --setup

# Make your blog and Run on localhost
dblog --serve
</code></pre>
<h3>Update</h3>
<p>To update dblog, rerun the installation command.</p>
<pre><code class="language-sh">deno run https://deno.land/x/dblog/install.js
</code></pre>
<h3>Run dblog without installing dblog</h3>
<pre><code class="language-sh">deno run -A https://deno.land/x/dblog/mod.js --help
</code></pre>
<h2>Live Demo &amp; Folder</h2>
<ul>
<li><a href="https://anzenkodo.github.io/dblog">Live Demo</a></li>
<li><a href="https://github.com/AnzenKodo/dblog/tree/gh-pages">Generated Files</a></li>
</ul>
<h2>Configuration</h2>
<p>Place <code>config.json</code> in root folder to edit default configuration. The
<code>config.json</code> is optional.</p>
<p><strong>The <code>config.json</code> with default configuration:</strong></p>
<pre><code class="language-json">{
  &quot;name&quot;: &quot;dblog&quot;,
  &quot;start_url&quot;: &quot;https://AnzenKodo.github.io/dblog/&quot;,
  &quot;description&quot;: &quot;dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.&quot;,
  &quot;email&quot;: &quot;&quot;,
  &quot;author&quot;: &quot;AnzenKodo&quot;,
  &quot;posts&quot;: &quot;./posts&quot;,
  &quot;output&quot;: &quot;./site&quot;,
  &quot;favicon&quot;: &quot;favicon.svg&quot;,
  &quot;lang&quot;: &quot;en-US&quot;,
  &quot;port&quot;: 8000,
  &quot;background&quot;: &quot;#ffffff&quot;,
  &quot;foreground&quot;: &quot;#000000&quot;,
  &quot;theme&quot;: &quot;#01a252&quot;,
  &quot;footer&quot;: &quot;&lt;p&gt;Made by &lt;a href=\&quot;https://AnzenKodo.github.io/AnzenKodo\&quot;&gt;AnzenKodo&lt;/a&gt; under &lt;a href=\&quot;https://anzenkodo.github.io/dblog/LICENSE\&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;\n&quot;,
  &quot;page404&quot;: &quot;404 Page Not Found, Sorry :(&quot;,
  &quot;backup&quot;: false,
  &quot;exclude&quot;: [
    &quot;config.json&quot;,
    &quot;backup.json&quot;
  ],
  &quot;nav&quot;: {},
  &quot;head&quot;: &quot;&quot;
}
</code></pre>
<p><strong>Note:</strong> Every option is optional.</p>
<ul>
<li><strong>name</strong> - Name of your blog.</li>
<li><strong>start_url</strong> - Start URL of your site. <em>Example:</em> ‘<a href="https://example.com/">https://example.com/</a>’,
‘<a href="https://blog.example.com/">https://blog.example.com/</a>’, ‘<a href="https://example.com/blog/">https://example.com/blog/</a>’</li>
<li><strong>email</strong> - Your email address. This will enable ‘Reply with Email’ button in
posts.</li>
<li><strong>author</strong> - Your name or username.</li>
<li><strong>posts</strong> - Path of posts.</li>
<li><strong>output</strong> - Folder where your blog build will be placed. <em>Example:</em> ‘./blog’,
‘…/site/blog’, ‘site/blog’.</li>
<li><strong>favicon</strong> - <em><strong>Recommended 500x500px</strong></em>. Favicon location. <em>If empty,
generated favicon will be used</em>. <em>Example:</em> ‘./favicon.png’,
‘./static/favicon.icon’, ‘…/favicon.jpg’.</li>
<li><strong>lang</strong> - Blog language in ‘RFC 5646’ format. Example: ‘ja’ for Japanese,
‘sv’ for Swedish, ‘it’ for Italian. See
<a href="https://wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags">List of common primary language subtags in Wikipedia</a></li>
<li><strong>footer</strong> - Footer of your website. <em>Supports CommonMark Markdown format</em>.
<em>Example:</em>
<code>Made by [AnzenKodo](https://AnzenKodo.github.io/AnzenKodo) uder [MIT License](https://anzenkodo.github.io/dblog/LICENSE.html)</code>.</li>
<li><strong>port</strong> - Port of your blog on localhost. <em>Example</em>: ‘8080’, ‘8300’, ‘8400’.</li>
<li><strong>background</strong> - Background color in light mode. Becomes foreground color in
light mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>
<li><strong>foreground</strong> - Foreground color in light mode. Becomes background color in
light mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>
<li><strong>theme</strong> - Blog theme color. <em>Example:</em> ‘#0583f2’, ‘#f20544’, ‘#f2b705’.</li>
<li><strong>page404</strong> - 404 page message. <em>Example:</em> ‘Sorry, page not found :(’.</li>
<li><strong>backup</strong> - Backup file location. <em>Example:</em> <code>false</code> to don’t generate
<code>backup.json</code> file, ‘./backup.json’, ‘./site/backup.json’, ‘…/backup.json’.</li>
<li><strong>exclude</strong> - Exclude files or folder. <em>Example:</em><pre><code class="language-json">&quot;exclude&quot;: [ &quot;.env&quot;, &quot;todo.md&quot;, &quot;drafts&quot; ],
</code></pre>
</li>
<li><strong>nav</strong> - Nav bar item list. Example:<pre><code class="language-json">&quot;nav&quot;: {
  &quot;about&quot;: &quot;./about.md&quot;,
  &quot;stie&quot;: &quot;https://anzenkodo.github.io/AnzenKodo&quot;
}
</code></pre>
</li>
<li><strong>head</strong> - If you analytics or any other tags you want to put on head tag.
<em>Example:</em>
<code>&lt;link rel=&quot;preconnect&quot; href=&quot;//www.google-analytics.com&quot; crossorigin=&quot;&quot;&gt;</code>.</li>
</ul>
<h2>CLI Options</h2>
<pre><code class="language-sh">dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.

Website: https://anzenkodo.github.io/dblog
Package: https://deno.land/x/dblog
Repo: https://github.com/AnzenKodo/dblog
Docs: https://anzenkodo.github.io/dblog/posts/dblog-Docs.html

USAGE:
  dblog [OPTIONS]

OPTIONS:
  --serve   Build blog and Start localhost.
    --noopen  Don't open browser, when starting localhost.
  --build   Build blog without starting localhost.
  --setup   Setup new blog.
  --backup  Restore blog if 'backup.json' file available.
  --readme  Generate 'README.md' file.
  --help    Print help information.
</code></pre>
<h2>File Options</h2>
<pre><code>---
title: If empty the file name will be used
description: If empty the first paragraph will be used.
tags: [ &quot;tag1&quot;, &quot;tag2&quot; ]
date: 20/08/2020
canonical:
---
</code></pre>
<ul>
<li><strong>date</strong> - If empty, the file date will be used. <em>Note:</em> The file <code>date</code> might
not always right. So always give you own date.</li>
<li><strong>canonical</strong> - Share content between multiple sites without impacting SEO.
Just put canonical URL. Know more about
<a href="https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls">canonical url</a>.</li>
</ul>
<h3>If file name start with underscore “_” it will be consider as draft.</h3>
<p><strong>Example:</strong> <code>posts/_This is draft.md</code></p>
<h2>Markdown Guide</h2>
<h3><a href="https://commonmark.org/help/">CommonMark</a> Syntex</h3>
<h4>Heading</h4>
<pre><code class="language-md"># H1

## H2

### H3

#### H4

##### H5

###### H6
</code></pre>
<h1>H1</h1>
<h2>H2</h2>
<h3>H3</h3>
<h4>H4</h4>
<h5>H5</h5>
<h6>H6</h6>
<h4>Inline style</h4>
<pre><code class="language-md">**Bold** _Italic_ ~~Strikethrough~~
</code></pre>
<p><strong>Bold</strong> <em>Italic</em> <s>Strikethrough</s></p>
<h4>Link and Image</h4>
<pre><code class="language-md">[website](https://anzenkodo.github.io/dblog)
![Jurassic Deno by Samip Poudel](https://deno.land/images/artwork/jurassicDeno.jpg)
</code></pre>
<p><a href="https://anzenkodo.github.io/dblog">website</a>
<img src="https://deno.land/images/artwork/jurassicDeno.jpg" alt="Jurassic Deno by Samip Poudel"></p>
<h4>Blockquote</h4>
<pre><code class="language-md">&gt; 'The road to hell is paved with good intentions' by Abbot Bernard
</code></pre>
<blockquote>
<p>‘The road to hell is paved with good intentions’ by Abbot Bernard</p>
</blockquote>
<h4>List</h4>
<pre><code class="language-md">- List
  - List
- List

1. One
2. Two
3. Three
</code></pre>
<ul>
<li>List
<ul>
<li>List</li>
</ul>
</li>
<li>List</li>
</ul>
<ol>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ol>
<h4>Horizontal rule</h4>
<pre><code class="language-md">---
</code></pre>
<hr>
<h4>Code block</h4>
<div class="highlight highlight-source-lisp notranslate position-relative overflow-auto">
<pre>
`Inline code` with backticks
```js
  console.log("Code Blog in JavaScript");
```
</pre>
</div>
<p><code>Inline code</code> with backticks</p>
<pre><code class="language-js">console.log(&quot;Code Blog in JavaScript&quot;);
</code></pre>
<h3>Additional Markdown syntax</h3>
<h4>Checkbox</h4>
<pre><code class="language-md">- [ ] Checkbox
- [x] Checkbox with tick
</code></pre>
<ul class="task-list">
<li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> Checkbox</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> Checkbox with tick</label></li>
</ul>
<h4>Image with caption</h4>
<pre><code class="language-md">![Deno](https://deno.land/images/artwork/deno_matrix.png &quot;Matrix by bramaudi&quot;)
</code></pre>
<figure data-type="image"><img src="https://deno.land/images/artwork/deno_matrix.png" alt="Deno" loading="lazy" decoding="async"><figcaption>Matrix by bramaudi</figcaption></figure>
<h4>Footer</h4>
<pre><code class="language-md">Here is a footnote reference[^1]. [^1]: Here is the footnote.
</code></pre>
<p>Here is a footnote reference[^1]. [^1]: Here is the footnote.</p>
<h4>Additional inline syntax</h4>
<pre><code class="language-md">~sub~ ^sup^ ==mark== [[kbd]] _underline_ ++insert++ ~~delete~~
</code></pre>
<p><sub>sub</sub>
<sup>sup</sup>
<mark>mark</mark>
<kbd>kbd</kbd>
<u>underline</u>
<ins>insert</ins>
<del>delete</del></p>
<h4>Description list</h4>
<pre><code class="language-md">: Definition 1 Term 2 with _inline markup_ : Definition 2 Third paragraph of
definition 2.
</code></pre>
<dl>
  <dt>Definition 1</dt>
  <dd>Term 2 with inline.</dd>
  <dt>Definition 2</dt>
  <dd>Third paragraph of definition 2.</dd>
</dl>
<h4>Abbreviation</h4>
<pre><code class="language-md">*[abbr]: Abbreviation
</code></pre>
<p><abbr title="Abbreviation">abbr</abbr></p>
<h4>Table</h4>
<h5>Normal</h5>
<pre><code class="language-md">| Syntax    | Description |
| --------- | ----------- |
| Header    | Title       |
| Paragraph | Text        |
</code></pre>
<table>
<thead>
<tr>
<th>Syntax</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Header</td>
<td>Title</td>
</tr>
<tr>
<td>Paragraph</td>
<td>Text</td>
</tr>
</tbody>
</table>
<h5>Multiline</h5>
<pre><code class="language-md">| Markdown  | Rendered HTML |
| --------- | ------------- |
| _Italic_  | _Italic_      |
|           |               |
| - Item 1  | - Item 1      |
| - Item 2  | - Item 2      |
| ```python | ```python \   |
| .1 + .2   | .1 + .2       |
</code></pre>
<table><thead><tr><th>Markdown</th><th>Rendered HTML</th></tr></thead> <tbody>
  <tr> <td> <pre><code>*Italic* </code></pre> </td> <td> <p><em>Italic</em></p>
  </td> </tr> <tr> <td> <pre><code>- Item 1 - Item 2</code></pre> </td> <td>
  <ul> <li>Item 1</li> <li>Item 2</li> </ul> </td> </tr> <tr> <td>
<pre><code>
```python
.1 + .2
```
</code></pre> </td> <td> <pre><code class="language-python">.1 + .2
  </code></pre> </td> </tr> </tbody> </table>
<h5>Rowspan</h5>
<pre><code class="language-md">|                       Stage | Direct Products | ATP Yields |
| --------------------------: | --------------: | ---------: |
|                  Glycolysis |           2 ATP |            |
|                          ^^ |          2 NADH |   3--5 ATP |
|          Pyruvaye oxidation |          2 NADH |      5 ATP |
|           Citric acid cycle |           2 ATP |            |
|                          ^^ |          6 NADH |     15 ATP |
|                          ^^ |         2 FADH2 |      3 ATP |
|              **30--32** ATP |                 |            |
| [Net ATP yields per hexose] |                 |            |
</code></pre>
<table> <caption id="netatpyieldsperhexose">Net ATP yields per hexose</caption>
  <thead> <tr> <th align="right">Stage</th> <th align="right">Direct
Products</th> <th align="right">ATP Yields</th> </tr> </thead> <tbody> <tr> <td
align="right" rowspan="2">Glycolysis</td> <td align="right" colspan="2">2
ATP</td> </tr> <tr> <td align="right">2 NADH</td> <td align="right">3–5
ATP</td> </tr> <tr> <td align="right">Pyruvaye oxidation</td> <td
align="right">2 NADH</td> <td align="right">5 ATP</td> </tr> <tr> <td
align="right" rowspan="3">Citric acid cycle</td> <td align="right"
colspan="2">2 ATP</td> </tr> <tr> <td align="right">6 NADH</td> <td
align="right">15 ATP</td> </tr> <tr> <td align="right">2 FADH2</td> <td
align="right">3 ATP</td> </tr> <tr> <td align="right"
colspan="3"><strong>30–32</strong> ATP</td> </tr> </tbody> </table>
<h4>Headerless</h4>
<pre><code class="language-md">|--|--|--|--|--|--|--|--| |♜| |♝|♛|♚|♝|♞|♜| | |♟|♟|♟| |♟|♟|♟| |♟| |♞| | | | | |
| |♗| | |♟| | | | | | | | |♙| | | | | | | | | |♘| | | |♙|♙|♙|♙| |♙|♙|♙|
|♖|♘|♗|♕|♔| | |♖|
</code></pre>
<table> <tbody> <tr> <td>♜</td> <td></td> <td>♝</td> <td>♛</td> <td>♚</td>
  <td>♝</td> <td>♞</td> <td>♜</td> </tr> <tr> <td></td> <td>♟</td> <td>♟</td>
  <td>♟</td> <td></td> <td>♟</td> <td>♟</td> <td>♟</td> </tr> <tr> <td>♟</td>
  <td></td> <td>♞</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>
  <tr> <td></td> <td>♗</td> <td></td> <td></td> <td>♟</td> <td></td> <td></td>
  <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> <td>♙</td>
  <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td>
  <td></td> <td></td> <td>♘</td> <td></td> <td></td> </tr> <tr> <td>♙</td>
  <td>♙</td> <td>♙</td> <td>♙</td> <td></td> <td>♙</td> <td>♙</td> <td>♙</td>
  </tr> <tr> <td>♖</td> <td>♘</td> <td>♗</td> <td>♕</td> <td>♔</td> <td></td>
  <td></td> <td>♖</td> </tr> </tbody> </table>]]></description>
  </item>
  <item>
    <title>UT1 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/ut1-6s.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<p><strong>Note: WAP (write a program)</strong></p>
<h2>WAP to print Fibonacci Series</h2>
<pre><code class="language-python">term = int(input(&quot;Enter the term: &quot;))

n1, n2 = 0, 1

if term &lt; 0:
    print(&quot;Invalid term&quot;)
else:
    for i in range(term):
        print(n1)
        nth = n1 + n2
        n1 = n2
        n2 = nth
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter the term: 7
0
1
1
2
3
5
8
</code></pre>
<h2>Factorial of a number</h2>
<pre><code class="language-python">n = int(input(&quot;Enter the number: &quot;))
f = 1

for i in range(1, n + 1):
    f = f * i

print(f)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter the number: 6
720
</code></pre>
<h2>Perform <code>intersection()</code>, <code>union()</code>, <code>difference()</code>, <code>symmetric_difference()</code> on <code>set</code></h2>
<pre><code class="language-python">set1 = {1, 5, 8, &quot;Google&quot;, 9, 6}
set2 = {1, &quot;Google&quot;, 6, 3, 2, 11}

i = set1.intersection(set2)
u = set1.union(set2);
d = set1.difference(set2)
s = set1.symmetric_difference(set2)

set1.clear()

print(&quot;Intersection =&quot;, i);
print(&quot;Union =&quot;, u);
print(&quot;Set Difference =&quot;, d);
print(&quot;Symmetric Difference =&quot;, s);
print(&quot;Clear Set =&quot;, set1);
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Intersection =  {1, 'Google', 6}
Union =  {1, 2, 3, 5, 6, 8, 9, 11, 'Google'}
Set Difference =  {8, 9, 5}
Symmetric Difference =  {2, 3, 5, 8, 9, 11}
Clear Set =  set()
</code></pre>
<h2>WAP that takes the marks of 5 Subjects and displays the grade</h2>
<pre><code class="language-python">sub1 = int(input(&quot;Enter marks of subject 1: &quot;))
sub2 = int(input(&quot;Enter marks of subject 2: &quot;))
sub3 = int(input(&quot;Enter marks of subject 3: &quot;))
sub4 = int(input(&quot;Enter marks of subject 4: &quot;))
sub5 = int(input(&quot;Enter marks of subject 5: &quot;))

total = ((sub1 + sub2 + sub3 + sub4 + sub5) / 5)
print(&quot;\nPercentage is&quot;, total)

if total &gt; 75:
    print(&quot;Distinction&quot;)
elif total &gt;= 65 and total &lt; 75:
    print(&quot;First Class&quot;)
elif total &gt;= 50 and total &lt; 60:
    print(&quot;Second Class&quot;)
elif total &gt;=35 and total &lt; 50:
    print(&quot;Third Class&quot;);
else:
    print(&quot;Fail&quot;)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter marks of subject 1: 57
Enter marks of subject 2: 78
Enter marks of subject 3: 87
Enter marks of subject 4: 50
Enter marks of subject 5: 70

Percentage is 68.4
First Class
</code></pre>
<h2>Explain features of python</h2>
<ol>
<li>Python is easy to use and a high level programming language.</li>
<li>Python is interpreted language</li>
<li>Interactive mode</li>
<li>Free and Open Source</li>
<li>Platform independence</li>
<li>Portable</li>
<li>Object oriented language</li>
</ol>
<h2>WAP to check whether entered character is vowel or not</h2>
<pre><code class="language-python">ch = input(&quot;Enter the character: &quot;).lower()

if(ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u'):
    print(&quot;Entered character is vowel.&quot;)
else:
    print(&quot;Entered character is not a vowel.&quot;)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter character: a
Entered character is a vowel.
</code></pre>
<h2>WAP to check number is prime or not</h2>
<pre><code class="language-python">num = int(input(&quot;Enter a number: &quot;));

if num &gt; 1:
    for i in range(2, num):
        if (num % i) == 0:
            print(num, &quot;is not a prime number.&quot;)
            break;
    else:
        print(num, &quot;is prime number.&quot;)
else:
    print(num, &quot;is not a prime number.&quot;);
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter the number: 11
11 is a prime number.
</code></pre>
<h2>WAP checks whether the number is palindrome or not.</h2>
<pre><code class="language-python">n = input(&quot;Enter number: &quot;)
rev = n[ : :-1]

if rev == n:
    print(n, &quot;is a palindrome.&quot;)
else:
    print(n, &quot;is not a palindrome.&quot;)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter number: 33
33 is a palindrome.
</code></pre>
<h2>WAP to perform following operation on list</h2>
<ol>
<li><strong>max()</strong> - Find largest number</li>
<li><strong>reverse()</strong> - Find  Reverse of the list</li>
<li><strong>i % 2</strong> - Select even item of the list</li>
<li><strong>sum()</strong> - Sum of all item in a list</li>
</ol>
<h3>Find largest number</h3>
<pre><code class="language-python">a = [8,2,5,1,2,4,6,11]
print(&quot;Largest number&quot;, max(a))
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Largest number 11
</code></pre>
<h3>Reverse list</h3>
<pre><code class="language-python">a = [8,2,5,1,2,4,6,11]
a.reverse()
print(&quot;Reverse list&quot;, a)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Reverse list [11, 6, 4, 2, 1, 5, 2, 8]
</code></pre>
<h3>Even items</h3>
<pre><code class="language-python">a = [8,2,5,1,2,4,6,11]

for i in a:
  if (i % 2) == 0:
    print(i)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>8
2
2
6
4
</code></pre>
<h3>Sum of all items</h3>
<pre><code class="language-python">a = [8,2,5,1,2,4,6,11]
print(&quot;Sumof all items:&quot;, sum(a))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Sum of all items: 39
</code></pre>
<h2>Compare list and sets</h2>
<table>
<thead>
<tr>
<th>Lists</th>
<th>Sets</th>
</tr>
</thead>
<tbody>
<tr>
<td>Lists are Ordered.</td>
<td>Sets are Unordered.</td>
</tr>
<tr>
<td>Lists are Mutable.</td>
<td>Sets are mutable but only stored immutable elements.</td>
</tr>
<tr>
<td>Elements can be changed or replaced in Lists.</td>
<td>Elements cannot be changed or replaced.</td>
</tr>
</tbody>
</table>
<h2>Describe various list functions</h2>
<ol>
<li><strong>extend()</strong> - add  all elements of of list to the another list</li>
<li><strong>insert()</strong> - insert and item from the list</li>
<li><strong>clear()</strong> - removes all elements from the list</li>
<li><strong>copy()</strong> - returns a copy of the list</li>
<li><strong>reverse()</strong> - reverse the order of element in the list</li>
<li><strong>sort()</strong> - sort the element list</li>
</ol>
<p><strong>Note:</strong> <strong>Given below example will not come in exam. This is only for reference.</strong></p>
<h3>extend()</h3>
<pre><code class="language-python">list1 = [1, 5, 8, 9, 6]
list2 = [1, 6, 3, 2, 11]

list1.extend(list2)
print(&quot;Extend:&quot;, list1)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Extend: [1, 5, 8, 9, 6, 1, 6, 3, 2, 11]
</code></pre>
<h3>insert()</h3>
<pre><code class="language-python">list1 = [1, 5, 8, 9, 6]

list1.insert(3, 100)
print(&quot;Insert:&quot;, list1)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Insert: [1, 5, 8, 100, 9, 6]
</code></pre>
<h3>clear()</h3>
<pre><code class="language-python">list1 = [1, 5, 8, 9, 6]

list1.clear()
print(&quot;Clear:&quot;, list1)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Clear: []
</code></pre>
<h3>reverse()</h3>
<pre><code class="language-python">list1 = [1, 5, 8, 9, 6]

list1.reverse()
print(&quot;Reverse:&quot;, list1)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Reverse: [6, 9, 8, 5, 1]
</code></pre>
<h3>sort()</h3>
<pre><code class="language-python">list1 = [1, 5, 8, 9, 6]

list1.sort()
print(&quot;Sort:&quot;, list1)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Sort: [1, 5, 6, 8, 9]
</code></pre>
<h2>Write a program convert US Dollars to Indian Rupees.</h2>
<pre><code class="language-python">usd = float(input(&quot;Enter currency in USD: &quot;))
inr = usd * 75
print(&quot;The currency in INR is&quot;, inr)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Enter currency in USD: 2
The currency in INR: 150.0
</code></pre>
<h2>Explain operator in python</h2>
<p>An operator is Single set of special symbols that performs predefined
operations  on operators. Python provides a variety of operators, which are
described as follows.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Operators</th>
</tr>
</thead>
<tbody>
<tr>
<td>Arithmetic operators</td>
<td>+, -, *, /, %, **, //</td>
</tr>
<tr>
<td>Assignment Operators</td>
<td>+=, =, -=, /=, //=</td>
</tr>
<tr>
<td>Logical Operators</td>
<td>and, or, not</td>
</tr>
<tr>
<td>Bitwise Operators</td>
<td>&amp;, &gt;&gt;, &lt;&lt;, ^</td>
</tr>
<tr>
<td>Membership Operators</td>
<td>in, not in</td>
</tr>
<tr>
<td>Identity Operators</td>
<td>is, is not</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong> <strong>Given below example will not come in exam. This is only for reference.</strong></p>
<h3>Arithmetic operators</h3>
<pre><code class="language-python">num1 = int(input(&quot;Enter first number: &quot;))
num2 = int(input(&quot;Enter second number: &quot;))

print(num1, &quot;+&quot;, num2, &quot;=&quot;, num1 + num2)
print(num1, &quot;-&quot;, num2, &quot;=&quot;, num1 - num2)
print(num1, &quot;*&quot;, num2, &quot;=&quot;, num1 * num2)
print(num1, &quot;/&quot;, num2, &quot;=&quot;, num1 / num2)
print(num1, &quot;%&quot;, num2, &quot;=&quot;, num1 % num2)
print(num1, &quot;**&quot;, num2, &quot;=&quot;, num1 ** num2)
print(num1, &quot;//&quot;, num2, &quot;=&quot;, num1 // num2)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Enter first number: 10
Enter second number: 10
10 + 10 = 20
10 - 10 = 0
10 * 10 = 100
10 / 10 = 1.0
10 % 10 = 0
10 ** 10 = 10000000000
10 // 10 = 1
</code></pre>
<h3>Assignment Operators</h3>
<pre><code class="language-python">a = 3
b = 5

a += b

print(a)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>8
</code></pre>
<h3>Logical Operators</h3>
<pre><code class="language-python">num1 = int(input(&quot;Enter first number: &quot;))
num2 = int(input(&quot;Enter second number: &quot;))

if (num1 &lt; num2 and num1 &lt;= num2):
    print(num1, &quot;&lt;&quot;, num2, &quot;and&quot;, num1, &quot;&lt;=&quot;, num2)
elif (num1 &gt; num2 or num1 &gt;= num2):
    print(num1, &quot;&gt;&quot;, num2, &quot;or&quot;, num1, &quot;&gt;=&quot;, num2)
elif not(num1 &lt; num2 and num1 &lt;=num2):
    print(&quot;Not:&quot;, num1, &quot;&lt;&quot;, num2, &quot;and&quot;, num1, &quot;&lt;=&quot;, num2)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Enter first number: 10
Enter second number: 1
10 &gt; 1 or 10 &gt;= 1
</code></pre>
<h3>Bitwise Operators</h3>
<pre><code class="language-python">num1 = int(input(&quot;Enter first number: &quot;))
num2 = int(input(&quot;Enter second number: &quot;))

print(num1, &quot;&amp;&quot;, num2, &quot;=&quot;, num1 &amp; num2)
print(num1, &quot;|&quot;, num2, &quot;=&quot;, num1 | num2)
print(num1, &quot;^&quot;, num2, &quot;=&quot;, num1 ^ num2)
print(num1, &quot;&gt;&gt;&quot;, num2, &quot;=&quot;, num1 &gt;&gt; num2)
print(num1, &quot;&lt;&lt;&quot;, num2, &quot;=&quot;, num1 &lt;&lt; num2)
print(&quot;~&quot;,num1, &quot;=&quot;, ~num1)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Enter first number: 10
Enter second number: 10
10 &amp; 10 = 10
10 | 10 = 10
10 ^ 10 = 0
10 &gt;&gt; 10 = 0
10 &lt;&lt; 10 = 10240
~ 10 = -11
</code></pre>
<h3>Membership Operators</h3>
<pre><code class="language-python">x = [&quot;apple&quot;, &quot;banana&quot;]
y = [&quot;pineapple&quot;, &quot;orange&quot;]

print(&quot;apple in x:&quot;, &quot;apple&quot; in x)
print(&quot;pineapple not in x:&quot;, &quot;pineapple&quot; not in x)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>apple in x: True
pineapple not in x: True
</code></pre>
<h3>Identity Operators</h3>
<pre><code class="language-python">x = [&quot;apple&quot;, &quot;banana&quot;]
y = [&quot;pineapple&quot;, &quot;orange&quot;]

print(&quot;x is y:&quot;, x is y)
print(&quot;x is not y:&quot;, x is not y)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>x is y: False
x is not y: True
</code></pre>
<h2>Explain <code>continue</code>, <code>pass</code>, <code>break</code>, <code>else</code> with example.</h2>
<h3>continue</h3>
<p>The **continue **statement skips the code that comes after it, and the control
is passed back to the next iteration.</p>
<p><strong>Example</strong>:</p>
<pre><code>for i in range(6):
    if i == 7:
        continue
    print(&quot;The Number is:&quot; , i)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>The number is: 0
The number is: 1
The number is: 2
The number is: 3
The number is: 4
The number is: 5
The number is: 6
</code></pre>
<h3>pass</h3>
<p>Python pass statement is used as a placeholder inside loops, functions, class,
if-statement that is meant to be implemented later.</p>
<p><strong>Example</strong>:</p>
<pre><code>a = 10
b = 20
if a &lt; b:
  pass
else:
  print(&quot;b &lt; a&quot;)
</code></pre>
<p><strong>Output</strong>:
No output</p>
<h3>break</h3>
<p>The <strong>break</strong> statement takes care of terminating the loop in which it is used.
If the break statement is used inside nested loops, the current loop is
terminated, and the flow will continue with the code followed that comes after
the loop.</p>
<p><strong>Example</strong>:</p>
<pre><code class="language-python">for i in range(4):
    for j in range(4):
        if j==2:
            break
        print(&quot;The number is&quot;, i, j)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>This number is 0 0
This number is 0 1
This number is 1 0
This number is 1 1
This number is 2 0
This number is 2 1
This number is 3 0
This number is 3 1
</code></pre>
<h3>else</h3>
<p>**else **statement can be combined with an if statement. An else statement
contains the block of code that executes if the conditional expression in the
if statement resolves to 0 or a FALSE value.</p>
<p><strong>Example</strong>:</p>
<pre><code class="language-python">num = 3
if num &gt;= 0:
    print(&quot;Positive or Zero&quot;)
else:
    print(&quot;Negative number&quot;)
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>Positive or Zero
</code></pre>
<h2>Define dictionary explain <code>access</code>, <code>delete</code>, <code>update()</code> dictionary</h2>
<p>Dictionary in Python is an unordered collection of data values, used to store
data values like a map, which, unlike other Data Types that hold only a single
value as an element, Dictionary holds key:value pair.</p>
<h3>acces</h3>
<p>You can access the items of a dictionary by referring to its key name</p>
<p><strong>Example</strong>:</p>
<pre><code class="language-python">di = {&quot;Name&quot;: &quot;VIVA&quot;,&quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;:123}
x = di[&quot;Name&quot;]
print(x)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>VIVA
</code></pre>
<h3>update()</h3>
<p>Updates the dictionary with the specified key-value pairs</p>
<p><strong>Example:</strong></p>
<pre><code class="language-python">di = {&quot;Name&quot;: &quot;VIVA&quot;,&quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;: 123}
di.update({&quot;No&quot;:456})
print(di)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'Name': 'VIVA', 'Dept': 'TYCO', 'add': 'Virar', 'No': 456}
</code></pre>
<h3>del</h3>
<p>The del keyword is used delete the dictionary completely</p>
<p><strong>Example:</strong></p>
<pre><code class="language-python">di = {&quot;Name&quot;: &quot;VIVA&quot;, &quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;: 123}
del di
print(di)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>NameError: name 'di' is not defined
</code></pre>]]></description>
  </item>
  <item>
    <title>UT2 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/ut2-6s.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h1>Python QB UT 2</h1>
<h2>1. Explain scope of a variable in Python.</h2>
<ul>
<li>A variable is only available from inside the region it is created.</li>
<li>This is called scope.</li>
<li>There are two types of scopes in Python:</li>
</ul>
<h3>Local scope</h3>
<ul>
<li>A variable created inside a function belongs to the local scope, and can only
be used inside that function.</li>
<li>Example<pre><code class="language-python">def fun()
  x=10 # X is local variable
  print(x)

fun()
</code></pre>
O/P<pre><code>10
</code></pre>
</li>
</ul>
<h3>Global scope</h3>
<ul>
<li>A variable created in the main body of the code is a global variable and
belongs to the global scope.</li>
<li>Global variables are available from within any scope global and local.</li>
<li>Example:<pre><code class="language-python">a = 50 # a is global variable
def fun()
  print(a)

fun()
print(a)
</code></pre>
O/P<pre><code>50
50
</code></pre>
</li>
</ul>
<h2>2. Define class, data hiding, method overloading, inheritance, data abstraction, numpy, pandas.</h2>
<h3>i) <code>class</code></h3>
<ul>
<li>Class is a blueprint for the object.</li>
<li>We define a class by using the keyword class.</li>
<li>Class objects are used to access different attributes.</li>
</ul>
<h3>ii) Data Hiding</h3>
<ul>
<li>Data hiding is one of the important features of Object Oriented Programming
which allows preventing the functions of a program to access directly the
internal representation of a class type.</li>
</ul>
<h3>iii) Method Overloading</h3>
<ul>
<li>Overloading is the ability of a function or an operator to behave in different
ways based on the parameters that are passed to the function, or the operands
that the operator acts on.</li>
</ul>
<h3>iv) Inheritance</h3>
<ul>
<li>Inheritance refers to defining a new class with little or no modification to
an existing class.</li>
<li>The new class is called as derived or child class and the old class is called
as base or parent class.</li>
</ul>
<h3>v) Data Abstraction</h3>
<ul>
<li>Data abstraction refers to providing only essential information about the data
to the outside world and hiding the background details.</li>
</ul>
<h3>vi) Numpy</h3>
<ul>
<li>Numpy is a python package which stands for “Numerical Python”.</li>
</ul>
<h3>vii) Pandas</h3>
<ul>
<li>Pandas is an open source library that allows to perform data manipulation.</li>
<li>Pandas library is built on the top of Numpy.</li>
</ul>
<h2>3. Explain Composition classes with program.</h2>
<ul>
<li>Composition class is composed of one of or more instance of other classes.</li>
<li>In simple words, one class is container and other class is content, if we
delete the container objects then all of its contents objects are also
deleted.<pre><code class="language-python">class test:
  def __init__(self, name, marks):
    self.name = name
    self.marks = marks

class addr:
  def __init__(self, ad, name, marks):
    self.ad = ad
    self.ob = test(name, marks)

  def disp(self):
    print(self.ad, self.ob.name, self.ob.marks)

t = addr(&quot;Virar&quot;, &quot;ABC&quot;, 99)
t.disp()
</code></pre>
O/P<pre><code>Virar ABC 99
</code></pre>
</li>
</ul>
<h2>4. WAP to create a file, write some contents in it and read the content from file.</h2>
<pre><code class="language-python">o = open(&quot;name.txt&quot;, &quot;w&quot;)
o.write(&quot;I am a programmer&quot;)
o.close()
o = open(&quot;name.txt&quot;, &quot;r&quot;)
print(o.read())
o.close()
</code></pre>
<p>O/P</p>
<pre><code>I am a programmer
</code></pre>
<h2>5. WAP to check <code>ZeroDivisionError</code> Exception.</h2>
<pre><code class="language-python">x = int (input(&quot;x:&quot;))
y = int(input(&quot;y:&quot;))

try:
  x/y
except ZeroDivisionError:
  print(&quot;Error: Division by Zero&quot;)
else:
  print(x/y)
</code></pre>
<p>O/P</p>
<pre><code>x: 0
y: 0

Error: Divison by Zero
</code></pre>
<h2>6. WAP to throw an exception if age&lt;18 (using raise).</h2>
<pre><code class="language-python">age = int(input(&quot;Age:&quot;))
try:
  if age &lt; 18:
    raise Exception
except Exception:
  print(&quot;Too small to vote!!&quot;)
else:
  print(&quot;You can vote!!&quot;)
</code></pre>
<h2>7. List different modes of opening file.</h2>
<p>Following are the different modes of opening file:</p>
<ul>
<li><code>r</code></li>
<li><code>rb</code></li>
<li><code>r+</code></li>
<li><code>rb+</code></li>
<li><code>w</code></li>
<li><code>wb</code></li>
<li><code>wb</code></li>
<li><code>w+</code></li>
<li><code>wb+</code></li>
</ul>
<h2>8. WAP to create class animal having method feed that prints ‘I eat food’. It has a sub class herbivorous having method feed that prints “I eat only plants”. Call the method by creating an object of each of the classes.</h2>
<pre><code class="language-python">class animal:
  def feed(self):
    print(&quot;I eat food&quot;)

class herbivorous(animal):
  def feed(self):
    print(&quot;I eat only plants&quot;)

a = animal()
a.feed()
h = herbivorous()
h.feed()
</code></pre>
<h2>9. WAP to create base classes namely add, mul having method addition and multiplication that prints addition and multiplication respectively. Derive a class derived from add and mul that has method divide and returns division. Create object and call methods.</h2>
<pre><code class="language-python">class add:
  def addition(self, a, b):
    self.a = a
    self.b = b
    print(self.a + self.b)

class mul:
  def multiplication(self, a, b):
    self.a = a
    self.b = b
    print(self.a * self.b)

class derived(add, mul):
  def divide(self, a, b)
    self.a = a
    self.b = b
    return self.a / self.b

d = derived()
print(d.divide(28, 4))
d.multiplication(2, 4)
d.addition(5, 6)
</code></pre>
<p>O/P</p>
<pre><code>7.0
8
11
</code></pre>
<h2>10. WAP to implement multilevel inheritance.</h2>
<pre><code class="language-python">class Student:
  def accept(self):
    self.roll = 10

class Test(Student):
  def getdata(self):
    self.name = &quot;ABC&quot;

class Result(Test):
  def info(self):
    self.marks = 99
  def disp(self):
    print(self.roll, self.name, self.marks)

r = result()
r.accept()
r.getdata()
r.info()
r.disp()
</code></pre>
<p>O/P</p>
<pre><code>10 ABC 99
</code></pre>
<h2>11. Create a 3x4 matrix of random values using numpy and perform following:</h2>
<ol>
<li>print type of array</li>
<li>print dimension</li>
<li>print shape</li>
<li>print size</li>
<li>print type of elements</li>
<li>sort row wise</li>
<li>print min, max, sum, flatten</li>
</ol>
<pre><code class="language-python">import numpy as n

p = n.random.randint(30, size = (3, 3))
print(p)
print(type(p))
print(p.ndim)
print(p.shape)
print(p.size)
print(n.dtype)
print(n.sort(p))
pritt(p.min())
print(p.max())
print(sum(p))
print(p.flatten())
</code></pre>
<p>O/P</p>
<pre><code>[[10, 20, 21]
 [14, 15, 13]
 [23, 24, 29]]
&lt;class 'numpy.ndarray'&gt;
2
(3, 3)
9
int64
[[10, 20, 21]
 [13, 14, 15]
 [23, 24, 29]]
10
29
[51 42 76]
[10 20 21 14 15 13 23 24 29]
</code></pre>
<h2>12. WAP that accepts a string and calculate the number of upper and lower case letters (string=&quot;Viva College)</h2>
<pre><code class="language-python">c = input(&quot;Enter string.&quot;)
u = 0
i = 0

for i in c:
  if (i.isupper()):
    u += 1
  if (i.islower()):
    i += 1

print(&quot;Upper case letters are&quot;, u)
print(&quot;Lower case letters are&quot;, i)
</code></pre>
<h2>13. WAP to generate a random float where the value is between 5 and 50</h2>
<pre><code class="language-python">import random
a = random.uiform(5, 50)
print(a)
</code></pre>
<p>O/P</p>
<pre><code>20.80854522266047
</code></pre>
<h2>14. Plot a line from position (10, 33) to position (80, 65) with following:</h2>
<ol>
<li>marker - 0</li>
<li>line-dotted, line color-red</li>
<li>x-label: student, y-label marks.</li>
<li>Add grid lines</li>
</ol>
<pre><code class="language-python">import matplotlib.pylot as p
import numpy as n

x = n.array([10, 33])
y = n.array([80, 64])

p.xlabel(&quot;Student&quot;)
p.ylable(&quot;Marks&quot;)
p.plot(x, y, marker = 'o', linestyle = 'dotted', color = 'r')
p.grid()
p.show()
</code></pre>
<h2>15. WAP to print 3x3 matrix with o at border and I inside.</h2>
<pre><code class="language-python">import numpy as n
a = n.zeros((3, 3))
a[1:-1, 1:-1] = 1
print(a)
</code></pre>
<p>O/P</p>
<pre><code>[[0. 0. 0.]
 [0. 1. 0.]
 [0. 0. 0.]]
</code></pre>
<h2>16. WAP to create matrix with values 2-10.</h2>
<pre><code class="language-python">import numbpy as n
a = n.arange(2, 11).reshape(3, 3)
print(a)
</code></pre>
<p>O/P</p>
<pre><code>[[2 3 4]
 [5 6 7]
 [8 9 10]]
</code></pre>
<h2>17. Explain Exception Handling in python.</h2>
<ul>
<li>When we executes a Python program, there may be a few uncertain conditions
which occur, known as errors. Errors also referred to as bugs that are
incorrect or inaccurate action that may cause the problems in the running of
the program of program or may interrupt the execution of program.</li>
<li>There are three types of error:
<ul>
<li>i) Compile Time Errors.</li>
<li>ii) Run Time Errors.</li>
<li>iii) Logical Errors.</li>
</ul>
</li>
<li>Errors occured at runtime are known as exception. Exception handling is a
feature that is used for handling any unreported errors in program.</li>
<li>By handling the exceptions, we can provide a meaningful message to the user
about the problem rather than system generated error message, which may not be
understandable to the user.</li>
<li>Exception can be either built-in exception or user defined exceptions.</li>
</ul>]]></description>
  </item>
  <item>
    <title>Finals</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/finals.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h1>Python</h1>
<h2>a) Name different modes of Python.</h2>
<p>Python has two basic modes:</p>
<ol>
<li>Script mode (or Normal mode)</li>
</ol>
<ul>
<li>The mode where the scripted and finished .py files are in the Python
Interpreter.</li>
</ul>
<ol start="2">
<li>Interactive mode</li>
</ol>
<ul>
<li>A command line shell which gives immediate feedback for each statement,
while running previously fed statements in active memory.</li>
</ul>
<h2>b) List identity Operators</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>is</td>
<td>Returns <code>True</code> if both variables are sames object</td>
<td>x is y</td>
</tr>
<tr>
<td>is not</td>
<td>Returns <code>False</code> if both variables are sames object</td>
<td>x is not y</td>
</tr>
</tbody>
</table>
<h2>c) Give two differences between list and tuple.</h2>
<h3>List</h3>
<ul>
<li>Lists are mutable.</li>
<li>The list is better for performing operations.</li>
<li>Lists consume more memory.</li>
<li>More likely error will occur.</li>
</ul>
<h3>Tuple</h3>
<ul>
<li>Tuples are immutable.</li>
<li>The implication of iterations is faster.</li>
<li>Tuple consume less memory.</li>
<li>Less likely error will occur.</li>
</ul>
<h2>d) Explain Local and Global variable.</h2>
<table>
<thead>
<tr>
<th>Local</th>
<th>Global</th>
</tr>
</thead>
<tbody>
<tr>
<td>It is declare  inside a function</td>
<td>It is declared outside the function</td>
</tr>
<tr>
<td>It is created when the function starts execution and lost when the function terminate.</td>
<td>It is created before the program’s global execution starts and lost when the program terminates.</td>
</tr>
<tr>
<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>
<td>You can access global variables by any statement in the program.</td>
</tr>
<tr>
<td>Parameters passing is required for local variables to access the value in other function.</td>
<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>
</tr>
</tbody>
</table>
<h2>e) Define class and object in python.</h2>
<h3>Class</h3>
<ul>
<li>Class is a blueprint for the object.</li>
<li>We define a class by using the keyword class.</li>
<li>Class objects are used to access different attributes.</li>
</ul>
<h3>Object</h3>
<ul>
<li>Classes are the user-defined blueprints that help us create an “object”.</li>
<li>Objects are the instances of a particular class.</li>
<li>Every other element in Python will be an object of some class, such as the string, dictionary, number(10,40), etc.</li>
</ul>
<h2>f) How to give single and multiline comment in python.</h2>
<h3>Single-Line</h3>
<ul>
<li>Add the hash (#) symbol before the comment:</li>
</ul>
<pre><code class="language-python"># This is your comment
</code></pre>
<h3>Multiline</h3>
<p>-Python will ignore string literals that are not assigned to a variable, you can add a multiline string (triple quotes) in your code, and place your comment inside it:</p>
<pre><code class="language-python">&quot;&quot;&quot;
This is a comment
written in
more than just one line
&quot;&quot;&quot;
</code></pre>
<h2>g) List different modes of opening file in python.</h2>
<p>There are four different methods modes for opening a file:</p>
<ul>
<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>
<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not
exist.</li>
<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>
<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not
exist.</li>
</ul>
<p>In addition, the file should be handled as binary or text mode:</p>
<ul>
<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>
<li>b - Binary - Binary mode (e.g. images).</li>
</ul>
<h2>a) Write a program to print following:</h2>
<pre><code class="language-python">rows = int(input(&quot;Enter number of rows: &quot;))

for i in range(rows):
    for j in range(i+1):
        print(j+1, end=&quot; &quot;)
    print(&quot;\n&quot;)
</code></pre>
<h2>b) Explain four Buit-in tuple functions python with example.</h2>
<ul>
<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>
<li><code>max()</code> - Highest value will returned.</li>
<li><code>min()</code> - Lowest value be returned.</li>
<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>
</ul>
<h2>Explain how to use user defined function in python with example.</h2>
<p>In Python, a user-defined function’s declaration begins with the keyword def and followed by the function name.</p>
<pre><code class="language-python">def printt():
    print(&quot;This is Python 3.2 Tutorial&quot;)
    print(&quot;This is Python 3.2 Tutorial&quot;)
    print(&quot;This is Python 3.2 Tutorial&quot;)
printt()
</code></pre>
<p>Output:</p>
<pre><code>This is Python 3.2 Tutorial
This is Python 3.2 Tutorial
This is Python 3.2 Tutorial
</code></pre>
<h2>d) Write a program to create class EMPLOYEE with ID and NAME and display its contents.</h2>
<pre><code class="language-python">class Employee:
	name = &quot;&quot;
	department = &quot;&quot;
	salary = 0

	def setData(self):
		self.name = input(&quot;Enter Name: &quot;)
		self.department = input(&quot;Enter Department: &quot;)
		self.salary = int(input(&quot;Enter Salary: &quot;))

	def showData(self):
		print(&quot;Name:&quot;, self.name)
		print(&quot;Department:&quot;, self.department)
		print(&quot;Salary:&quot;, self.salary)

e = Employee()
e.setData()
e.showData()
</code></pre>
<p>Output:</p>
<pre><code>Enter Name: Jonney
Enter Department: Testing
Enter Salary: 20000
Name: Jonney
Department: Testing
Salary: 20000
</code></pre>
<h2>List Data types used in python. Explain any two with example.</h2>
<p>Thare are three data type in python numbers, string &amp; boolean.</p>
<h3>String</h3>
<ul>
<li>String is a collection of group of characters.</li>
<li>String are identified as a contiguous set of characters enclosed in single quotes(’ ') or double quotes(&quot; &quot;).</li>
<li>String can also can be define with str() function.</li>
</ul>
<h3>Boolean</h3>
<ul>
<li>Boolean represents the two values namely False and True.</li>
<li>The true value is represented true as 1 and false as 0.</li>
</ul>
<h2>b) Explain membership and assignment operators with example.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>in</td>
<td>True if value in list or in sequence</td>
<td>(‘H’ in x) is True</td>
</tr>
<tr>
<td>not in</td>
<td>False if value not in list or in sequence</td>
<td>(‘H’ in x) is False</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Operator</th>
<th style="text-align:center">Description</th>
<th>Syntax</th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td style="text-align:center">Assign value of right side of expression to left side operand</td>
<td>x = y + z</td>
</tr>
<tr>
<td>+=</td>
<td style="text-align:center">Add and Assign: Add right side operand with left side operand and then assign to left operand</td>
<td>a += b</td>
</tr>
<tr>
<td>-=</td>
<td style="text-align:center">Subtract AND: Subtract right operand from left operand and then assign to left operand: True if both operands are equal</td>
<td>a -= b</td>
</tr>
<tr>
<td>*=</td>
<td style="text-align:center">Multiply AND: Multiply right operand with left operand and then assign to left operand</td>
<td>a *= b</td>
</tr>
</tbody>
</table>
<h2>c) Explain indexing and slicing in list with example.</h2>
<ul>
<li>“Indexing” means referring to an element of an iterable by its position within the iterable.</li>
<li>“Slicing” means getting a subset of elements from an iterable based on their indices.</li>
</ul>
<h2>d) Write a program for importing module for addition and substraction of two numbers.</h2>
<pre><code class="language-python">a = int(input(&quot;Enter first number: &quot;))
b = int( input(&quot;Enter second number: &quot;))
Sum = a+b; #Add two numbers
Difference = a-b; #Subtract two numbers
# To print the result
print(&quot;Addition of two numbers = &quot;,Sum)
print(&quot;Subtraction of two numbers = &quot;,Difference)
</code></pre>
<p>Output:</p>
<pre><code>Output:
Enter first number: 30
Enter second number: 20
Addition of two numbers = 50
Subtraction of two numbers = 10
</code></pre>
<h2>a) Write a program to create dictionary of students that includes their ROLL NO. and NAME:</h2>
<p>i) Add three students in above dictionary
ii) Update name= ‘Shreyas’ of ROLL NO = 2
iii) Delete information of ROLL NO = 1</p>
<pre><code class="language-python">students = {
  1: &quot;ronney&quot;,
  2: &quot;jay&quot;
}

students[2] = &quot;Shreyas&quot;
del students[1]
print(students)
</code></pre>
<p>Output:</p>
<pre><code>{ 2: &quot;Shreyas&quot; }
</code></pre>
<h2>b) Explain decision making statements If-else, if-elif-else with example.</h2>
<p>The if…elif…else statement is used in Python for decision making.</p>
<pre><code class="language-python">num = 3.4

if num &gt; 0:
    print(&quot;Positive number&quot;)
elif num == 0:
    print(&quot;Zero&quot;)
else:
    print(&quot;Negative number&quot;)
</code></pre>
<h2>c) Explain use of format () method with example.</h2>
<p>Python format() function has been introduced for handling complex string formatting more efficiently.</p>
<pre><code class="language-python">txt = &quot;I have {an:.2f} Ruppes!&quot;
print(txt.format(an = 4))
</code></pre>
<p>Output:</p>
<pre><code>I have 4.00 Ruppes!
</code></pre>
<h2>d) Explain building blocks of python.</h2>
<ul>
<li>The core data structures to learn in Python are List (list), Dictionary (dict), Tuple (tuple), and Set (set).</li>
<li>To indicate a block of code in Python, you must indent each line of the block by the same amount.</li>
</ul>
<h2>e) Write a program illustrating use of user defined package in python.</h2>
<p>Packages are a way of structuring many packages and modules which helps in a well-organized hierarchy of data set, making the directories and modules easy to access.</p>
<p><a href="http://file1.py/">file1.py</a>:</p>
<pre><code class="language-python">class Bmw:
    # First we create a constructor for this class
    # and add members to it, here models
    def __init__(self):
        self.models = ['i8', 'x1', 'x5', 'x6']

    # A normal print function
    def outModels(self):
        print('These are the available models for BMW')
        for model in self.models:
            print('\t%s ' % model)
</code></pre>
<p><a href="http://file2.py/">file2.py</a></p>
<pre><code class="language-python">from Bmw import Bmw
</code></pre>
<h2>Write the output of the following:</h2>
<pre><code>&gt;&gt;&gt; a = [2, 5, 1, 3, 6, 9, 7]
&gt;&gt;&gt; a[2:6] = [2, 4, 9, 0]
&gt;&gt;&gt; print (a)
</code></pre>
<p>Ans:</p>
<pre><code>[2, 5, 2, 4, 9, 0, 7]
</code></pre>
<pre><code>b = [&quot;Hello&quot;, &quot;Good&quot;]
b.append(&quot;python&quot;)
print (b)
</code></pre>
<p>Ans:</p>
<pre><code>['Hello', 'Good', 'python']
</code></pre>
<pre><code>t1 = [3, 5, 6, 7]
print (t1[2])
print (t1[-1])
print (t1[2:])
print(t1[:])
</code></pre>
<p>Ans:</p>
<pre><code>6
7
[6, 7]
[3, 5, 6, 7]
</code></pre>
<h2>Explain method overloading in python with example.</h2>
<ul>
<li>overloading is the ability of a function or an operator to behave in different ways based on the parameters that are passed to the function, or the operands that the operator acts on.</li>
</ul>
<pre><code class="language-python">class A:
    def __init__(self, a):
        self.a = a

    # adding two objects
    def __add__(self, o):
        return self.a + o.a
ob1 = A(1)
ob2 = A(2)
ob3 = A(&quot;Geeks&quot;)
ob4 = A(&quot;For&quot;)

print(ob1 + ob2)
print(ob3 + ob4)
</code></pre>
<h2>Write a program to open a file in write mode and some contents at the end of file.</h2>
<pre><code class="language-python">o = open(&quot;name.txt&quot;, &quot;w&quot;)
o.write(&quot;I am a programmer&quot;)
o.close()
o = open(&quot;name.txt&quot;, &quot;r&quot;)
print(o.read())
o.close()
</code></pre>
<p>O/P</p>
<pre><code>I am a programmer
</code></pre>
<h2>a) Explain package Numpy with example.</h2>
<ul>
<li>Numpy is a python package which stands for “Numerical Python”.</li>
</ul>
<pre><code class="language-python">import numpy as n
a=n.ones((3, 3))
a[1:-1,1:-1]=0
print(a)
</code></pre>
<p>Output:</p>
<pre><code>[[1. 1. 1.]
 [1. 0. 1.]
 [1. 1. 1.]]
</code></pre>
<h2>6) Write a program to implement the concept of inheritance in python.</h2>
<pre><code class="language-python">class Parent:
	parentname = &quot;&quot;
	childname = &quot;&quot;
	def show_parent(self):
		print(self.parentname)

class Child(Parent):
	def show_child(self):
		print(self.childname)

c = Child()
c.parentname = &quot;Arati&quot;
c.childname = &quot;Purva&quot;
c.show_parent()
c.show_child()
</code></pre>
<h2>c) Explain Try-except block used in exception handling in python with example.</h2>
<ul>
<li>When an exception occurs, Python will normally stop and generate an error message.</li>
<li>These exceptions can be handled using the try statement.</li>
<li>The except block lets you handle the error.</li>
</ul>
<pre><code class="language-python">try:
  print(x)
except NameError:
  print(&quot;Variable x is not defined&quot;)
</code></pre>]]></description>
  </item>
  <item>
    <title>Sample Paper 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/sample-paper-6s.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h2>Q1 Any FIVE</h2>
<h3>a. Name different modes of Python.</h3>
<p>Python has two basic modes:</p>
<ol>
<li>Script mode (or Normal mode)
<ul>
<li>The mode where the scripted and finished .py files are in the Python
Interpreter.</li>
</ul>
</li>
<li>Interactive mode
<ul>
<li>A command line shell which gives immediate feedback for each statement,
while running previously fed statements in active memory.</li>
</ul>
</li>
</ol>
<h3>b. List identity Operators</h3>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>is</td>
<td>Returns <code>True</code> if both variables are sames object</td>
<td>x is y</td>
</tr>
<tr>
<td>is not</td>
<td>Returns <code>False</code> if both variables are sames object</td>
<td>x is not y</td>
</tr>
</tbody>
</table>
<h3>c. Describe Dictionary</h3>
<ul>
<li>A dictionary is collection which is unordered, changeable and indexed.</li>
<li>Dictionaries are written with curl brackets, and they have keys and values.</li>
<li>Example:<pre><code class="language-python">company = {
	&quot;name&quot;: &quot;Apple&quot;,
	&quot;product&quot;: &quot;IPhone&quot;
	&quot;model&quot;: &quot;11&quot;
}
</code></pre>
</li>
</ul>
<h3>d. State use of namespace in Python</h3>
<ul>
<li>A namespace is a simple system to control the names in a program.</li>
<li>Python implements namespaces in the form of dictionaries.</li>
<li>It maintains a name-to-object mapping where names act as keys and the objects
as values.</li>
</ul>
<h3>e. List different object oriented features supported by Python.</h3>
<ul>
<li>Python OPP Concepts
<ol>
<li>Object</li>
<li>Class</li>
<li>Method</li>
<li>Inheritance</li>
<li>Polymorphism</li>
<li>Data Abstraction</li>
<li>Encapsulation</li>
</ol>
</li>
</ul>
<h3>f. Write steps involved in creation of a user defined exception?</h3>
<ul>
<li>Exception can be define by creating a new class.</li>
<li>This exception class has to be derived, either directly or indirectly, from the built-in <code>Exception</code>.</li>
<li>When the programmer suspects the possibility of exception, he should raise his
own exception using <code>raise</code>.</li>
<li>The programmer can insert the code inside a <code>try</code> block.</li>
<li>Catch the exception using <code>except</code> block.</li>
<li>Example:<pre><code class="language-python">class Error(Exception):
	print(&quot;Value can't be 0.&quot;)

number = 0

try:
	if number == 0:
		raise Error
	else:
		print(&quot;Value is more then 0.&quot;)
except Error:
	pass
</code></pre>
</li>
<li>Output:<pre><code>Value can't be 0.
</code></pre>
</li>
</ul>
<h3>g. Describe Python Interpreter</h3>
<ul>
<li>Python interpreter converts the code written in Python language by users to
language which computer hardware or system can understand.</li>
<li>Python interpreter is a bytecode interpreter, its input is instruction set
sets called bytecode.</li>
</ul>
<h3>h. List features of Python</h3>
<ul>
<li>Easy to code</li>
<li>High Level programming language</li>
<li>Object-Oriented Language</li>
<li>Portable language</li>
<li>Use interpreter</li>
<li>GUI Support</li>
</ul>
<h2>Q2 Any THREE</h2>
<h3>a. Explain two Membership and two logical operators in python with appropriate examples.</h3>
<h4>Membership Operators</h4>
<ul>
<li>Membership operators are used to test whether a value is found within a
sequence.</li>
<li>Example of <code>in</code>:<pre><code class="language-python">x = 4
y = 8
list = [1, 2, 3, 4, 5]

if (x in list):
	print(&quot;X is in list array&quot;)
else:
	print(&quot;X is not in list array&quot;)
</code></pre>
Output:<pre><code>X is in list array
</code></pre>
</li>
<li>Example of <code>not in</code>:<pre><code class="language-python">if (y not in list):
	print(&quot;Y is not in list array&quot;)
else:
	print(&quot;Y is in list array&quot;)
</code></pre>
Output:<pre><code>Y is not in list array
</code></pre>
</li>
</ul>
<h4>Logical Operators</h4>
<ul>
<li>Logical operators are usedto perform locical operations on the values of
variables. The value is either <code>true</code> or <code>false</code></li>
<li>Example of <code>and</code>, <code>or</code> and <code>not</code>.<pre><code class="language-python">a = True
b = False
print('a and b is', a and b)
print('a or b is', a or b)
print('not a is', not a)
</code></pre>
<pre><code>a and b is False
a or b is True
a not b is False
</code></pre>
</li>
</ul>
<h3>b. Describe any four methods of lists in Python</h3>
<ul>
<li><code>append()</code> - Adds an element at the end of the list.</li>
<li><code>pop()</code> - Removes the element at the specified position.</li>
<li><code>sort()</code> - Sorts the list</li>
<li><code>clear()</code> - Removes all the elements from the list.
Example:</li>
</ul>
<pre><code class="language-python">fruits = ['apple', 'banana', 'cherry']

fruits.append(&quot;orange&quot;)
print(fruits)

fruits.pop(1)
print(fruits)

fruits.sort()
print(fruits)

fruits.clear()
print(fruits)
</code></pre>
<p>Output:</p>
<pre><code>['apple', 'banana', 'cherry', 'orange']
['apple', 'cherry', 'orange']
['apple', 'cherry', 'orange']

</code></pre>
<h3>c. Comparing between local and global variable</h3>
<table>
<thead>
<tr>
<th>Local</th>
<th>Global</th>
</tr>
</thead>
<tbody>
<tr>
<td>It is declare  inside a function</td>
<td>It is declared outside the function</td>
</tr>
<tr>
<td>It is created when the function starts execution and lost when the function terminate.</td>
<td>It is created before the program’s global execution starts and lost when the program terminates.</td>
</tr>
<tr>
<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>
<td>You can access global variables by any statement in the program.</td>
</tr>
<tr>
<td>Parameters passing is required for local variables to access the value in other function.</td>
<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>
</tr>
</tbody>
</table>
<h3>d. Write a Python program to print Fibonacci series up to n terms</h3>
<p>Example:</p>
<pre><code class="language-python">term = int(input(&quot;Enter the term: &quot;))

n1, n2 = 0, 1

if term &lt; 0:
	print(&quot;Invalid term&quot;)
else:
	for i in range(term):
		print(n1)
		nth = n1 + n2
		n1 = n2
		n2 = nth
</code></pre>
<p>Output:</p>
<pre><code>Enter the term: 7
0
1
1
2
3
5
8
</code></pre>
<h2>Q3 Any THREE</h2>
<h3>a. Write a program to input any two and interchange the tuple variable.</h3>
<p>Example:</p>
<pre><code>a = (1, 2, 3, 4, 5)
b = (13, 23, 36, 47, 75)

a,b = b,a

print(a)
print(b)
</code></pre>
<p>Output:</p>
<pre><code>(13, 23, 36, 47, 75)
(1, 2, 3, 4, 5)
</code></pre>
<h3>b. Explain different loops available in python with suitable examples.</h3>
<h4><code>while</code></h4>
<p>A <code>while</code> loop executes a target statement as long as given condition is true.</p>
<p>Syntax:</p>
<pre><code>while expression: statement(s)
</code></pre>
<p>Example:</p>
<pre><code class="language-python">count = 0

while(count &lt; 5):
	print(count)
	count += 1

print(&quot;over&quot;)
</code></pre>
<p>Output:</p>
<pre><code>0
1
2
3
4
over
</code></pre>
<h4><code>for loop</code></h4>
<p>It has the ability to iterate over the items of any sequence, such as a list or
a string.</p>
<p>Syntax:</p>
<pre><code>for iterating in sequence: statements(s)
</code></pre>
<p>Example:</p>
<pre><code class="language-python">fruits = ['banana', 'apple', 'mango']

for fruit in fruits:
	print(fruit)

print(&quot;over&quot;)
</code></pre>
<p>Output:</p>
<pre><code>banana
apple
mango
over
</code></pre>
<h4>Nested loops</h4>
<p>Python programming language allows to use one loop inside another loop.</p>
<p>Syntax:</p>
<pre><code>for iterating in sequence:
	for iterating in sequence:
		statements(s)
	statements(s)
</code></pre>
<p>Example:</p>
<pre><code class="language-python">nums = [1, 2, 3]
words = [&quot;hello&quot;, &quot;hi&quot;, &quot;bye&quot;]

for num in nums:
	print(num)

	for word in words:
		print(word)
</code></pre>
<p>Output:</p>
<pre><code>1
hello
hi
bye
2
hello
hi
bye
3
hello
hi
bye
</code></pre>
<h3>c. Describe various modes of file object? Explain any two in detail.</h3>
<p>There are four different methods modes for opening a file:</p>
<ul>
<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>
<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not
exist.</li>
<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>
<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not
exist.</li>
</ul>
<p>In addition, the file should be handled as binary or text mode:</p>
<ul>
<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>
<li>b - Binary - Binary mode (e.g. images).</li>
</ul>
<h4>Read a file</h4>
<p>The <code>read()</code> method and <strong>r</strong> mode is used to read files.
Before read a file, the file must open using <code>open()</code> function.</p>
<p><code>text.txt</code> file content:</p>
<pre><code class="language-txt">Hello World
</code></pre>
<p>Program:</p>
<pre><code class="language-python">f = open(&quot;text.txt&quot;, &quot;r&quot;)
print(f.read())
</code></pre>
<p>Output:</p>
<pre><code>Hello world
</code></pre>
<h4>Write a file</h4>
<p>The <code>write()</code> method and <code>a</code> or <code>w</code> modes is used to write files.</p>
<p>Program:</p>
<pre><code class="language-python">f = open(&quot;text.txt&quot;, &quot;w&quot;)
f.write(&quot;Hello World&quot;)
f.close()
</code></pre>
<p><code>text.txt</code> file content:</p>
<pre><code>Hello World
</code></pre>
<h3>d. Illustrate the use of method overriding? Explain with example</h3>
<p>If a class inherits a method from its superclass, then there is a chance to
override the method provided.
Example:</p>
<pre><code class="language-python">class Parent:
	def echo(self):
		print('I am from Parent class.')

class Child(Parent):
	def echo(self):
		print('I am from Child class.')

p = Parent()
c = Child()

p.echo()
c.echo()
</code></pre>
<p>Output:</p>
<pre><code>I am from Parent class.
I am from Child class.
</code></pre>
<h2>Q4 Any THREE</h2>
<h3>a. Use of any four methods of tuple in Python?</h3>
<ul>
<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>
<li><code>max()</code> - Highest value will returned.</li>
<li><code>min()</code> - Lowest value be returned.</li>
<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>
</ul>
<p>Example:</p>
<pre><code class="language-python">t = (12, 45, 43, 8, 35, 12)
print(len(t))
print(max(t))
print(min(t))
print(t1.count(12))
</code></pre>
<p>Output:</p>
<pre><code>6
45
8
2
</code></pre>
<h3>b. Write a python Program to read contents of first.txt and write same content in second.txt file</h3>
<p><code>first.txt</code> file content:</p>
<pre><code>Hello World
</code></pre>
<p>Program:</p>
<pre><code class="language-python">with open('first.txt', 'r') as firstfile, open('second.txt', 'a') as secondfile:

	for line in firstfile:
		secondfile.write(line)
</code></pre>
<p><code>second.txt</code> file content:</p>
<pre><code>Hello world
</code></pre>
<h3>c. Show how try…except block is used for exception handling in Python with example.</h3>
<ul>
<li>When an exception occurs, Python will normally stop and generate an error
message.</li>
<li>These exceptions can be handled using the <code>try</code> statement.</li>
<li>The <code>except</code> block lets you handle the error.</li>
<li>Syntax:<pre><code class="language-python">try:
	# Code
except:
	# Code
</code></pre>
</li>
<li>Example:<pre><code class="language-python">try:
	print(x)
except NameError:
	print(&quot;Variable x is not defined&quot;)
</code></pre>
</li>
<li>Output:<pre><code>Variable x is not defined.
</code></pre>
</li>
</ul>
<h3>d. Write the output for the following if the variable fruit = “banana”</h3>
<pre><code>&gt;&gt;&gt; fruit[:3]
&gt;&gt;&gt; fruit[3:]
&gt;&gt;&gt; fruit[3:3]
&gt;&gt;&gt; fruit[:]
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; fruit = &quot;banana&quot;
&gt;&gt;&gt; fruit[:3]
'ban'
&gt;&gt;&gt; fruit[3:]
'ana'
&gt;&gt;&gt; fruit[3:3]
''
&gt;&gt;&gt; fruit[:]
'banana'
</code></pre>
<h2>Q5 Any TWO</h2>
<h3>a. Determine various data types available in Python with example.</h3>
<h4>Numbers</h4>
<ul>
<li><code>int</code>, <code>float</code> and complex numbers fall under numbers category.</li>
<li>Example:<pre><code class="language-python">a = 5
a = 2.0
a = 1+2j
</code></pre>
</li>
</ul>
<h4>String</h4>
<ul>
<li>String is sequence of Unicode characters.</li>
<li>We can use single quotes or double quotes to represent strings.</li>
<li>Multi-line string can be denoted using triple quotes <code>'''</code> or <code>&quot;&quot;&quot;</code>.</li>
<li>Example:<pre><code class="language-python">s = &quot;This is string&quot;
s = '''
	A multi line string
'''
</code></pre>
</li>
</ul>
<h4>List</h4>
<ul>
<li>List is an ordered sequence of items.</li>
<li>It is one of the most used datatype in Python.</li>
<li>List is very flexible.</li>
<li>All the items in a list don not need to be the same type.</li>
<li>Example:<pre><code class="language-python">a = [1, 2.2, 'python']
</code></pre>
</li>
</ul>
<h4>Tuple</h4>
<ul>
<li>Tuple is an ordered sequence of items same as a list.</li>
<li>The only difference is that tuples are immutable.</li>
<li>Tuples once created cannot be modified.</li>
<li>Example:<pre><code class="language-python">t = (5, 'program', 1+3j)
</code></pre>
</li>
</ul>
<h4>Set</h4>
<ul>
<li>Set is an unordered collection of unique items.</li>
<li>Set is defined by values separated by comma inside braces { }.</li>
<li>Items in a set are not ordered</li>
<li>Example:<pre><code class="language-python">a = {5,2,3,1,4}
</code></pre>
</li>
</ul>
<h4>Dictionary</h4>
<ul>
<li>Dictionary is an unordered collection of key-value pairs.</li>
<li>It is generally used when we have a huge amount of data.</li>
<li>Dictionaries are defined within braces <code>{}</code>.</li>
<li>Example:<pre><code class="language-python">d = {1:'value','key':2}
</code></pre>
</li>
</ul>
<h3>b. Write a python program to calculate factorial of given number using function.</h3>
<p>Example:</p>
<pre><code class="language-python">n = int(input(&quot;Enter the number: &quot;))
f = 1

for i in range(1, n + 1):
	f = f * 1

print(f)
</code></pre>
<p>Output:</p>
<pre><code>Enter the number: 6
720
</code></pre>
<h3>c. Show the output for the following:</h3>
<pre><code>&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = [4, 5, 6]
&gt;&gt;&gt; c = a + b
&gt;&gt;&gt; print(c)
[1, 2, 3, 4, 5, 6]
</code></pre>
<pre><code>&gt;&gt;&gt; [1, 2, 3] * 3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
</code></pre>
<pre><code>&gt;&gt;&gt; t = ['a', 'b', 'c', 'd', 'e', 'f']
&gt;&gt;&gt; t[1:3] = ['x', 'y']
&gt;&gt;&gt; print(t)
['a', 'x', 'y', 'd', 'e', 'f']
</code></pre>
<h2>Q6 Any TWO</h2>
<h3>a. Describe Set in python with suitable examples.</h3>
<h4>Creating a set</h4>
<p>Set can be created using curly braces <code>{}</code> or using <code>set()</code> method.</p>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry'}
fruits = set(['apple', 'banana', 'cherry'])
</code></pre>
<h4>Adding items to the set</h4>
<p>Item can added using <code>add()</code> method.</p>
<p>Example:</p>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry'}
fruits.add('orange')
print(fruits)
</code></pre>
<p>Output:</p>
<pre><code>{'apple', 'banana', 'cherry', 'orange'}
</code></pre>
<h4>Removing items from the set</h4>
<p>There three methods to remove sets:</p>
<ul>
<li><code>discard()</code> - removes given items from set.</li>
<li><code>remove()</code> - removes given item from set. If item is not avaliable it will
give error.</li>
<li><code>pop()</code> - removes list item from the set.</li>
</ul>
<p>Example:</p>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry', 'orange'}
fruits.discard(&quot;apple&quot;)
fruits.remove(&quot;banana&quot;)
fruits.pop()
print(fruits)
</code></pre>
<p>Output:</p>
<pre><code>{'cherry'}
</code></pre>
<h4>Comparison of set</h4>
<ul>
<li><code>|</code> - shows the union of two set.</li>
<li><code>&amp;</code> - shows the intersection of two set.</li>
<li><code>-</code> - shows the difference of two set.</li>
<li><code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code> - comparison operators can also be use in set.</li>
</ul>
<pre><code class="language-python">fruits = {'apple', 'banana', 'cherry'}
fruits2 = {'orange', 'pineapple', 'apple'}

print(fruits|fruits2)
print(fruits&amp;fruits2)
print(fruits-fruits2)
print(fruits&gt;fruits2)
print(fruits&lt;fruits2)
print(fruits==fruits2)
</code></pre>
<p>Output:</p>
<pre><code>{'apple', 'banana', 'cherry', 'orange', 'pineapple', 'apple'}
{'apple'}
{'banana', 'cherry', 'orange', 'pineapple'}
False
False
True
</code></pre>
<h3>b. Illustrate class inheritance in Python with an example</h3>
<h4>Simple Inheritance</h4>
<p>In inheritance, the child class acquires the properties and access all the data
members and function defined in the parent class.</p>
<p>Illustration:</p>
<pre><code> ┏━━━━━━━━━━┓
 ┃Base Class┃
 ┗━━━━━━━━━━┛
      ⇑
┏━━━━━━━━━━━━┓
┃Deived Class┃
┗━━━━━━━━━━━━┛
</code></pre>
<p>Syntax:</p>
<pre><code class="language-python">class Base:
	# Body of base class
class Derived(Base):
	# Body of derived class
</code></pre>
<p>Example:</p>
<pre><code class="language-python">class Parent:
	parentname = &quot;&quot;
	childname = &quot;&quot;
	def show_parent(self):
		print(self.parentname)

class Child(Parent):
	def show_child(self):
		print(self.childname)

c = Child()
c.parentname = &quot;Arati&quot;
c.childname = &quot;Purva&quot;
c.show_parent()
c.show_child()
</code></pre>
<p>Output:</p>
<pre><code>Arati
Purva
</code></pre>
<h4>Multiple inheritance</h4>
<p>Multiple inheritace means that you’re inheriting the property of multiple
classes into one.</p>
<p>Illustration:</p>
<pre><code>┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓
┃Base Class 1┃┃Base Class 2┃┃Base Class 3┃
┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛
     ┃              ┃             ┃
     ┗━━━━━━━━━━━━━━╋━━━━━━━━━━━━━┛
              ┏━━━━━━━━━━━━┓
              ┃Deived Class┃
              ┗━━━━━━━━━━━━┛
</code></pre>
<p>Syntax:</p>
<pre><code class="language-python">class A:
	# variable of class A
class B:
	# variable of class B
class C(A, B):
	# variable of class C
</code></pre>
<p>Example:</p>
<pre><code class="language-python">class Parent1:
	def echo(self):
		print(&quot;Parent class 1&quot;)

class Parent2:
	def echo2(self):
		print(&quot;Parent class 2&quot;)

class Child(Parent1, Parent2):
	def show(self):
		print(&quot;Child class&quot;)

c = Child()
c.echo()
c.echo2()
c.show()
</code></pre>
<p>Output:</p>
<pre><code>Parent class 1
Parent class 2
Child class
</code></pre>
<h3>c. Design a class Employee with data members: name, department and salary. Create suitable methods for reading and printing employee information</h3>
<p>Example:</p>
<pre><code class="language-python">class Employee:
	name = &quot;&quot;
	department = &quot;&quot;
	salary = 0

	def setData(self):
		self.name = input(&quot;Enter Name: &quot;)
		self.department = input(&quot;Enter Department: &quot;)
		self.salary = int(input(&quot;Enter Salary: &quot;))

	def showData(self):
		print(&quot;Name:&quot;, self.name)
		print(&quot;Department:&quot;, self.department)
		print(&quot;Salary:&quot;, self.salary)

e = Employee()
e.setData()
e.showData()
</code></pre>
<p>Output:</p>
<pre><code>Enter Name: Jonney
Enter Department: Testing
Enter Salary: 20000
Name: Jonney
Department: Testing
Salary: 20000
</code></pre>]]></description>
  </item>
  <item>
    <title>Notes</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/notes.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h1>1. Introduction and Syntax of Python Program</h1>
<h2>3. Enlist applications for Python programming.</h2>
<p>Python is often used as a support language for software developers, for build
control and management, testing, and in many other ways.</p>
<h2>4. What are the features of Python?</h2>
<ul>
<li>Easy to learn and use</li>
<li>Interpreted Language</li>
<li>Interactive Mode</li>
<li>Free and Open Source</li>
<li>Cross Platform/Portable</li>
<li>OOP Language</li>
</ul>
<h2>5. List any four editors used for Python programming.</h2>
<ul>
<li>IDEA</li>
<li>Sublime Text</li>
<li>Vim</li>
<li>Notepad++</li>
</ul>
<h2>6. ‘Python programming language is interpreted an interactive’ comment this sentence.</h2>
<p>Python has two basic modes:</p>
<ul>
<li>Script mode</li>
<li>Interactive mode</li>
</ul>
<h3>Script mode</h3>
<p>The normal script mode is the mode where the scripted and finished <code>.py</code> files
are run in the Python interpreter.</p>
<h3>Interactive mode</h3>
<p>The interactive mode is a command line shell which gives immediate feedback for
each statement while running previously fed statements in active memory.</p>
<h2>7. How to run python scripts? Explain in detail.</h2>
<p>Open a command line and type the word python followed by the path to your script
file, like this: python <code>first_script.py</code> Hello World! Then you hit the ENTER
button from the keyboard and that’s it.</p>
<h2>8. What is interpreter? How it works? 9. Explain the following features of Python programming:</h2>
<h3>(i) Simple</h3>
<p>Python is considered one of the easiest programming languages to learn.</p>
<h3>(ii) Platform independent</h3>
<p>Python is a binary platform-independent programming language. The same Python
code can run on virtually all operating systems and platforms.</p>
<h3>(iii) Interactive</h3>
<p>Interactive mode is a command line shell which gives immediate feedback for each
statement, while running previously fed statements in active memory.</p>
<h3>(iv) Object Oriented.</h3>
<p>Object-oriented Programming is a programming paradigm that uses objects
and classes in programming. It aims to implement real-world entities like
inheritance, polymorphisms, encapsulation, etc. in the programming.</p>
<h2>12. Write in brief about characters set of Python.</h2>
<p>The character set is a set of alphabets, letters, symbols and some special
characters that are valid in Python programming language.</p>
<h3>Keywords</h3>
<ul>
<li>Python keywords are reserved word with that have special meaning and
function.</li>
<li>Keywords should not be used as variable name, constant, function name, or
identifier in the program code.</li>
<li>Example: <code>and</code>, <code>as</code>, <code>assert</code>, <code>break</code> and many more.</li>
</ul>
<h2>13. Write in brief about any five keywords in Python.</h2>
<ol>
<li><code>True</code> - is used as the Boolean true value in Python code.</li>
<li><code>False</code> - is used as the Boolean false value in Python code.</li>
<li><code>break</code> - is used to break the loop.</li>
<li><code>def</code> - is used to define the function in Python.</li>
<li><code>while</code> - is used to make while loop in Python.</li>
</ol>
<h2>15. What is the role of indentation in Python?</h2>
<ul>
<li>A code block starts with indentation and ends with first unindented line.</li>
<li>The amount of indention is up to us, but it must be consistent throughout
that block.</li>
</ul>
<h2>16. How to comment specific line(s) in Python program?</h2>
<ul>
<li>Comments are created by beginning a line with hash (#) character.</li>
</ul>
<h2>17. What is variable? What are the rules and conventions for declaring a variables?</h2>
<ul>
<li>A variable is like a container that stores values that we can access or
change.</li>
<li>Example:<pre><code class="language-python">name = &quot;Jone Nuts&quot;
</code></pre>
</li>
<li>Basic rules to declare variables:
<ul>
<li>A variable name must start with a letter or the underscore character</li>
<li>A variable name cannot start with a number</li>
<li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li>
<li>Variable names are case-sensitive (age, Age and AGE are three different variables)</li>
</ul>
</li>
</ul>
<h2>18. What are the various data types available in Python programming.</h2>
<h3>Numbers</h3>
<ul>
<li>Number data types store numeric values.</li>
<li>Python 3 types of number category:
<ul>
<li>Integers</li>
<li>Floating Point Numbers</li>
<li>Complex Numbers</li>
</ul>
</li>
</ul>
<h4>Integers(int)</h4>
<ul>
<li>An int data type represents an integer number.</li>
<li>An integer number is number without any decimal or fractional point.</li>
</ul>
<h4>Floating Point Numbers</h4>
<ul>
<li>The float data types represents that floating point number.</li>
<li>The floating point number is number that contains a decimal point.</li>
<li>Example: 0.1, -3.443</li>
</ul>
<h4>Complex Number</h4>
<ul>
<li>A complex number is a number that is written in the form of <code>a+bj</code>.</li>
</ul>
<h3>Boolean</h3>
<ul>
<li>Boolean represents the two values namely <code>False</code> and <code>True</code>.</li>
<li>The true value is represented true as 1 and false as 0.</li>
</ul>
<h3>String</h3>
<ul>
<li>String is a collection of group of characters.</li>
<li>String are identified as a contiguous set of characters enclosed in single
quotes(’ ') or double quotes(&quot; &quot;).</li>
<li>String can also can be define with <code>str()</code> function.</li>
</ul>
<h2>19. What are four built-in numeric data types in Python? Explain.</h2>
<p>The built-in numeric data types are Numbers, Integers, Float and Complex
Number.</p>
<h3>Numbers</h3>
<ul>
<li>Number data types store numeric values.</li>
<li>Python 3 types of number category:
<ul>
<li>Integers</li>
<li>Floating Point Numbers</li>
<li>Complex Numbers</li>
</ul>
</li>
</ul>
<h3>Integers(int)</h3>
<ul>
<li>An int data type represents an integer number.</li>
<li>An integer number is number without any decimal or fractional point.</li>
</ul>
<h3>Floating Point Numbers</h3>
<ul>
<li>The float data types represents that floating point number.</li>
<li>The floating point number is number that contains a decimal point.</li>
<li>Example: 0.1, -3.443</li>
</ul>
<h3>Complex Number</h3>
<ul>
<li>A complex number is a number that is written in the form of <code>a+bj</code>.</li>
</ul>
<h2>20. What is the difference between interactive mode and script mode of Python.</h2>
<p>Python has two basic modes:</p>
<ul>
<li>Script mode</li>
<li>Interactive mode</li>
</ul>
<h3>Script mode</h3>
<p>The normal script mode is the mode where the scripted and finished <code>.py</code> files
are run in the Python interpreter.</p>
<h3>Interactive mode</h3>
<p>The interactive mode is a command line shell which gives immediate feedback for
each statement while running previously fed statements in active memory.</p>
<h2>22. Define the following terms:</h2>
<h3>(i) Identifier</h3>
<ul>
<li>A Python identifier is a name given to a function, class variable, module or
other objects that is used in Python program.</li>
<li>An identifier can a combination of uppercase letters, lowercase letters,
underscores, and digits.</li>
<li>Example: <code>Name</code>, <code>myClass</code>, <code>Emp_Salary</code>, <code>var_1</code>, <code>_Address</code></li>
</ul>
<h3>(ii) Literal</h3>
<ul>
<li>A literal refers to the fixed value that directly appears in the program.</li>
</ul>
<h3>(iii) Data type</h3>
<p>Data types are the classification or categorization of data items. It represents
the kind of value that tells what operations can be performed on a particular
data.</p>
<h3>(iv) Tuple</h3>
<ul>
<li>Tuple is an ordered sequence of items same as list.</li>
<li>Tuple is immutable cannot be modified unlike list.</li>
<li>It is defined within parentheses () where items are separated by commas (,).</li>
<li>Example:<pre><code class="language-python">a = (10, 'abc', 32)
</code></pre>
</li>
</ul>
<h3>(v) List.</h3>
<ul>
<li>List is an ordered sequence of items.</li>
<li>In list items separated by commas (,) are enclosed within brackets [].</li>
<li>List are mutable which means that value of element of a list can be altered by
using index.</li>
<li>Example:<pre><code class="language-python">first = [10, 20, 30]
</code></pre>
</li>
</ul>
<h2>23. Explain dictionary data tune in detail</h2>
<ul>
<li>Dictionary is an unordered collection of key-value pairs.</li>
<li>Dictionary is collection which is ordered*, changeable and do not allow
duplicates.</li>
<li>Dictionary are written with curly brackets, and have keys and values.</li>
<li>Example:<pre><code class="language-python">car = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }
</code></pre>
</li>
</ul>
<h2>Sets</h2>
<ul>
<li>Set items are unordered, unchangeable, and do not allow duplicate values.</li>
<li>Set is defined by values separated by comma inside braces {}.</li>
<li>Example:<pre><code class="language-python">a = {5, 2, 3, 1, 4}
</code></pre>
</li>
</ul>
<h2>Difference between List, Set, Tuple, and Dictionary</h2>
<table>
<thead>
<tr>
<th></th>
<th>List</th>
<th>Set</th>
<th>Tuple</th>
<th>Dictionary</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mutable</td>
<td>Mutable</td>
<td>Mutable</td>
<td>Immutable</td>
<td>Mutable</td>
</tr>
<tr>
<td>Order</td>
<td>Ordered</td>
<td>Unordered</td>
<td>Ordered</td>
<td>Ordered</td>
</tr>
<tr>
<td>Can item be</td>
<td>Replaced or Changed</td>
<td>Can’t Replaced or Changed</td>
<td>Can’t be Replaced or Changed</td>
<td>Replace or Changed</td>
</tr>
</tbody>
</table>
<h2>String methods</h2>
<table>
<thead>
<tr>
<th>Operation</th>
<th>Explanation</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>upper</td>
<td>Converts to uppercase</td>
<td><code>x.upper()</code></td>
</tr>
<tr>
<td>lower</td>
<td>Converts to lowercase</td>
<td><code>x.lower()</code></td>
</tr>
<tr>
<td>title</td>
<td>Capitalize the first letter of each word in a string</td>
<td><code>x.title()</code></td>
</tr>
<tr>
<td>find, index</td>
<td>Search for the target in a string.</td>
<td><code>x.find(&quot;hello&quot;)</code>, <code>index(&quot;hello&quot;)</code></td>
</tr>
<tr>
<td>rfind, rindex</td>
<td>Search for the target in a string</td>
<td><code>x.xfind(&quot;hello&quot;)</code>, <code>x.xfind(&quot;hello&quot;)</code></td>
</tr>
<tr>
<td>replace</td>
<td>Replaces the target with new string</td>
<td><code>r.replace(&quot;hello&quot;, &quot;word&quot;)</code></td>
</tr>
<tr>
<td>strip, rstrip, lstrip</td>
<td>Removes whitespace or other characters from the ends of a string.</td>
<td><code>x.strip()</code></td>
</tr>
<tr>
<td>encode</td>
<td>Converts a Unicode string to a bytes object.</td>
<td><code>x.encode(&quot;utf_8&quot;)</code></td>
</tr>
</tbody>
</table>
<h1>2. Python Operators and Control Flow Statements</h1>
<h2>1. What is operator? Which operators used in Python?</h2>
<ul>
<li>An operator is a symbol which specifies a specifies a specific action.</li>
<li>Operators are used to perform operations on variables and values.</li>
<li>In python the operators can be unary operators or binary operator.</li>
</ul>
<h3>Unary Operators</h3>
<ul>
<li>Unary operators perform mathematical operation only on one operand.</li>
<li>The example of unary operators are <code>+</code>, <code>-</code>, <code>~</code>.</li>
</ul>
<h3>Binary Operators</h3>
<ul>
<li>Binary operators are operators that require two operands to perform any
mathematical operation.</li>
<li>Example of Binary operators are <code>**</code>, <code>/</code>, <code>%</code>, <code>+</code>, <code>-</code>.</li>
</ul>
<h2>2. What is meant by control flow of a program?</h2>
<ul>
<li>A program’s control flow is the order in which the program’s code executes.</li>
<li>The control flow of a Python program is regulated by conditional statements,
loops, and function calls.</li>
</ul>
<h2>3. Define the terms:</h2>
<h3>(i) Loop</h3>
<p>A loop statement allows us to execute a statement or group of statements
multiple times, this is called loop.</p>
<h3>(ii) Program</h3>
<p>A program is a sequence of statements that have been crafted to do something.</p>
<h3>(iii) Operator</h3>
<p>Unary operators perform mathematical operation only on one operand.</p>
<h3>(iv) Control flow.</h3>
<p>A program’s control flow is the order in which the program’s code executes.</p>
<h2>4. What are the different loops available in Python?</h2>
<ul>
<li>There are 4 types of loops available in Python:
<ul>
<li><code>while</code> loop</li>
<li><code>for</code> loop</li>
<li>Nested <code>for</code> and <code>while</code> loop</li>
<li><code>do..while</code> loop</li>
</ul>
</li>
</ul>
<h2>5. What happens if a semicolon (;) is placed at the end of a Python statement?</h2>
<p>In Python a semicolon works as a separated between statements and not as a
terminator of statements.</p>
<h2>6. Explain about different logical operators in Python with appropriate examples.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>AND</td>
<td>If both the values are true then condition becomes true</td>
<td>(a and b) is False</td>
</tr>
<tr>
<td>Or</td>
<td>If any of two values are true then condition becomes true</td>
<td>(a or b) is True</td>
</tr>
<tr>
<td>Not</td>
<td>Used to reverse the local state of its value</td>
<td>not(a and b) is True</td>
</tr>
</tbody>
</table>
<h2>7. Explain about different relational operators in Python with examples.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Name</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>==</td>
<td>Equal</td>
<td>x == y</td>
</tr>
<tr>
<td>!=</td>
<td>Not equal</td>
<td>x != y</td>
</tr>
<tr>
<td>&gt;</td>
<td>Greater than</td>
<td>x &gt; y</td>
</tr>
<tr>
<td>&lt;</td>
<td>Less than</td>
<td>x &lt; y</td>
</tr>
<tr>
<td>&gt;=</td>
<td>Greater than or equal to</td>
<td>x &gt;= y</td>
</tr>
<tr>
<td>&lt;=</td>
<td>Less than or equal to</td>
<td>x &lt;= y</td>
</tr>
</tbody>
</table>
<h2>8. Explain about membership operators in Python.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>in</td>
<td>True if value in list or in sequence</td>
<td>(‘H’ in x) is True</td>
</tr>
<tr>
<td>not in</td>
<td>False if value not in list or in sequence</td>
<td>(‘H’ in x) is False</td>
</tr>
</tbody>
</table>
<h2>9. Explain about Identity operators in Python with appropriate examples.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>is</td>
<td>True if the variable on either side points to the same object</td>
<td>(a is b) is False</td>
</tr>
<tr>
<td>is not</td>
<td>False if the variable on either side points to the same object</td>
<td>(a is not b) is False</td>
</tr>
</tbody>
</table>
<h2>10. Explain about arithmetic operators in Python.</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Name</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>Addition</td>
<td>x + y</td>
</tr>
<tr>
<td>-</td>
<td>Subtraction</td>
<td>x - y</td>
</tr>
<tr>
<td>*</td>
<td>Multiplication</td>
<td>x * y</td>
</tr>
<tr>
<td>/</td>
<td>Division</td>
<td>x / y</td>
</tr>
<tr>
<td>%</td>
<td>Modulus</td>
<td>x % y</td>
</tr>
<tr>
<td>**</td>
<td>Exponentiation</td>
<td>x ** y</td>
</tr>
<tr>
<td>//</td>
<td>Floor division</td>
<td>x // y</td>
</tr>
</tbody>
</table>
<h2>11. List different conditional statements in Python.</h2>
<p>Python conditional statements includes:</p>
<ul>
<li><code>if</code></li>
<li><code>if-else</code></li>
<li><code>nested-if</code></li>
<li><code>if-elif-else</code></li>
</ul>
<h2>12. What are the different nested loops available in Python?</h2>
<ul>
<li>There are two types of nested loop <code>while</code> and <code>for</code> loop.</li>
</ul>
<pre><code class="language-python"># for loop
for i in range(1, 5):
  for j in range(1, (i+1)):
    print(j, end=' ')
  print()

# while loop
i = 1
while i &lt; 5:
  j = 1
  while j &lt; (i+1):
    print(j, end=' ')
    j = j + 1
  i = i + 1
  print()
</code></pre>
<h2>13. What are the different loop control (manipulation) statements available in Python? Explain with suitable examples.</h2>
<p>There three loop control statements available in Python:</p>
<ul>
<li><code>break</code></li>
<li><code>continue</code></li>
<li><code>pass</code></li>
</ul>
<pre><code class="language-python">for i in range(1, 11):
  if i%2 == 0:
    pass
  if i%3 == 0;
    continue
  if i%4 == 0;
    break
</code></pre>
<h2>14. Explain if-else statement with an example.</h2>
<ul>
<li><code>if</code> statements executes when the conditions following if is true and it does
noting when the conedition is <code>false</code>.</li>
<li>The <code>if-else</code> statement takes care of a <code>true</code> as well as <code>false</code> condition.</li>
</ul>
<pre><code class="language-python">i = 20
if (i &lt; 15):
  print(&quot;i is less then 15&quot;)
else:
  print(&quot;i is greater then 15&quot;)
</code></pre>
<h2>15. Explain continue statement with an example.</h2>
<p>The continue statement in Python returns the control to the beginning of the
while loop.</p>
<pre><code class="language-python">i = 0
while i &lt; 10:
  i = i + 1
  if i == 5:
    continue
</code></pre>
<h2>16. Explain use of break statement in a loop with example.</h2>
<p>The <code>break</code> statement in Python terminates the current loop and resumes
ececution at next statement.</p>
<pre><code class="language-python">i = 0
while i&lt;10:
  i=i+1
  if i == 5:
    break
  print(&quot;i = &quot;, i)
</code></pre>
<h2>17. Predict output and justify your answer:</h2>
<h3>(i) -11 % 9</h3>
<pre><code>&gt;&gt;&gt; print(-11 % 9)
-2
</code></pre>
<h3>(ii) 7.7 // 7</h3>
<pre><code>&gt;&gt;&gt; print(7.7 // 7)
1.0
</code></pre>
<h3>(iii) (200 - 70) * 10 / 5</h3>
<pre><code>&gt;&gt;&gt; print((200 - 70) * 10 / 5)
260.0

</code></pre>
<h3>(iv) 5 * 1 ** 2</h3>
<pre><code>&gt;&gt;&gt; print(5 * 1 ** 2)
5
</code></pre>
<h2>18. What the difference is between == and is operator in Python?</h2>
<ul>
<li><code>=</code> - if the values of operands are equal, then the condition becomes true.</li>
<li><code>is</code> - return true, if the variables on either side of  the operator point to
same object.</li>
</ul>
<h2>19. List different operators in Python, in the order of their precedence.</h2>
<table>
<thead>
<tr>
<th>Operators</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>Arithmetic Operators</td>
<td>a + b</td>
</tr>
<tr>
<td>Assignment Operators</td>
<td>c = a + b</td>
</tr>
<tr>
<td>Comparison Operators</td>
<td>a == b</td>
</tr>
<tr>
<td>Logical Operators</td>
<td>a and b</td>
</tr>
<tr>
<td>Bitwise Operators</td>
<td>a &amp; b</td>
</tr>
<tr>
<td>Identity Operators</td>
<td>a = 3</td>
</tr>
<tr>
<td>Membership Operators</td>
<td>a in b</td>
</tr>
</tbody>
</table>
<h2>20. Write a Python program to print factorial of a number. Take input from user.</h2>
<h2>21. Write a Python program to calculate area of triangle and circle and print the result.</h2>
<h2>22. Write a Python program to check whether a string is palindrome.</h2>
<h2>23. Write a Python program to print Fibonacci series up to n terms.</h2>
<pre><code class="language-python">num = int(input(&quot;Enter a num: &quot;))
x = 0
y = 1

if num &lt; 0:
  print(&quot;Invalid term&quot;)
else:
  for i in range(num):
    print(x)
    z = x + y
    x = y
    y = z
</code></pre>
<p>O/P</p>
<pre><code>Enter a num: 3
0
1
1
</code></pre>
<h2>24. Write a Python program to print all prime numbers less than 256.</h2>
<pre><code class="language-python">num = int(input(&quot;Enter number: &quot;)
for n in range(2, num):
  if n % 1 == 0:
    break
  else:
    print(n)
</code></pre>
<h2>25. Write a Python program to find the best of two test average marks out of three test’s mark accepted from the user.</h2>
<h2>Assignment Operator</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Example</th>
<th>Same As</th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td>x = 5</td>
<td>x = 5</td>
</tr>
<tr>
<td>+=</td>
<td>x += 3</td>
<td>x = x + 3</td>
</tr>
<tr>
<td>-=</td>
<td>x -= 3</td>
<td>x = x - 3</td>
</tr>
<tr>
<td>*=</td>
<td>x *= 3</td>
<td>x = x * 3</td>
</tr>
<tr>
<td>/=</td>
<td>x /= 3</td>
<td>x = x / 3</td>
</tr>
<tr>
<td>%=</td>
<td>x %= 3</td>
<td>x = x % 3</td>
</tr>
<tr>
<td>//=</td>
<td>x //= 3</td>
<td>x = x // 3</td>
</tr>
<tr>
<td>**=</td>
<td>x **= 3</td>
<td>x = x ** 3</td>
</tr>
<tr>
<td>&amp;=</td>
<td>x &amp;= 3</td>
<td>x = x &amp; 3</td>
</tr>
<tr>
<td>|=</td>
<td>x |= 3</td>
<td>x = x | 3</td>
</tr>
<tr>
<td>^=</td>
<td>x ^= 3</td>
<td>x = x ^ 3</td>
</tr>
<tr>
<td>&gt;&gt;=</td>
<td>x &gt;&gt;= 3</td>
<td>x = x &gt;&gt; 3</td>
</tr>
<tr>
<td>&lt;&lt;=</td>
<td>x &lt;&lt;= 3</td>
<td>x = x &lt;&lt; 3</td>
</tr>
</tbody>
</table>
<h2>Relational or Comparison Operators</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Name</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>==</td>
<td>Equal</td>
<td>x == y</td>
</tr>
<tr>
<td>!=</td>
<td>Not equal</td>
<td>x != y</td>
</tr>
<tr>
<td>&gt;</td>
<td>Greater than</td>
<td>x &gt; y</td>
</tr>
<tr>
<td>&lt;</td>
<td>Less than</td>
<td>x &lt; y</td>
</tr>
<tr>
<td>&gt;=</td>
<td>Greater than or equal to</td>
<td>x &gt;= y</td>
</tr>
<tr>
<td>&lt;=</td>
<td>Less than or equal to</td>
<td>x &lt;= y</td>
</tr>
</tbody>
</table>
<h2>Bitwise Operators</h2>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>&amp;</td>
<td>AND</td>
<td>Sets each bit to 1 if both bits are 1</td>
</tr>
<tr>
<td>|</td>
<td>OR</td>
<td>Sets each bit to 1 if one of two bits is 1</td>
</tr>
<tr>
<td>^</td>
<td>XOR</td>
<td>Sets each bit to 1 if only one of two bits is 1</td>
</tr>
<tr>
<td>~</td>
<td>NOT</td>
<td>Inverts all the bits</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>Zero fill left shift</td>
<td>Shift left by pushing zeros in from the right and let the leftmost bits fall off</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>Signed right shift</td>
<td>Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off</td>
</tr>
</tbody>
</table>
<h1>3. Data Structures in Python</h1>
<h2>1. What is data structure? Which data structure used by Python?</h2>
<ul>
<li>A data structure is specialized format for organizing and storing data, so
that various operations can be performed on it easily.</li>
<li>Python use data structure like list, tuple, dictionary.</li>
</ul>
<h2>2. How to define and access the elements of list?</h2>
<ul>
<li>A list is created by placing all the items inside a square brackets [],
separated by commas.</li>
<li>Example of define the list:<pre><code class="language-python">li = [&quot;Hello&quot;, 50]
</code></pre>
</li>
<li>To access values in lists, use the square brackets for slicing along with the
index or indices to obtain value available at that index.<pre><code class="language-python">li = [&quot;Hello&quot;, 50]
print(li[1])
</code></pre>
O/P<pre><code>50
</code></pre>
</li>
</ul>
<h2>3. What is list? How to create list?</h2>
<ul>
<li>List are used to store multiple items in single variable.</li>
<li>List are created using square brackets.</li>
<li>Example:<pre><code class="language-python">li = [&quot;Hello&quot; , 50]
</code></pre>
</li>
</ul>
<h2>4. What are the different operation that can be performed on a list? Explain with examples</h2>
<ul>
<li><code>append()</code> - is used to add elements at the end of the list.</li>
<li><code>extend()</code> - is used to add more then one element at the end of the list.</li>
<li><code>insert()</code> - can add an element at a given position in the list.</li>
<li><code>remove()</code> - is used to remove an element form the list.</li>
<li><code>pop()</code> - can remove an element from any position in the list.</li>
<li><code>reverse()</code> - is used to reverse the element of the list.</li>
<li><code>len()</code> - returns the length of the list.</li>
<li><code>min()</code> - returns the minimum value in the list.</li>
<li><code>max()</code> - returns the maximum value in the list.</li>
<li><code>count()</code> - returns the number of occurrence of given element in the list.</li>
<li><code>index()</code> - returns the position of the first occurrence.</li>
<li><code>sort()</code> - sorts the list.</li>
<li><code>clear()</code> - erases all the elements.</li>
<li><strong>slice</strong> - is used to print a section of the list.</li>
<li><strong>concatenate</strong> - is used to merge two lists and return a single list.</li>
<li><strong>multiply</strong> - the list <em>n</em> times.
Example:</li>
</ul>
<pre><code class="language-python">li = [&quot;Hello&quot;, &quot;World&quot;]
li.append(&quot;Bye&quot;)
li.extend([&quot;World&quot;, &quot;Forever&quot;])
li.insert(0, &quot;Bye&quot;)
li.remove(&quot;World&quot;)
li.pop(0)
li.reverse()
len(li)
max(li)
li.count(&quot;o&quot;)
li.index(&quot;Forever&quot;)
li.sort()
li.clear()
</code></pre>
<p>O/P</p>
<pre><code>['Hello', 'World']
['Hello', 'World', 'Bye']
['Hello', 'World', 'Bye', 'World', 'Forever']
['Bye', 'Hello', 'World', 'Bye', 'World', 'Forever']
['Bye', 'Hello', 'Bye', 'World', 'Forever']
['Hello', 'Bye', 'World', 'Forever']
['Forever', 'World', 'Bye', 'Hello']
4
World
0
0
['Bye', 'Forever', 'Hello', 'World']
[]
</code></pre>
<h2>5. Explain any two methods under lists in Python with examples.</h2>
<h3><code>append()</code></h3>
<ul>
<li>Is used to add elements at the end of the list.</li>
<li>Syntax:<pre><code class="language-python">list.append(item)
</code></pre>
</li>
<li>Example:<pre><code class="language-python">li = [&quot;Hello&quot;, 30]
li.append(&quot;World&quot;)
print(li)
</code></pre>
O/P<pre><code>[&quot;Hello&quot;, 30, &quot;World&quot;]
</code></pre>
</li>
</ul>
<h3><code>extend()</code></h3>
<ul>
<li>Is used to add more then one element at the end of the list.</li>
<li>Syntax:<pre><code class="language-python">list.extend(list2)
</code></pre>
</li>
<li>Example:<pre><code class="language-python">li = [&quot;Hello&quot;, &quot;World&quot;]
li2 = [&quot;What's&quot;, &quot;Up&quot;]
li.extend(li2)
print(li)
</code></pre>
O/P<pre><code>[&quot;Hello&quot;, &quot;World&quot;, &quot;What's&quot;, &quot;Up&quot;]
</code></pre>
</li>
</ul>
<h2>6. Write a python program to describe different ways of deleting an element form the given List.</h2>
<p><code>remove()</code> - is used to remove an element form the list.</p>
<pre><code class="language-python">li = [&quot;Hello&quot;, &quot;World&quot;]
li.remove(&quot;Hello&quot;)
print(li)
</code></pre>
<p>O/P</p>
<pre><code>World
</code></pre>
<h2>7. What is tuple in Python? How to create and access it?</h2>
<ul>
<li>Tuple is an ordered sequence of items same as list.</li>
<li>Tuple is immutable cannot be modified unlike list.</li>
<li>It is defined within parentheses () where items are separated by commas (,).</li>
<li>To access values in tuple, use the square brackets[].</li>
<li>Example:<pre><code class="language-python">a = (10, 'abc', 32)
print(a[0])
</code></pre>
O/P<pre><code>10
</code></pre>
</li>
</ul>
<h2>8. What are mutable and immutable types?</h2>
<ul>
<li><strong>Mutable</strong> - is when something is changeable or has the ability to change.</li>
<li><strong>Immutable</strong> - when no change is possible over time.</li>
</ul>
<h2>9. Is tuple mutable? Demonstrate any two methods of tuple.</h2>
<ul>
<li>Tuple is immutable that means it can’t be changed or replace.</li>
<li><code>max()</code> - Returns item from the tuple with max value.</li>
<li><code>min()</code> Return item from the tuple with min value.</li>
</ul>
<pre><code class="language-python">a = (10, 32, 3)
max(a)
min(a)
</code></pre>
<p>O/P</p>
<pre><code>10
3
</code></pre>
<h2>10. Write in brief about Tuple in Python. Write operations with suitable examples</h2>
<ul>
<li>Tuple is an ordered sequence of items same as list.</li>
<li>Tuple is immutable cannot be modified unlike list.</li>
<li>It is defined within parentheses () where items are separated by commas (,).</li>
<li>To access values in tuple, use the square brackets[].</li>
</ul>
<h3>Tuple Operations</h3>
<ul>
<li>We can use + operator to combine two tuples.</li>
<li>We can also repeat elements by using the * operator.</li>
<li>We can test if an item exist in tuple or not.</li>
<li>Iteration over a tuple specifies the way.</li>
</ul>
<pre><code class="language-python">t1 = (1, 2)
t2 = (3, 4)

print(t1 + t2)
print(t1 * 2)
print(1 in t1)

for t in t1:
  print(t)
</code></pre>
<p>O/P</p>
<pre><code>(1, 2, 3, 4)
(1, 2, 1, 2)
True
1
2
</code></pre>
<h2>11. Write in brief about Set in Python. Write operations with suitable example.</h2>
<ul>
<li>Set items are unordered, unchangeable, and do not allow duplicate values.</li>
<li>Set is defined by values separated by comma inside braces {}.</li>
<li>To access values in set, use the square brackets[].</li>
</ul>
<pre><code class="language-python">a = {5, 2, 3, 1, 4}
a[1]
</code></pre>
<h2>12. Explain the properties of dictionary keys.</h2>
<ul>
<li>Dictionary values have no restrictions.</li>
<li>They can be any arbitrary Python object, either standard objects or
user-defined objects.</li>
<li>However, same is not true for the keys, more then one entry per key not
allowed.</li>
</ul>
<h2>13. Explain directory methods in Python.</h2>
<ul>
<li><code>clear()</code> - removes all the elements from the dictionary.</li>
<li><code>copy()</code> - returns a copy of the dictionary.</li>
<li><code>fromkeys()</code> - the <code>fromkeys()</code> method creates a new dictionary with default
value or all specified keys.</li>
<li><code>gets()</code> - returns the value of the specified key.</li>
<li><code>item()</code> - returns a list containing a tuple for each key value pair.</li>
<li><code>keys()</code> - returns a list containing the dictionary’s keys.</li>
<li><code>pop()</code> - removes the element with the specified key.</li>
<li><code>popitem()</code> - removes the last inserted key-value pair.</li>
<li><code>setdefault()</code> - returns the value of the specified key.</li>
<li><code>update()</code> - Updates the dictionary with the specified key.</li>
<li><code>values()</code> - returns a list of all the values in the dictionary.</li>
</ul>
<h2>14. How to create directory in Python? Give example.</h2>
<ul>
<li>Dictionary are written with curly brackets, and have keys and values.</li>
</ul>
<pre><code class="language-python">d = { &quot;name&quot;: &quot;Jone&quot;, &quot;age&quot;: 30 }
print(d)
</code></pre>
<p>O/P</p>
<pre><code>{ &quot;name&quot;: &quot;Jone&quot;, &quot;age&quot;: 30 }
</code></pre>
<h2>15. Write in brief about Dictionary in Python. Write operation with suitable examples.</h2>
<ul>
<li>Dictionary is an unordered collection of key-value pairs.</li>
<li>Dictionary is collection which is ordered*, changeable and do not allow
duplicates.</li>
<li>Dictionary are written with curly brackets, and have keys and values.</li>
<li>Example:<pre><code class="language-python">car = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }
</code></pre>
</li>
</ul>
<h3>Operation of Dictionary</h3>
<pre><code class="language-python">d = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }
print(&quot;brand&quot; in d)

for i in d:
  print(i, d[i])
</code></pre>
<p>O/P</p>
<pre><code>True
brand Ford
model Mustang
year 1264
</code></pre>
<h2>16. What is the significant difference between list and dictionary?</h2>
<h3>List</h3>
<ul>
<li>List is collection of index values pairs.</li>
<li>List is created by placing elements in [] separated by commas “,”.</li>
<li>We can access the elements using the index value.</li>
<li>List are mutable.</li>
<li>List is created using <code>list()</code> function.</li>
</ul>
<h3>Dictionary</h3>
<ul>
<li>Dictionary is collection of key-value pairs.</li>
<li>All key-value go inside brackets{} separated by a comma.</li>
<li>The keys in dictionary are of any given data type.</li>
<li>We can access the elements using the keys.</li>
<li>Dictionaries are mutable, but keys don’t allow duplicates.</li>
<li>Dictionary object is created using <code>dict()</code> function.</li>
</ul>
<h2>17. Compare List and Tuple.</h2>
<h3>List</h3>
<ul>
<li>Lists are mutable.</li>
<li>The list is better for performing operations.</li>
<li>Lists consume more memory.</li>
<li>More likely error will occur.</li>
</ul>
<h3>Tuple</h3>
<ul>
<li>Tuples are immutable.</li>
<li>The implication of iterations is faster.</li>
<li>Tuple consume less memory.</li>
<li>Less likely error will occur.</li>
</ul>
<h2>19. How append() and extend() are different with reference to list in Python?</h2>
<h3><code>append()</code></h3>
<ul>
<li>Append uses <code>.append()</code> to add element at end of the list.</li>
<li>Syntax:<pre><code class="language-python">list.append(&quot;hello&quot;)
</code></pre>
</li>
<li>Example:<pre><code class="language-python">li = [&quot;hello&quot;, &quot;world&quot;]
li.append(&quot;bye&quot;)
print(li)
</code></pre>
O/P<pre><code>[&quot;hello&quot;, &quot;world&quot;, &quot;bye&quot;]
</code></pre>
</li>
</ul>
<h3><code>extend()</code></h3>
<ul>
<li>Extend uses <code>.extend()</code> to add multiple elements to the list.</li>
<li>Syntax:<pre><code class="language-python">list.extend([&quot;hello&quot;, &quot;world&quot;])
</code></pre>
</li>
<li>Example:<pre><code class="language-python">li = [&quot;hello&quot;, &quot;world&quot;]
li.extend([&quot;bye&quot;, &quot;world&quot;]
print(li)
</code></pre>
O/P<pre><code>[&quot;hello&quot;, &quot;world&quot;, &quot;bye&quot;, &quot;world&quot;]
</code></pre>
</li>
</ul>
<h2>20. Write a program to input any two tuples and interchange the tuple variable.</h2>
<pre><code class="language-python">a = 1
b = 2
(a, b) = (b, a)
print(&quot;a =&quot;, a, &quot;b =&quot;, b)
</code></pre>
<p>O/P</p>
<pre><code>a = 2 b = 1
</code></pre>
<h2>21. Write a Python program to multiply two matrices</h2>
<h2>22. Write a Python code to get the following dictionary as output: <code>{1:1, 3:9, 5:25, 7:49, 9:81}</code></h2>
<pre><code class="language-python">di = {1:1, 3:9, 5:25, 7:49, 9:81}
print(di)
</code></pre>
<p>O/P</p>
<pre><code>{1:1, 3:9, 5:25, 7:49, 9:81}
</code></pre>
<h2>23. Write the output for the following:</h2>
<pre><code>&gt;&gt;&gt;a=[1,2,3]
&gt;&gt;&gt;b=[4,5,6]
&gt;&gt;&gt;c=a+b
[1, 2, 3, 4, 5, 6]
&gt;&gt;&gt;[1,2,3]*3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
&gt;&gt;&gt;t=['a', 'b', 'c', 'd', 'e', 'f']
&gt;&gt;&gt;t[1:3]=['x', 'y']
&gt;&gt;&gt;print(t)
['a', 'x', 'y', 'd', 'e', 'f']
</code></pre>
<h2>24. Give the output of Python code:</h2>
<pre><code>Str=&quot;Maharashtra State Board of Technical Education'
print(x[15::1])
print(x[-10:-1:2])
</code></pre>
<p>O/P</p>
<pre><code>te Board of Technical Education
 dcto
</code></pre>
<h2>25. Give the output of following Python code:</h2>
<pre><code>t=(1,2,3, (4,), [5,6])
print(t[3])
t[4][0]=7
print(t)
</code></pre>
<p>O/P</p>
<pre><code>(4,)
(1, 2, 3, (4,), [7, 6])
</code></pre>
<h2>26. Write the output for the following if the variable fruit=“banana”:</h2>
<pre><code>&gt;&gt;&gt;fruit[:3]    o/p='ban'
&gt;&gt;&gt;fruit[3:]    o/p='ana'
&gt;&gt;&gt;fruit[3:3]   o/p=' '
&gt;&gt;&gt;fruit[:]     o/p='banana'
</code></pre>
<h2>27. What is string? How to create it? Enlist various operations on strings.</h2>
<ul>
<li>String is a collection of group of characters.</li>
<li>String are identified as a contiguous set of characters enclosed in single
quotes(’ ') or double quotes(&quot; &quot;).</li>
<li>String can also can be define with <code>str()</code> function.</li>
</ul>
<pre><code class="language-python">s1 = &quot;Hello World&quot;

print(s1[0])         # String indices and accessing string
print(&quot;Hello&quot; in s1) # 'in' and 'not in' operator
print(s1[1:])        # String slicing
print(s1&gt;&quot;Hello&quot;)    # String comparison
</code></pre>
<p>O/P</p>
<pre><code>H
True
ello World
True
</code></pre>
<h1>5. Object Oriented Programming in Python</h1>
<h2>1. What is OOP?</h2>
<h2>2. List the features and explain about different Object Oriented features supported by Python.</h2>
<h2>3. List and explain built in class attributes with example.</h2>
<h2>4. Design a class that store the information of student and display the same.</h2>
<h2>5. What are basic overloading methods?</h2>
<h2>6. What is method overriding? Write an example.</h2>
<h2>7. Explain class inheritance in Python with an example.</h2>
<h2>8. How to declare a constructor method in python? Explain.</h2>
<h2>9. How operator overloading can be implemented in Python? Give an example.</h2>
<h2>10. Write a Python program to implement the concept of inheritance.</h2>
<h2>11. Create a class employee with data members: name, department and salary. Create suitable methods for reading and printing employee information.</h2>
<h2>12. What is data abstraction? Explain in detail. 13. Define the following terms:</h2>
<h3>(1) Object</h3>
<h3>(ii) Class</h3>
<h3>(iii) Inheritance</h3>
<h3>(iv) Data abstraction.</h3>
<h2>14. Describe the term composition classes with example.</h2>
<h2>15. Explain customization via inheritance specializing inherited methods.</h2>
<h1>6. File I/O Handling and Exception Handling</h1>
<h2>1. What is file? Enlist types of files in Python programming.</h2>
<ul>
<li>File is a named location on disk to store related information.</li>
<li>It is used to permanently store data in a volatile memory.</li>
<li>Files are divided into following two categories:
<ol>
<li>Text Files</li>
<li>Binary files</li>
</ol>
</li>
</ul>
<h3>Text Files</h3>
<ul>
<li>Text files are simple texts in human readable format.</li>
<li>A text file is structured as sequence of lines of text.</li>
</ul>
<h3>Binary Files</h3>
<ul>
<li>Binary files have binary data which is understood by the computer.</li>
</ul>
<h2>2. What is exception?</h2>
<p>An exception is also called as runtime error that can halt the execution of the
program.</p>
<h2>3. Explain the term exception handling in detail.</h2>
<ul>
<li>Python provides a Exception handling for handling any unreported errors in
program.</li>
<li>By handling the exception, we can provide a meaning full message to the user
about the problem.</li>
</ul>
<h2>4. Explain different modes of opening a file.</h2>
<table>
<thead>
<tr>
<th>Mode</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>Opens a file for reading.</td>
</tr>
<tr>
<td>w</td>
<td>Opens a file for writing.</td>
</tr>
<tr>
<td>x</td>
<td>Opens a file for exclusive creation. If the file already exists, the operation fails.</td>
</tr>
<tr>
<td>a</td>
<td>Opens a file for appending at the end of the file without truncating it.  Creates a new file if it does not exist.</td>
</tr>
<tr>
<td>t</td>
<td>Opens in text mode.</td>
</tr>
<tr>
<td>b</td>
<td>Opens in binary mode.</td>
</tr>
<tr>
<td>+</td>
<td>Opens a file for updating (reading and writing)</td>
</tr>
</tbody>
</table>
<h2>5. Write the syntax of <code>fopen()</code> with example.</h2>
<ul>
<li>Syntax:<pre><code class="language-python">f = open(&quot;filename&quot;, &quot;modes&quot;)
</code></pre>
</li>
<li>Example:<pre><code class="language-python">o = open(&quot;text.txt&quot;, &quot;w&quot;)
o.write(&quot;Hello World&quot;)
o.close()

o = open(&quot;text.txt&quot;, &quot;r&quot;)
print(o.read())
o.close()
</code></pre>
O/P<pre><code>Hello World
</code></pre>
</li>
</ul>
<h2>6. What are various modes of file object? Explain any five as them.</h2>
<table>
<thead>
<tr>
<th>Mode</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>Opens a file for reading.</td>
</tr>
<tr>
<td>w</td>
<td>Opens a file for writing.</td>
</tr>
<tr>
<td>x</td>
<td>Opens a file for exclusive creation. If the file already exists, the operation fails.</td>
</tr>
</tbody>
</table>
<h2>7. Explain exception handling with example using try, except, raise keywords.</h2>
<ul>
<li>Exception handling for handling any unreported errors in program.</li>
<li>By handling the exception, we can provide a meaningful message to the user
about the problem rather then system generated error message.</li>
</ul>
<pre><code class="language-python">age = int(input(&quot;Enter your age: &quot;))

try:
  if age &lt; 18:
    raise Exception;
except Exception:
  print(&quot;You are not 18&quot;)

</code></pre>
<p>O/P</p>
<pre><code>Enter your age: 16
You are not 18
</code></pre>]]></description>
  </item>
  <item>
    <title>Practical S6</title>
    <link>https://anzenkodo.github.io/notes/programming/languages/python/practical-s6.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h1>Python practical question bank solved</h1>
<h2>1) WAP to create 3x3 matrix with 1 at the border and zero inside.</h2>
<pre><code class="language-python">import numpy as n
a=n.ones((3, 3))
a[1:-1,1:-1]=0
print(a)
</code></pre>
<p>Output</p>
<pre><code>[[1. 1. 1.]
 [1. 0. 1.]
 [1. 1. 1.]]
</code></pre>
<h2>2) WAP to calculate area of circle and area of rectangle using abstract class.</h2>
<pre><code class="language-python">from abc import ABC, abstractmethod
class test(ABC):
    @abstractmethod
    def area(self):
        pass
class Rec(test):
    def area(self):
        self. l=4
        self. b=2
        print(self.l*self.b)
class Cir(test):
    def area(self):
        self.r=5
        print(3.14*self.r*self.r)
R=Rec()
R. area()
C=Cir()
C. area()
</code></pre>
<p>Output</p>
<pre><code>8
78.5
</code></pre>
<h2>3) WAP to create dictionary where key is 1 to 10 and value is square of 1 to 10.</h2>
<pre><code class="language-python">a=dict()
for i in range(1,11):
    a[i]=i**2
print(a)
</code></pre>
<p>Output
<code>{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100}</code></p>
<h2>4) WAP to display result using inheritance.</h2>
<pre><code class="language-python">class Student:
    def accept(self):
        self. name=input(&quot;Name:&quot;)
class Test:
    def marks(self):
        self. m1=int(input(&quot;M1:&quot;))
        self. m2=int(input(&quot;M2:&quot;))
class Result(Student, Test):
    def total(self):
        self. t=self.m1+self.m2
    def disp(self):
        print(self.name)
        print(self.t)
r=Result()
r. accept()
r. marks()
r. total()
r. disp()
</code></pre>
<p>Output</p>
<pre><code>Name:ramesh
M1:80
M2:70
ramesh
150
</code></pre>
<h2>5) WAP to remove duplicates from dictionary.</h2>
<pre><code class="language-python">d={1:20, 1:20, 2:30}
res={}
for x, y in d. items() :
    if y not in d. items() :
        res[x]=y
print(res)
</code></pre>
<p>Output
<code>{1: 20, 2: 30}</code></p>
<h2>6) WAP to print sum of entered no. using function with arbitrary argument arguments.</h2>
<pre><code class="language-python">def sum(*x):
    n=0
    for i in x:
        n+=i
    print(n)
sum(1, 2,3,4,5)
</code></pre>
<p>Output
<code>15</code></p>
<p><code>fibonacci.py</code></p>
<pre><code class="language-python">def fib(n):
  n1, n2= 0,1
  for i in range(n):
    print(n1)
    nth=n1+n2
    n1=n2
    n2=nth
</code></pre>
<p><code>fib.py</code></p>
<pre><code class="language-python">import fibonacci
print(fibonacci.fib(5))
</code></pre>
<p>To run the code, run <code>fib.py</code> file.</p>
<h2>8) WAP to print following pattern.</h2>
<pre><code>***
**
*
</code></pre>
<pre><code class="language-python">for i in range(4, 0, -1):
    for j in range(0, i-1):
        print(“*”, end= ‘ ’)
    print(&quot; &quot;)
</code></pre>
<h2>9) WAP to print distinction, first class, second, third class and fail using if else.</h2>
<pre><code class="language-python">s1=int(input(&quot;English:&quot;))
s2=int(input(&quot;Hindi:&quot;))
s3=int(input(&quot;Marathi:&quot;))
s4=int(input(&quot;Maths:&quot;))
s5=int(input(&quot;Science:&quot;))
a=(s1+s2+s3+s4+s5)/5
if a&gt;=90:
    print(&quot;Distinction&quot;)
elif a&gt;=75 and a&lt;90:
    print(&quot;First class&quot;)
elif a&gt;=45 and a&lt;75:
    print(&quot;Second class&quot;)
elif a&gt;=35 and a&lt;45:
    print(&quot;Third class&quot;)
else:
    print(&quot;Failed&quot;)
</code></pre>
<p>Output</p>
<pre><code>English:70
Hindi:80
Marathi:90
Maths:80
Science:70
First class
</code></pre>
<h2>10) WAP to calculate area of circle and rectangle using method overriding.</h2>
<pre><code class="language-python">class Rec:
    def area(self):
        self. l=4
        self. b=2
        print(&quot;Area of rectangle=&quot;,self.l*self.b)
class Cir:
    def area(self):
        self. r=3.5
        print(&quot;Area of circle=&quot;,3.14*self.r*self.r)
r=Rec()
r. area()
c=Cir()
c. area()
</code></pre>
<p>Output</p>
<pre><code>Area of rectangle= 8
Area of circle= 38.465
</code></pre>
<h2>11) Check entered password is correct or not using user defined exception.</h2>
<pre><code class="language-python">class WrongPasswordException(Exception):
  pass
p=input(&quot;Enter password:&quot;)
try:
  if p!='abc12':
    raise WrongPasswordException
except WrongPasswordException:
  print(&quot;Incorrect password!&quot;)
else:
  print(&quot;Correct password!&quot;)
</code></pre>
<p>Output</p>
<pre><code>Enter password:abc12
Correct password!
</code></pre>
<h2>12) Create list and perform following operations.</h2>
<ol>
<li>print elements using for loop</li>
<li>del elements 3,4</li>
<li>del 4 and add ‘o’,‘n’ ‘a’</li>
<li>acces element ‘d’ from orignal list</li>
<li>find len of list</li>
</ol>
<h3>1.print elements using for loop</h3>
<pre><code class="language-python=">li = ['a','n','a','c',['o','n','d'],'a']
for i in li:
    print(i)
</code></pre>
<p>Output</p>
<pre><code>a
n
a
c
['o', 'n', 'd']
a
</code></pre>
<h3>2. del elements 3,4</h3>
<h3>3. del 4 and add ‘o’,‘n’ ‘a’</h3>
<h3>4. acces element ‘d’ from orignal list</h3>
<h3>5. find len of list</h3>
<pre><code class="language-python=">li = ['a','n','a','c',['o','n','d'],'a']
print(&quot;The length of list is: &quot;, len(li))
</code></pre>
<p>Output
<code>The length of list is:  6</code></p>
<h2>13) WAP using numpy to generate six random integers between 20-30.</h2>
<pre><code class="language-python=">import numpy as n
a=n.random.randint(20,30,6)
print(a)
</code></pre>
<p>Output
<code>[24 27 29 25 22 22]</code></p>
<h2>14) WAP to concatenate dictionaries to create new one.</h2>
<pre><code class="language-python">d1={1:10}
d2={2:20}
d3={3:30}
d4={}
for i in d1, d2, d3:
    d4. update(i)
print(d4)
</code></pre>
<p>Output
<code>{1: 10, 2: 20, 3: 30}</code></p>
<h2>15) WAP to print unique values of following dict.</h2>
<pre><code class="language-python">d={1:10, 2:20, 3:30, 4:30}
d={1:10, 2:20, 3:30, 4:30}
u=set()
for i in d:
    for val in d.values() :
        u. add(val)
print(u)
</code></pre>
<p>Output
<code>{10, 20, 30}</code></p>
<h2>16) Create 3x4 matrix filled with 10-21.</h2>
<pre><code class="language-python">import numpy as n
a=n.arange(10,22).reshape((3,4))
print(a)
</code></pre>
<p>Output</p>
<pre><code>[[10 11 12 13]
 [14 15 16 17]
 [18 19 20 21]]
</code></pre>
<h2>17) WAP to create class Emp having data members name, salary use constructor to accept values and display information.</h2>
<pre><code class="language-python">class Emp:
    def __init__(self, name, salary):
        self. name=name
        self. salary=salary
    def disp(self):
        print(&quot;Name:&quot;,self.name)
        print(&quot;Salary:&quot;,self.salary)
e=Emp(&quot;Abc&quot;,10000)
e. disp()
</code></pre>
<p>Output</p>
<pre><code>Name: Abc
Salary: 10000
</code></pre>]]></description>
  </item>
  <item>
    <title>Viva 6S</title>
    <link>https://anzenkodo.github.io/notes/programming/android/viva-6s.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h1>MAD VIVA QUESTION</h1>
<p>(thk to SaturoGojoo,AK,NEWBIEN00B)</p>
<h2>1) What is android?</h2>
<p>Android is a mobile operating system based on a modified version of the Linux kernel and other open source software, designed primarily for touchscreen mobile devices such as smartphones and tablets.</p>
<h2>2) Enlist Features of android?</h2>
<ul>
<li>Open Source</li>
<li>Beautiul UI</li>
<li>Connectivity</li>
<li>Storage</li>
<li>Multi-Touch</li>
<li>Multi-Tasking</li>
<li>Multi-Language</li>
<li>Resizable widgets</li>
<li>Messaging</li>
<li>Media Support</li>
<li>Web Browser</li>
</ul>
<h2>3) Explain android architecture?</h2>
<ul>
<li>
<p>Android architecture contains different number of components to support any android device needs. Android software contains an open-source Linux Kernel having collection of number of C/C++ libraries which are exposed through an application framework services.</p>
</li>
<li>
<p>The main components of android architecture are following:</p>
</li>
</ul>
<ol>
<li><strong>Applications:</strong> Applications is the top layer of android architecture. The pre-installed applications like home, contacts, camera, etc and third party applications will be installed on this layer only.</li>
<li><strong>Application framework:</strong> Application Framework provides several important classes which are used to create an Android application.</li>
<li><strong>Application runtime:</strong> Android Runtime environment contains components like core libraries and the Dalvik virtual machine(DVM).</li>
<li><strong>Platform libraries:</strong> The Platform Libraries includes various C/C++ core libraries and Java based libraries such as Media, Graphics, OpenGL etc. to provide a support for android development.</li>
<li><strong>Linux Kernel:</strong> The linux kernel manages all the available drivers such as display drivers, camera drivers, audio drivers, etc. which are required during the runtime.</li>
</ol>
<h2>4) Explain android sdk?</h2>
<ul>
<li>The Android software development kit(SDK)  allows developers to create applications for the Android platform. The Android SDK is the most important software of Android which is installed.</li>
<li>The Android SDK provides to test application API libraries and emulator documentation sample code developer tools and tutorials which helps us to build and test the debug apps from Android.</li>
<li>Android SDK provides the tools and application programming interface(API)  for developers to create applications on the Android platform using Java programming language.</li>
</ul>
<h2>5) What is Android AVD?</h2>
<ul>
<li>An AVD is an emulator configuration that enables to modules an actual device
by calling hardware and software option to be emulated by the Android
emulator.</li>
<li>The AVD manager is an interface that we can launch from android studio which
helps us to create and manage AVD.</li>
<li>An AVD contains hardware profile, system image, storage area, skin and other
properties.</li>
<li>AVD contains emulator for Wear OS, TV, Mobile Phones, Tables, Automotive.</li>
</ul>
<h3>Hardware profile</h3>
<ul>
<li>Hardware profile defines the characteristics of a device as shipped from the
factory of a device as shipped from the factory.</li>
<li>The AVD manager comes preloaded with certain hardware profile such as Pixel
device and we can define or customize the hardware profile as needed.</li>
</ul>
<h3>System image</h3>
<ul>
<li>A system image labelled with Google API includes access to Google Play
services.</li>
<li>A system image Labelled with Google Play logo in the Play Store includes the
Google Play Store apps and can access to the Google Play Services.</li>
</ul>
<h3>Storage Area</h3>
<ul>
<li>The AVD has dedicated storage area on our development machine.</li>
<li>It stores the devices data such as installed apps and settings, as well as
emulated and SD cards.</li>
<li>If needed we can use the AVD manager to wipe user data so that the devices has
the same data as if it was a new device.</li>
</ul>
<h2>6) What is emulator?</h2>
<p>The Android Emulator simulates Android devices on your computer so that you can test your application on a variety of devices and Android API levels without needing to have each physical device.</p>
<h2>7) Difference between JVM and dVM?</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android Operating system.</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based virtual machine architecture.</td>
<td>It is based on register based virtual machine architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>8) What are activities?</h2>
<ol>
<li>Activities dictate the UI and handles the user interaction to the smart phone screen.</li>
<li>Activities represent a single screen that user interact.</li>
</ol>
<h2>9) What are services?</h2>
<ul>
<li>A service is an application component which runs in the background.</li>
<li>There are three types of service in Android:</li>
</ul>
<h3>Foreground service</h3>
<ul>
<li>A foreground service performs some operation that is noticeable to the user.</li>
<li>For example, an audio app would use a foreground service to play an audio track.</li>
<li>Foreground services must display a Notification. Foreground services continue running even when the user isn’t interacting with the app.</li>
</ul>
<h3>Backgroud Service**</h3>
<ul>
<li>A background service performs an operation that isn’t directly noticed by the user.</li>
<li>For example, if an app used a service to compact its storage, that would usually be a background service.</li>
</ul>
<h3>Bound Service</h3>
<ul>
<li>A service is bound when an application component binds to it by calling bindService().</li>
<li>A bound service offers a client-server interface that allows components to interact with the service, send requests, receive results, and even do so across processes with interprocess communication (IPC).</li>
</ul>
<h2>10) What are intents(<code>Implict</code> and <code>explicit</code> intent)?</h2>
<h3>Implicit intent</h3>
<p>The implicit intent is the intent where instead of defining the exact components, you define the action that you want to perform for different activities.</p>
<h3>Explicit intent</h3>
<p>An explicit intent is an intent where you explicitly define the component that needs to be called by Android System. An explicit intent is one that you use to launch a specific app component, such s a particular activity or service in your app.</p>
<h2>11) Explain main Activity file ,manifest and layout file?</h2>
<p><strong>MainActivity file</strong>
The main activity. Java file is automatically kept in this folder by Android studio all the classes will be available here and Android studio will even bundle together the package so that we can work with the file without having to go through all the folders.</p>
<p><strong>Manifest file</strong>
It contains an Android manifest.xml file that is generated by Android studio when we create a project. This file contains the configuration parameters of a project such as Permission services and additional libraries.</p>
<p><strong>Layout file</strong>
Layout specifies the various widgets to be used in the UI and the relationships between such widgets and their containers. Layout files are stored in “res-&gt; layout” in the Android application.</p>
<h2>12) What are different types of UI compents?</h2>
<p><strong>TextView</strong>
TextView is a UI Component that displays the text to the user on their Display Screen.
<strong>EditText</strong>
EditText is a user interface control that allows the users to enter some text.
<strong>Button</strong>
This is a UI that is used to perform some action as soon as the user clicks on it.
<strong>ProgressBar</strong>
Progress bars are used to show progress of a task. For example, when you are uploading or downloading something from the internet, it is better to show the progress of download/upload to the user. In android there is a class called Progress Dialog that allows you to create progress bar.</p>
<h2>13) What are Layouts (<code>LinearLayout</code>, <code>AbsoluteLayout</code>, <code>TableLayout</code>, <code>FrameLayout</code>, <code>RelativeLayout</code>)?</h2>
<p><strong>LinearLayout</strong> is a view group that aligns all children in a single direction, vertically or horizontally.
<strong>AbsoluteLayout</strong> enables us to specify the exact location of its children.
<strong>TableLayout</strong> is a view that groups views into rows and columns.
<strong>RelativeLayout</strong> is a view group that displays child views in relative positions.
<strong>FrameLayout</strong> is a placeholder on screen that we can use to display a single view.</p>
<h2>14) Define: <code>textview</code>, <code>Edittextview</code>, <code>Button</code>, <code>Image button</code>, <code>checkbox</code>(attributes and methods)?</h2>
<ul>
<li><strong>TextView</strong> - This control is used to display text to the user.</li>
<li><strong>EditTextView</strong> - EditText is a predefined subclass of TextView that includes rich editing capabilities.</li>
<li><strong>Button</strong> - A push-button that can be pressed, or clicked, by the user to perform an action.</li>
<li><strong>ImageButton</strong> - An ImageButton is an AbsoluteLayout which enables you to specify the exact location of its children. This shows a button with an image (instead of text) that can be pressed or clicked by the user.</li>
<li><strong>CheckBox</strong> - An on/off switch that can be toggled by the user. You should use check box when presenting users with a group of selectable options that are not mutually exclusive.</li>
</ul>
<h2>15) Explain <code>listview</code>, <code>gridview</code>, <code>imageview</code>, <code>scrollview</code>?</h2>
<ul>
<li><strong>ListView</strong> - List of scrollable items can be displayed in Android using ListView. It helps you to displaying the data in the form of a scrollable list.</li>
<li><strong>GridView</strong> - It is a view group that display items in two dimensional scrolling grid (rows and columns), the grid items are not necessarily predetermined but they are automatically inserted to the layout using a ListAdapter.</li>
<li><strong>ImageView</strong> - It is used to display an image file in application.</li>
<li><strong>Scrollview</strong> - It is a view group that is used to make vertically scrollable views. A scroll view contains a single direct child only.</li>
</ul>
<h2>16) What is toast explain with example?</h2>
<ul>
<li>Toast is used to display information for a period of time.</li>
<li>It contains a message to be displayed quickly and disappears after specified period of time.</li>
<li>It does not block the user interaction.</li>
<li>Example:</li>
</ul>
<pre><code class="language-xml=">Toast.makeText(getApplicationContext(),&quot;Hello Javatpoint&quot;,Toast.LENGTH_SHORT).show();
</code></pre>
<h2>17) Explain activity lifecycle?</h2>
<!-- Android Activity Lifecycle is controlled by 7 methods of android.app.Activity class.
- The android Activity is the subclass of ContextThemeWrapper class.
- An activity is the single screen in android. It is like window or frame of Java.
- By the help of activity, you can place all your UI components or widgets in a single screen.

![Activity Lifecycle Image](https://i.imgur.com/VKu9fbr.png)-->
<ul>
<li><strong>7 lifecycle methods of android activity.</strong>
<ul>
<li><strong>onCreate</strong> - called when activity is first created.</li>
<li><strong>onStart</strong> - called when activity is becoming visible to the user.</li>
<li><strong>onResume</strong> - called when activity will start interacting with the user.</li>
<li><strong>onPause</strong> - called when activity is not visible to the user.</li>
<li><strong>onStop</strong> - called when activity is no longer visible to the user.</li>
<li><strong>onRestart</strong> - called after your activity is stopped, prior to start.</li>
<li><strong>onDestroy</strong> - called before the activity is destroyed.</li>
</ul>
</li>
</ul>
<h2>18) Explain broadcast receivers?</h2>
<p>Broadcast Receivers simply respond to broadcast messages from other applications or from the system itself. These messages are sometime called events or intents.</p>
<h3>Creating the Broadcast Receiver</h3>
<p>A broadcast receiver is implemented as a subclass of Broadcast Receiver class and overriding the <code>onReceive()</code> method where each message is received as an Intent object parameter.</p>
<h3>Registering Broadcast Receiver</h3>
<p>An application listens for specific broadcast intents by registering a broadcast receiver in AndroidManifest.xml file. Consider we are going to register MyReceiver for system generated event <code>ACTION_BOOT_COMPLETED</code> which is fired by the system once the Android system has completed the boot process.</p>
<h2>19) Explain content provider?</h2>
<p>Android system allows the content provider to store the application data in several ways. Users can manage to store the application data like images, audio, videos, and personal contact information by storing them in SQLite Database, in files, or even on a network. In order to share the data, content providers have certain permissions that are used to grant or restrict the rights to other applications to interfere with the data.</p>
<h2>20) What is sensors?</h2>
<ul>
<li>Most Android-powered devices have built-in sensors that measure motion, orientation, and various environmental conditions.</li>
<li>These sensors are capable of providing raw data with high precision and accuracy, and are useful if you want to monitor three-dimensional device movement or positioning, or you want to monitor changes in the ambient environment near a device.</li>
<li>There are three type of sensors in android:</li>
</ul>
<h3>Mostion sensors</h3>
<p>These sensors measure acceleration forces and rotational forces along three axes. This category includes accelerometers, gravity sensors, gyroscopes, and rotational vector sensors.</p>
<h3>Environmental sensors</h3>
<p>These sensors measure various environmental parameters, such as ambient air temperature and pressure, illumination, and humidity. This category includes barometers, photometers, and thermometers.</p>
<h3>Position sensors</h3>
<p>These sensors measure the physical position of a device. This category includes orientation sensors and magnetometers.</p>
<h2>21) What is location based services?</h2>
<p><strong>Location Based Services:</strong> Creating the Project, Getting the Maps API Key, Displaying the Map, Displaying the Zoom Control, Navigating to a Specific Location, Adding Markers, Getting Location,Geocoding and Reverse Geocoding, Getting Location Data, Monitoring Location.</p>
<h2>22) What is Geo code and reverse Geo code?</h2>
<h3>Geo code</h3>
<p>Geocoding is the process of converting addresses (like a street address) into geographic coordinates (like latitude and longitude), which you can use to place markers on a map, or position the map.</p>
<h3>Reverse Geo code</h3>
<p>Reverse geocoding is the process of converting geographic coordinates into a human-readable address.</p>
<h2>23) Enlist Steps to publish android application?</h2>
<p><strong>Step 1:</strong> First generate signed apk of your Android App to publish it on Play Store.
<strong>Step 2:</strong> Sign up for Google Play Console to publish and manage your Android App.
<strong>Step 3:</strong> Now click on Create Application.
<strong>Step 4:</strong> Now fill store listing details of your App which include Title, Short and Full description.
<strong>Step 5:</strong> Now Click on ready on publish along with save draft and click on Manage release.
<strong>Step 6:</strong> After Manage production click on edit release.
<strong>Step 7:</strong> Now click on review.
<strong>Step 8:</strong> After review click on Start Rollout to production.</p>
<h2>24) What is Date and time Picker?</h2>
<h3>Datepicker</h3>
<ul>
<li>Datepicker is a widget used to select a date. It allows to select date by day, month and year in your custom UI (user interface).</li>
<li>Methods of DatePicker inckudes getDayOfMonth(), getMonth(), getYear(), getFirstDayOfWeek()</li>
</ul>
<h3>Timepicker</h3>
<ul>
<li>Timepicker is a widget used for selecting the time of the day in either AM/PM mode or 24 hours mode. The displayed time consist of hours, minutes and clock format.</li>
<li>Methods of Timepicker inckudes setCurrentHour(), setHour(), setCurrentMinute(), getCurrentMinute()</li>
</ul>]]></description>
  </item>
  <item>
    <title>Pratical S6</title>
    <link>https://anzenkodo.github.io/notes/programming/android/pratical-s6.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h2>1. Write a program to place Name, Age, Mobile number linearly(vertical) on the display screen using Linear layout.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;16dp&quot;
    android:paddingRight=&quot;16dp&quot;
    android:paddingTop=&quot;16dp&quot;
    android:orientation=&quot;vertical&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:id=&quot;@+id/student_name&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Name:&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Age:&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Mobile Number:&quot; /&gt;
&lt;/LinearLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/01/program-to-place-ui-component-in-linear-vertical-layout-in-Android-Studio.html">Source</a></p>
<h2>2. Write a program to place Name, Age, Mobile number linearly(vertical) on the display screen using Absolute layout.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;AbsoluteLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;16dp&quot;
    android:paddingTop=&quot;16dp&quot;
    android:paddingRight=&quot;16dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:id=&quot;@+id/student_name&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;280dp&quot;
        android:text=&quot;Name:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;304dp&quot;
        android:text=&quot;Age:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;328dp&quot;
        android:text=&quot;Mobile Number:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
&lt;/AbsoluteLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/01/absolute-layout-centrally-in-Android-Studio.html">Source</a></p>
<h2>3. Write a program to display 5 students basic information in a table form using Table layout.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:collapseColumns=&quot;*&quot;
    android:shrinkColumns=&quot;*&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center_horizontal&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:text=&quot;10 Students Basic Information&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textSize=&quot;20dp&quot;
            android:textStyle=&quot;bold&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student Numbers&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Name&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;RollNo&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Age&quot;
            android:textColor=&quot;#000&quot;
            android:textStyle=&quot;bold&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:text=&quot;Student 1:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot;
            /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 2:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 3:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 4:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;&gt;
        &lt;TextView
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:text=&quot;Student 5:&quot;
            android:textColor=&quot;#86AD33&quot;
            android:textStyle=&quot;bold&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
        &lt;EditText
            android:layout_width=&quot;0dp&quot;
            android:layout_weight=&quot;1&quot;
            android:layout_height=&quot;wrap_content&quot; /&gt;
    &lt;/TableRow&gt;
&lt;/TableLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/02/program-to-display-10-students-basic-info-in-table-layout-android.html">Source</a></p>
<h2>4. Write a program to accept username and password from the end user using Text View and edit Text.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:padding=&quot;50dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center&quot;
        android:textSize=&quot;25dp&quot;
        android:text=&quot;Login Page&quot; /&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center_horizontal&quot;&gt;
        &lt;TextView
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:gravity=&quot;center&quot;
            android:text=&quot;Enter UserName:&quot; /&gt;

        &lt;EditText
            android:id=&quot;@+id/user&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:hint=&quot;abc@gmail.com&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;TableRow
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:gravity=&quot;center_horizontal&quot;&gt;
        &lt;TextView
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:gravity=&quot;center&quot;
            android:text=&quot;Enter Password:&quot; /&gt;
        &lt;EditText
            android:id=&quot;@+id/pass&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_weight=&quot;1&quot;
            android:hint=&quot;1234&quot; /&gt;
    &lt;/TableRow&gt;
    &lt;Button
        android:id=&quot;@+id/btn1&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_marginBottom=&quot;172dp&quot;
        android:text=&quot;Login&quot; /&gt;
&lt;/TableLayout&gt;
</code></pre>
<pre><code class="language-java">import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
   EditText user,pass;
    Button b;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        b= findViewById(R.id.btn1);
        user = findViewById(R.id.user);
        pass = findViewById(R.id.pass);
        b.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(user.getText().toString().equals(&quot;atharva&quot;) &amp; pass.getText().toString().equals(&quot;1234&quot;))
?
                {
                    Toast.makeText( getApplicationContext(),&quot;Login Sucessful&quot;,Toast.LENGTH_SHORT).show();
                }
                else
                {
                    Toast.makeText( getApplicationContext(),&quot;Login UnSucessful&quot;,Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
}
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/03/program-to-accept-username-and-password-in-Android-Studio.html">Source</a></p>
<h2>5. Write a program to create a toggle button to display ON/OFF Bluetooth on the display screen.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.MainActivity&quot;
    android:padding=&quot;20dp&quot;&gt;
    &lt;ToggleButton
        android:id=&quot;@+id/toggleButton&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;50dp&quot;
        android:text=&quot;ToggleButton&quot;
        android:textOn=&quot;ON&quot;
        android:textOff=&quot;OFF&quot;
        android:textSize=&quot;20sp&quot;
        android:layout_centerInParent=&quot;true&quot;/&gt;
    &lt;TextView android:id=&quot;@+id/textView&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_below=&quot;@id/toggleButton&quot;
        android:text=&quot;Bluetooth is OFF&quot;
        android:gravity=&quot;center_horizontal&quot;
        android:layout_marginTop=&quot;20dp&quot;
        android:textSize=&quot;20sp&quot;
        android:textColor=&quot;@color/colorAccent&quot;/&gt;
&lt;/RelativeLayout&gt;
</code></pre>
<pre><code class="language-java">package com.example.togglebuttonbluetooth;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.CompoundButton;
import android.widget.TextView;
import android.widget.ToggleButton;

public class MainActivity extends AppCompatActivity {

    ToggleButton toggleButton;
    TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        toggleButton = findViewById(R.id.toggleButton);
        textView = findViewById(R.id.textView);

        toggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

                if(isChecked)
                {
                    textView.setText(&quot;Bluetooth is &quot; + toggleButton.getTextOn());
                }
                else
                {
                    textView.setText(&quot;Bluetooth is &quot; + toggleButton.getTextOff());
                }
            }
        });
    }
}
</code></pre>
<p><a href="http://www.programmingtutorials4u.com/android-programming/programs/android-toggle-button/">Source</a></p>
<h2>6. Write a program to create a login form for a social networking site.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:background=&quot;#495B8F&quot;
    android:padding=&quot;20dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;TextView android:id=&quot;@+id/logo&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;80dp&quot;
        android:text=&quot;F A C E B O O K&quot;
        android:gravity=&quot;center&quot;
        android:textSize=&quot;40sp&quot;
        android:textStyle=&quot;bold&quot;
        android:layout_marginTop=&quot;40dp&quot;
        android:textColor=&quot;@android:color/white&quot;/&gt;

    &lt;EditText
        android:id=&quot;@+id/username&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;60dp&quot;
        android:layout_below=&quot;@id/logo&quot;
        android:layout_marginTop=&quot;30dp&quot;
        android:background=&quot;@android:color/white&quot;
        android:fontFamily=&quot;monospace&quot;
        android:hint=&quot;Email or phone number&quot;
        android:padding=&quot;10dp&quot;
        android:textSize=&quot;22sp&quot; /&gt;

    &lt;EditText
        android:id=&quot;@+id/password&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;60dp&quot;
        android:layout_below=&quot;@id/username&quot;
        android:background=&quot;@android:color/white&quot;
        android:fontFamily=&quot;monospace&quot;
        android:hint=&quot;Password&quot;
        android:padding=&quot;10dp&quot;
        android:layout_marginTop=&quot;20dp&quot;
        android:textSize=&quot;22sp&quot; /&gt;

    &lt;Button android:id=&quot;@+id/btnLogin&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;50dp&quot;
        android:layout_below=&quot;@id/password&quot;
        android:layout_marginTop=&quot;30dp&quot;
        android:text=&quot;Log In&quot;
        android:background=&quot;#6D9ADD&quot;
        android:textColor=&quot;@android:color/white&quot;
        android:textSize=&quot;18sp&quot;/&gt;

    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_centerHorizontal=&quot;true&quot;
        android:text=&quot;Forgot Password?&quot;
        android:textColor=&quot;@android:color/white&quot;
        android:layout_below=&quot;@id/btnLogin&quot;
        android:layout_marginTop=&quot;10dp&quot;
        android:textSize=&quot;16sp&quot;/&gt;

&lt;/RelativeLayout&gt;
</code></pre>
<pre><code class="language-java">package com.example.socialnetworkingapp;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}
</code></pre>
<p><a href="http://www.programmingtutorials4u.com/android-programming/programs/social-networking-login-form/">Source</a></p>
<h2>7. Write a program to show five checkboxes and toast selected checkbox.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:orientation=&quot;vertical&quot;
    android:padding=&quot;10dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;CheckBox
        android:id=&quot;@+id/cb1&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Android&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;

    &lt;CheckBox
        android:id=&quot;@+id/cb2&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Pythpn&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;
    &lt;CheckBox
        android:id=&quot;@+id/cb3&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;PHP&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;
    &lt;CheckBox
        android:id=&quot;@+id/cb4&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;C&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;
    &lt;CheckBox
        android:id=&quot;@+id/cb5&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Java&quot;
        android:textSize=&quot;25dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;
        android:checked=&quot;false&quot;/&gt;

    &lt;Button
        android:id=&quot;@+id/btn&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Submit&quot;
        android:textSize=&quot;35dp&quot;
        android:layout_gravity=&quot;center&quot;
        android:padding=&quot;10dp&quot;/&gt;
&lt;/LinearLayout&gt;
</code></pre>
<p><a href="https://codingatharva.blogspot.com/2020/03/program-demonstrate-checkboxes-in-android-studio.html">Source</a></p>
<h2>8. Write a program to display circular progress bar.</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:gravity=&quot;center_horizontal&quot;
    android:orientation=&quot;vertical&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;RelativeLayout
        android:id=&quot;@+id/progress_layout&quot;
        android:layout_width=&quot;200dp&quot;
        android:layout_height=&quot;200dp&quot;
        android:layout_margin=&quot;100dp&quot;&gt;

        &lt;!--progress bar implementation--&gt;
        &lt;ProgressBar
            android:id=&quot;@+id/progress_bar&quot;
            style=&quot;?android:attr/progressBarStyleHorizontal&quot;
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;match_parent&quot;
            android:background=&quot;@drawable/circular_shape&quot;
            android:indeterminate=&quot;false&quot;
            android:progressDrawable=&quot;@drawable/circular_progress_bar&quot;
            android:textAlignment=&quot;center&quot; /&gt;

        &lt;!--Text implementation in center of the progress bar--&gt;
        &lt;TextView
            android:id=&quot;@+id/progress_text&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_alignParentLeft=&quot;true&quot;
            android:layout_alignParentRight=&quot;true&quot;
            android:layout_centerVertical=&quot;true&quot;
            android:gravity=&quot;center&quot;
            android:text=&quot;---&quot;
            android:textColor=&quot;@color/colorPrimary&quot;
            android:textSize=&quot;28sp&quot;
            android:textStyle=&quot;bold&quot; /&gt;
    &lt;/RelativeLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>
<pre><code class="language-java">import android.os.Bundle;
import android.os.Handler;
import android.widget.ProgressBar;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private ProgressBar progressBar;
    private TextView progressText;
    int i = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // set the id for the progressbar and progress text
        progressBar = findViewById(R.id.progress_bar);
        progressText = findViewById(R.id.progress_text);

        final Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                // set the limitations for the numeric
                // text under the progress bar
                if (i &lt;= 100) {
                    progressText.setText(&quot;&quot; + i);
                    progressBar.setProgress(i);
                    i++;
                    handler.postDelayed(this, 200);
                } else {
                    handler.removeCallbacks(this);
                }
            }
        }, 200);
    }
}
</code></pre>
<p><a href="https://www.geeksforgeeks.org/how-to-implement-circular-progressbar-in-android/">Source</a></p>
<h2>9. Write a program to display 15 buttons using Grid view.</h2>
<p><a href="https://codingatharva.blogspot.com/2020/03/program-to-display-15-buttons-using-grid-view-in-android-studio.html">Source</a></p>
<h2>10. Write a program to display a toast message</h2>
<pre><code class="language-java">import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    Button b1;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        b1 = (Button) findViewById(R.id.toast_button);

        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(MainActivity.this,&quot;You just Toasted me!!!&quot;,Toast.LENGTH_LONG).show();
                /*Another way to display a Toast message
                    Toast t=Toast.makeText(MainActivity.this,&quot;You just Toasted me!!!&quot;,Toast.LENGTH_LONG);
                    t.show();
                */
            }
        });
    }

}
</code></pre>
<pre><code class="language-xml">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:id=&quot;@+id/activity_main&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;
    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;
    tools:context=&quot;codedost.toast.MainActivity&quot;&gt;

    &lt;Button
        android:id=&quot;@+id/toast_button&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Toast me!&quot;
        android:layout_centerVertical=&quot;true&quot;
        android:layout_centerHorizontal=&quot;true&quot;
    /&gt;

&lt;/RelativeLayout&gt;
</code></pre>
<p><a href="https://www.javatpoint.com/android-toast-example">Source</a></p>]]></description>
  </item>
  <item>
    <title>Final</title>
    <link>https://anzenkodo.github.io/notes/programming/android/final.html</link>
    <pubDate>2022-12-20T05:31:52.793Z</pubDate>
    <description><![CDATA[<h1>1. Attempt any FIVE of the following: 10</h1>
<h2>a) List any four features of Android operating system.</h2>
<ul>
<li>Open Source</li>
<li>Beautiul UI</li>
<li>Connectivity</li>
<li>Storage</li>
<li>Multi-Touch</li>
<li>Multi-Tasking</li>
<li>Multi-Language</li>
<li>Resizable widgets</li>
<li>Messaging</li>
<li>Media Support</li>
<li>Web Browser</li>
</ul>
<h2>b) Define Dalvik Virtual Machine (DVM).</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android Operating system.</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based virtual machine architecture.</td>
<td>It is based on register based virtual machine architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>c) List any four folders from directory structure of Android project and elaborate in one line.</h2>
<h3>Manifests Folder</h3>
<ul>
<li>Manifests folder contains AndroidManifest.xml for creating our android application.</li>
<li>This file contains information about our application such as the Android version, metadata, states package for Kotlin file, and other application components.</li>
<li>It acts as an intermediator between android OS and our application.</li>
</ul>
<h3>Java folder</h3>
<ul>
<li>The Java folder contains all the java and Kotlin source code (.java) files that we create during the app development, including other Test files.</li>
</ul>
<h3>Resource (res) folder</h3>
<ul>
<li>The resource folder is the most important folder because it contains all the non-code sources like images, XML layouts, and UI strings for our android application.</li>
</ul>
<h3>res/drawable folder</h3>
<ul>
<li>It contains the different types of images used for the development of the application.</li>
</ul>
<h2>d) List any four attributes of check box.</h2>
<ul>
<li>text - This is the Text to display.</li>
<li>id - This supplies an identifier name for this view.</li>
<li>visibility - This controls the initial visibility of the view.</li>
<li>editable - If set, specifies that this TextView has an input method.</li>
</ul>
<h2>e) Draw diagram of activity life cycle.</h2>
<pre><code>                             ┌┬────────┬┐
                             ││Activity││
                             ││launched││
                             └┴────┬───┴┘
                                   │
                              ┌────▼─────┐
         ┌────────────────────►onCreate()│
         │                    └────┬─────┘
         │                         │
         │                    ┌────▼────┐                    ┌───────────┐
         │                    │onStart()◄────────────────────┤onRestart()│
         │                    └────┬────┘                    └───────▲───┘
         │                         │                                 │
User navigates                ┌────▼─────┐                           │
to the activity               │onResume()◄───────────────┐           │
         │                    └────┬─────┘               │           │
         │                         │                     │           │
  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │
  ││App process││            ││Activity││                │           │
  ││killed     ││            ││Running ││                │           │
  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │
         │                         │                     │           │
         │                         ▼                     │           │
Apps with higher priority   Another activity comes   User returns    │
need memory                 into the foreground      to the activity │
         │                         │                     │           │
         │                         │                     │           │
         │                    ┌────▼────┐                │           │
         │                    │onPause()├────────────────┘           │
         │                    └────┬────┘                            │
         │                         │                                 │
         │                         │                                 │
         │                  The activity is                          │
         │                  no longer visible                        │
         │                         │                        User navigates
         │                         │                        to the activity
         │                    ┌────▼───┐                             │
         └────────────────────┤onStop()├─────────────────────────────┘
                              └────┬───┘
                                   │
                                   │
                            The activity is finishing or
                            being destroyed by the system
                                   │
                                   │
                              ┌────▼──────┐
                              │onDestroy()│
                              └────┬──────┘
                                   │
                             ┌┬────▼────┬┐
                             ││Activity ││
                             ││Shut Down││
                             └┴─────────┴┘
</code></pre>
<h2>f) State syntax to display built in zoom control.</h2>
<p>In Android, Zoom Control is a class that has some set of methods that are used to control the zoom functionality.</p>
<pre><code class="language-java">ZoomControl zoomControls = (ZoomControls) findViewById(R.id.simpleZoomControl);
</code></pre>
<h2>g) Name two classes used to play audio and video in Android.</h2>
<ul>
<li>The following classes are used to play sound and video in the Android framework:
<ul>
<li>MediaPlayer - This class is the primary API for playing sound and video.</li>
<li>AudioManager - This class manages audio sources and audio output on a device.</li>
</ul>
</li>
</ul>
<h1>2. Attempt any THREE of the following: 12</h1>
<h2>a) Describe Android architecture with diagram.</h2>
<ul>
<li>Android architecture contains different number of components to support any android device needs. Android software contains an open-source Linux Kernel having collection of number of C/C++ libraries which are exposed through an application framework services.</li>
<li>The main components of android architecture are following:</li>
</ul>
<ol>
<li><strong>Applications:</strong> Applications is the top layer of android architecture. The pre-installed applications like home, contacts, camera, etc and third party applications will be installed on this layer only.</li>
<li><strong>Application framework:</strong> Application Framework provides several important classes which are used to create an Android application.</li>
<li><strong>Application runtime:</strong> Android Runtime environment contains components like core libraries and the Dalvik virtual machine(DVM).</li>
<li><strong>Platform libraries:</strong> The Platform Libraries includes various C/C++ core libraries and Java based libraries such as Media, Graphics, OpenGL etc. to provide a support for android development.</li>
<li><strong>Linux Kernel:</strong> The linux kernel manages all the available drivers such as display drivers, camera drivers, audio drivers, etc. which are required during the runtime.</li>
</ol>
<h2>b) Differentiate between DVM and JVM</h2>
<table>
<thead>
<tr>
<th>JVM</th>
<th>DVM</th>
</tr>
</thead>
<tbody>
<tr>
<td>JVM supports multiple OS</td>
<td>DVM supports only Android Operating system.</td>
</tr>
<tr>
<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>
<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>
</tr>
<tr>
<td>It is based on stack based virtual machine architecture.</td>
<td>It is based on register based virtual machine architecture.</td>
</tr>
<tr>
<td>JVM runs on more memory</td>
<td>DVM runs on less memory.</td>
</tr>
<tr>
<td>The executable format of JVM is JAR.</td>
<td>The executable format of DVM is APK.</td>
</tr>
<tr>
<td>JVM has different constant pools.</td>
<td>DVM has common constant pool.</td>
</tr>
<tr>
<td>It runs <code>.class</code> byte code directly.</td>
<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>
</tr>
</tbody>
</table>
<h2>c) List and elaborate steps to deploy in Android application on Google play store.</h2>
<ul>
<li>Step 1 - First generate signed apk of your Android App to publish it on Play Store.</li>
<li>Step 2 - Sign up for Google Play Console to publish and manage your Android App.</li>
<li>Step 3 - Now click on Create Application.</li>
<li>Step 4 - Now fill store listing details of your App which include Title, Short and Full description.</li>
<li>Step 5 - Now Click on ready on publish along with save draft and click on Manage release.</li>
<li>Step 6 - After Manage production click on edit release.</li>
<li>Step 7 - Now click on review.</li>
<li>Step 8 - After review click on Start Rollout to production.</li>
</ul>
<h2>d) Describe with example, how to create a simple database in SQLite (Assume suitable data).</h2>
<ul>
<li>SQLite is a opensource SQL database that stores data to a text file on a device. Android comes in with built in SQLite database implementation.</li>
<li>SQLite supports all the relational database features.</li>
</ul>
<pre><code class="language-java">SQLiteDatabase mydatabase = openOrCreateDatabase(&quot;your database name&quot;,MODE_PRIVATE,null);
</code></pre>
<h1>3. Attempt any THREE of the following: 12</h1>
<h2>a) Write down the steps to install and configure Android studio.</h2>
<ul>
<li>Head over to <a href="https://developer.android.com/studio">https://developer.android.com/studio</a> to get the Android Studio executable or zip file.</li>
<li>Click on the Download Android Studio Button.</li>
<li>After the downloading has finished, open the file from downloads and run it. It will prompt the following dialog box.</li>
<li>Once “Finish” is clicked, choose the ‘Don’t import Settings option’.</li>
<li>This will start the Android Studio.</li>
<li>After it has found the SDK components, it will redirect to the Welcome dialog box.</li>
<li>Now it is time to download the SDK components.</li>
<li>Click on Start a new Android Studio project to build a new app.</li>
</ul>
<h2>b) State syntax to create Text View and Image button with any two attributes of each.</h2>
<h3>TextView</h3>
<pre><code class="language-xml">&lt;TextView
    android:id=&quot;@+id/student_name&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:text=&quot;Name:&quot; /&gt;
</code></pre>
<ul>
<li>text -  Sets text of the Textview</li>
<li>id - Gives a unique ID to the Textview</li>
</ul>
<h3>ImageButton</h3>
<pre><code class="language-xml">&lt;ImageButton
  android:id=&quot;@+id/imageButton&quot;
  android:src=&quot;@drawable/button&quot;
  android:layout_height=&quot;wrap_content&quot;
  android:layout_width=&quot;wrap_content&quot;/&gt;
</code></pre>
<ul>
<li>background - This is a drawable to use as the background.</li>
<li>id - Gives a unique ID to the Textview</li>
</ul>
<h2>c) Describe Android service life cycle along with diagram.</h2>
<ul>
<li>A service is an application component which runs withour direst interaction with the user in the background.</li>
<li>Services are used for repetitive and potentially long running operations:
<ul>
<li>Internet downloads</li>
<li>Checking for new data</li>
<li>Data processing</li>
<li>Updating content</li>
<li>Providers and the like</li>
</ul>
</li>
<li>They typically run in the background to perform long-running operations or work for remote processes.</li>
</ul>
<pre><code>                             ┌┬────────┬┐
                             ││Activity││
                             ││launched││
                             └┴────┬───┴┘
                                   │
                              ┌────▼─────┐
         ┌────────────────────►onCreate()│
         │                    └────┬─────┘
         │                         │
         │                    ┌────▼────┐                    ┌───────────┐
         │                    │onStart()◄────────────────────┤onRestart()│
         │                    └────┬────┘                    └───────▲───┘
         │                         │                                 │
User navigates                ┌────▼─────┐                           │
to the activity               │onResume()◄───────────────┐           │
         │                    └────┬─────┘               │           │
         │                         │                     │           │
  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │
  ││App process││            ││Activity││                │           │
  ││killed     ││            ││Running ││                │           │
  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │
         │                         │                     │           │
         │                         ▼                     │           │
Apps with higher priority   Another activity comes   User returns    │
need memory                 into the foreground      to the activity │
         │                         │                     │           │
         │                         │                     │           │
         │                    ┌────▼────┐                │           │
         │                    │onPause()├────────────────┘           │
         │                    └────┬────┘                            │
         │                         │                                 │
         │                         │                                 │
         │                  The activity is                          │
         │                  no longer visible                        │
         │                         │                        User navigates
         │                         │                        to the activity
         │                    ┌────▼───┐                             │
         └────────────────────┤onStop()├─────────────────────────────┘
                              └────┬───┘
                                   │
                                   │
                            The activity is finishing or
                            being destroyed by the system
                                   │
                                   │
                              ┌────▼──────┐
                              │onDestroy()│
                              └────┬──────┘
                                   │
                             ┌┬────▼────┬┐
                             ││Activity ││
                             ││Shut Down││
                             └┴─────────┴┘
</code></pre>
<h2>d) State and elaborate the syntax of required class and methods for Geocoding.</h2>
<ul>
<li>A class for handling geocoding and reverse geocoding.</li>
<li>Geocoding is the process of transforming a street address or other description of a location into a (latitude, longitude) coordinate.</li>
</ul>
<pre><code class="language-java">public final class Geocoder
extends Object
</code></pre>
<h1>4. Attempt any THREE of the following: 12</h1>
<h2>a) Explain with example, code to create GUI using absolute layout (Assume suitable data).</h2>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;AbsoluteLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;16dp&quot;
    android:paddingTop=&quot;16dp&quot;
    android:paddingRight=&quot;16dp&quot;
    tools:context=&quot;.MainActivity&quot;&gt;
    &lt;TextView
        android:id=&quot;@+id/student_name&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;280dp&quot;
        android:text=&quot;Name:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;304dp&quot;
        android:text=&quot;Age:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_x=&quot;125dp&quot;
        android:layout_y=&quot;328dp&quot;
        android:text=&quot;Mobile Number:&quot;
        android:textColor=&quot;#86AD33&quot;
        android:textSize=&quot;20dp&quot;
        android:textStyle=&quot;bold&quot; /&gt;
&lt;/AbsoluteLayout&gt;
</code></pre>
<h2>b) Write a program to demonstrate Date and Time picker.</h2>
<h3>Date Picker</h3>
<ul>
<li>Android Date Picker allows you to select the date consisting of day, month and
year in your custom user interface.</li>
<li>Methods of DatePicker:
<ul>
<li><strong>getDayOfMonth()</strong> - This method gets the selected day of month.</li>
<li><strong>getMonth()</strong> - This method gets the selected month.</li>
<li><strong>getYear()</strong> - This method gets the selected year.</li>
<li><strong>getFirstDayOfWeek()</strong> - This method returns first day of the week.</li>
<li><strong>getCalendarView()</strong> - This method returns calender View.</li>
</ul>
</li>
</ul>
<h3>TimePicker</h3>
<ul>
<li>Android Time Picker allows us to select the time of day in either 24h or AM/PM
mode.</li>
<li>The time consists of hours, minutes and clock format.</li>
<li>Methods of TimePicker</li>
</ul>
<ol>
<li><strong>setCurrentHour()</strong> - This method sets the current hour.</li>
<li>setCurrentMinute() - This method sets the current minute.</li>
<li><strong>is24HoursView()</strong> - This method returns true if this 24 hour view else
false.</li>
<li><strong>isEnabled()</strong> - This method returns the enabled status for this view.</li>
</ol>
<h2>c) Describe multimedia framework of Android with diagram.</h2>
<figure data-type="image"><img src="https://source.android.com/static/docs/core/media/images/ape_media_buffer_alloc_n.png" alt="Multimedia framework of Android diagram" loading="lazy" decoding="async"></figure>
<h2>d) Discuss developer console with at least four features.</h2>
<ul>
<li>Multiple User Accounts</li>
<li>Store Listing Details</li>
<li>Upload and Instantly Publish</li>
<li>Alpha and Beta Testing</li>
<li>Multiple APK Support</li>
<li>Selling and Pricing Your Products</li>
<li>In-app Products</li>
<li>Distribution Controls</li>
<li>User Reviews and Crash Reports</li>
<li>App Statistics</li>
</ul>
<h2>e) Write a program to demonstrate declaring and using permissions with any relevant example.</h2>
<p>AndroidManifest.xml</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
            package=&quot;org.geeksforgeeks.requestPermission&quot;&gt;

        &lt;!--Declaring the required permissions--&gt;
        &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
        &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;
        &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;

        &lt;application
            android:allowBackup=&quot;true&quot;
            android:icon=&quot;@mipmap/ic_launcher&quot;
            android:label=&quot;@string/app_name&quot;
            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
            android:supportsRtl=&quot;true&quot;
            android:theme=&quot;@style/AppTheme&quot;&gt;

            &lt;activity
                android:name=&quot;.MainActivity&quot;&gt;

                &lt;intent-filter&gt;
                    &lt;action
                        android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                    &lt;category
                        android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
                &lt;/intent-filter&gt;

            &lt;/activity&gt;
        &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
<p>activity_main.xml</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.MainActivity&quot;&gt;

    &lt;!-- To show toolbar--&gt;
    &lt;android.support.v7.widget.Toolbar
        android:id=&quot;@+id/toolbar&quot;
        android:layout_width=&quot;match_parent&quot;
        android:background=&quot;@color/colorPrimary&quot;
        app:title=&quot;GFG | Permission Example&quot;
        app:titleTextColor=&quot;@android:color/white&quot;
        android:layout_height=&quot;?android:attr/actionBarSize&quot;/&gt;

    &lt;!--Button to request storage permission--&gt;
    &lt;Button
        android:id=&quot;@+id/storage&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Storage&quot;
        android:layout_marginTop=&quot;16dp&quot;
        android:padding=&quot;8dp&quot;
        android:layout_below=&quot;@id/toolbar&quot;
        android:layout_centerHorizontal=&quot;true&quot;/&gt;

    &lt;!--Button to request camera permission--&gt;
    &lt;Button
        android:id=&quot;@+id/camera&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Camera&quot;
        android:layout_marginTop=&quot;16dp&quot;
        android:padding=&quot;8dp&quot;
        android:layout_below=&quot;@id/storage&quot;
        android:layout_centerHorizontal=&quot;true&quot;/&gt;

&lt;/RelativeLayout&gt;
</code></pre>
<p>MainActivity.java</p>
<pre><code class="language-java">import android.Manifest;
import android.content.pm.PackageManager;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    // Defining Buttons
    private Button storage, camera;

    // Defining Permission codes.
    // We can give any value
    // but unique for each permission.
    private static final int CAMERA_PERMISSION_CODE = 100;
    private static final int STORAGE_PERMISSION_CODE = 101;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        storage = findViewById(R.id.storage);
        camera = findViewById(R.id.camera);

        // Set Buttons on Click Listeners
        storage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                checkPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE);
            }
        });

        camera.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v)
            {
                checkPermission(Manifest.permission.CAMERA, CAMERA_PERMISSION_CODE);
            }
        });
    }

    // Function to check and request permission.
    public void checkPermission(String permission, int requestCode)
    {
        if (ContextCompat.checkSelfPermission(MainActivity.this, permission) == PackageManager.PERMISSION_DENIED) {

            // Requesting the permission
            ActivityCompat.requestPermissions(MainActivity.this, new String[] { permission }, requestCode);
        }
        else {
            Toast.makeText(MainActivity.this, &quot;Permission already granted&quot;, Toast.LENGTH_SHORT).show();
        }
    }

    // This function is called when the user accepts or decline the permission.
    // Request Code is used to check which permission called this function.
    // This request code is provided when the user is prompt for permission.

    @Override
    public void onRequestPermissionsResult(int requestCode,
                                        @NonNull String[] permissions,
                                        @NonNull int[] grantResults)
    {
        super.onRequestPermissionsResult(requestCode,
                                        permissions,
                                        grantResults);

        if (requestCode == CAMERA_PERMISSION_CODE) {
            if (grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(MainActivity.this, &quot;Camera Permission Granted&quot;, Toast.LENGTH_SHORT) .show();
            }
            else {
                Toast.makeText(MainActivity.this, &quot;Camera Permission Denied&quot;, Toast.LENGTH_SHORT) .show();
            }
        }
        else if (requestCode == STORAGE_PERMISSION_CODE) {
            if (grantResults.length &gt; 0
                &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Toast.makeText(MainActivity.this, &quot;Storage Permission Granted&quot;, Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(MainActivity.this, &quot;Storage Permission Denied&quot;, Toast.LENGTH_SHORT).show();
            }
        }
    }
}
</code></pre>]]></description>
  </item>
  </channel>
</rss>
