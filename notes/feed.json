{
  "version": "https://jsonfeed.org/version/1",
  "title": "AK#Notes",
  "home_page_url": "https://anzenkodo.github.io/notes",
  "feed_url": "https://anzenkodo.github.io/notes/feed.json",
  "description": "This my personal website where I post my notes about thing that I have learn.",
  "favicon": "https://anzenkodo.github.io/notes/favicon.png",
  "icon": "https://anzenkodo.github.io/notes/favicon.png",
  "author": {
    "name": "Axel",
    "url": "https://AnzenKodo.github.io/"
  },
  "items": [
    {
      "id": "https://anzenkodo.github.io/notes/",
      "url": "https://anzenkodo.github.io/notes/",
      "title": "Home",
      "content_html": "<p>This my personal website where I post my notes about thing that I have learn.</p>\n<h2>Features</h2>\n<ul>\n<li>Easy to:\n<ul>\n<li>Setup</li>\n<li>Configure</li>\n<li>Write</li>\n</ul>\n</li>\n<li>Supports:\n<ul>\n<li>Tags</li>\n<li>Search (Power by <a href=\"https://duckduckgo.com/\">DuckDuckGo</a>)</li>\n<li>Canonical</li>\n<li><a href=\"https://ogp.me/\">Open Graph</a></li>\n<li>Analytics</li>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a></li>\n</ul>\n</li>\n<li>Auto generate:\n<ul>\n<li>GitHub Pages Actions file</li>\n<li>Favicon</li>\n<li>Sitemap</li>\n<li>404 page</li>\n<li>CSS</li>\n<li><code>mainfest.json</code> file</li>\n<li>Feeds\n<ul>\n<li>RSS</li>\n<li>JSON</li>\n<li>Atom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>No Client side JavaScript</li>\n<li>Minified HTML &amp; Inline CSS</li>\n<li>Lightweight</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<ul>\n<li>Download deno from <a href=\"https://deno.land/\">https://deno.land/</a> and install it.</li>\n<li>After installing deno run following commands.</li>\n</ul>\n<pre><code class=\"language-sh\"># Install the dblog\ndeno run https://deno.land/x/dblog/install.js # Add deno to path, if you didn't already.\n\n# See all the options that are available\ndblog --help\n\n# Setup the your blog (Skip this if already your blog setup)\ndblog --setup\n\n# Make your blog and Run on localhost\ndblog --serve\n</code></pre>\n<h3>Update</h3>\n<p>To update dblog, rerun the installation command.</p>\n<pre><code class=\"language-sh\">deno run https://deno.land/x/dblog/install.js\n</code></pre>\n<h3>Run dblog without installing dblog</h3>\n<pre><code class=\"language-sh\">deno run -A https://deno.land/x/dblog/mod.js --help\n</code></pre>\n<h2>Live Demo &amp; Folder</h2>\n<ul>\n<li><a href=\"https://anzenkodo.github.io/dblog\">Live Demo</a></li>\n<li><a href=\"https://github.com/AnzenKodo/dblog/tree/gh-pages\">Generated Files</a></li>\n</ul>\n<h2>Configuration</h2>\n<p>Place <code>config.json</code> in root folder to edit default configuration. The\n<code>config.json</code> is optional.</p>\n<p><strong>The <code>config.json</code> with default configuration:</strong></p>\n<pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;dblog&quot;,\n  &quot;start_url&quot;: &quot;https://AnzenKodo.github.io/dblog/&quot;,\n  &quot;description&quot;: &quot;dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.&quot;,\n  &quot;email&quot;: &quot;&quot;,\n  &quot;author&quot;: &quot;AnzenKodo&quot;,\n  &quot;posts&quot;: &quot;./posts&quot;,\n  &quot;output&quot;: &quot;./site&quot;,\n  &quot;favicon&quot;: &quot;favicon.svg&quot;,\n  &quot;lang&quot;: &quot;en-US&quot;,\n  &quot;port&quot;: 8000,\n  &quot;background&quot;: &quot;#ffffff&quot;,\n  &quot;foreground&quot;: &quot;#000000&quot;,\n  &quot;theme&quot;: &quot;#01a252&quot;,\n  &quot;footer&quot;: &quot;&lt;p&gt;Made by &lt;a href=\\&quot;https://AnzenKodo.github.io/AnzenKodo\\&quot;&gt;AnzenKodo&lt;/a&gt; under &lt;a href=\\&quot;https://anzenkodo.github.io/dblog/LICENSE\\&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;\\n&quot;,\n  &quot;page404&quot;: &quot;404 Page Not Found, Sorry :(&quot;,\n  &quot;backup&quot;: false,\n  &quot;exclude&quot;: [\n    &quot;config.json&quot;,\n    &quot;backup.json&quot;\n  ],\n  &quot;nav&quot;: {},\n  &quot;head&quot;: &quot;&quot;\n}\n</code></pre>\n<p><strong>Note:</strong> Every option is optional.</p>\n<ul>\n<li><strong>name</strong> - Name of your blog.</li>\n<li><strong>start_url</strong> - Start URL of your site. <em>Example:</em> ‘<a href=\"https://example.com/\">https://example.com/</a>’,\n‘<a href=\"https://blog.example.com/\">https://blog.example.com/</a>’, ‘<a href=\"https://example.com/blog/\">https://example.com/blog/</a>’</li>\n<li><strong>email</strong> - Your email address. This will enable ‘Reply with Email’ button in\nposts.</li>\n<li><strong>author</strong> - Your name or username.</li>\n<li><strong>posts</strong> - Path of posts.</li>\n<li><strong>output</strong> - Folder where your blog build will be placed. <em>Example:</em> ‘./blog’,\n‘…/site/blog’, ‘site/blog’.</li>\n<li><strong>favicon</strong> - <em><strong>Recommended 500x500px</strong></em>. Favicon location. <em>If empty,\ngenerated favicon will be used</em>. <em>Example:</em> ‘./favicon.png’,\n‘./static/favicon.icon’, ‘…/favicon.jpg’.</li>\n<li><strong>lang</strong> - Blog language in ‘RFC 5646’ format. Example: ‘ja’ for Japanese,\n‘sv’ for Swedish, ‘it’ for Italian. See\n<a href=\"https://wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags\">List of common primary language subtags in Wikipedia</a></li>\n<li><strong>footer</strong> - Footer of your website. <em>Supports CommonMark Markdown format</em>.\n<em>Example:</em>\n<code>Made by [AnzenKodo](https://AnzenKodo.github.io/AnzenKodo) uder [MIT License](https://anzenkodo.github.io/dblog/LICENSE.html)</code>.</li>\n<li><strong>port</strong> - Port of your blog on localhost. <em>Example</em>: ‘8080’, ‘8300’, ‘8400’.</li>\n<li><strong>background</strong> - Background color in light mode. Becomes foreground color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>foreground</strong> - Foreground color in light mode. Becomes background color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>theme</strong> - Blog theme color. <em>Example:</em> ‘#0583f2’, ‘#f20544’, ‘#f2b705’.</li>\n<li><strong>page404</strong> - 404 page message. <em>Example:</em> ‘Sorry, page not found :(’.</li>\n<li><strong>backup</strong> - Backup file location. <em>Example:</em> <code>false</code> to don’t generate\n<code>backup.json</code> file, ‘./backup.json’, ‘./site/backup.json’, ‘…/backup.json’.</li>\n<li><strong>exclude</strong> - Exclude files or folder. <em>Example:</em><pre><code class=\"language-json\">&quot;exclude&quot;: [ &quot;.env&quot;, &quot;todo.md&quot;, &quot;drafts&quot; ],\n</code></pre>\n</li>\n<li><strong>nav</strong> - Nav bar item list. Example:<pre><code class=\"language-json\">&quot;nav&quot;: {\n  &quot;about&quot;: &quot;./about.md&quot;,\n  &quot;stie&quot;: &quot;https://anzenkodo.github.io/AnzenKodo&quot;\n}\n</code></pre>\n</li>\n<li><strong>head</strong> - If you analytics or any other tags you want to put on head tag.\n<em>Example:</em>\n<code>&lt;link rel=&quot;preconnect&quot; href=&quot;//www.google-analytics.com&quot; crossorigin=&quot;&quot;&gt;</code>.</li>\n</ul>\n<h2>CLI Options</h2>\n<pre><code class=\"language-sh\">dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.\n\nWebsite: https://anzenkodo.github.io/dblog\nPackage: https://deno.land/x/dblog\nRepo: https://github.com/AnzenKodo/dblog\nDocs: https://anzenkodo.github.io/dblog/posts/dblog-Docs.html\n\nUSAGE:\n  dblog [OPTIONS]\n\nOPTIONS:\n  --serve   Build blog and Start localhost.\n    --noopen  Don't open browser, when starting localhost.\n  --build   Build blog without starting localhost.\n  --setup   Setup new blog.\n  --backup  Restore blog if 'backup.json' file available.\n  --readme  Generate 'README.md' file.\n  --help    Print help information.\n</code></pre>\n<h2>File Options</h2>\n<pre><code>---\ntitle: If empty the file name will be used\ndescription: If empty the first paragraph will be used.\ntags: [ &quot;tag1&quot;, &quot;tag2&quot; ]\ndate: 20/08/2020\ncanonical:\n---\n</code></pre>\n<ul>\n<li><strong>date</strong> - If empty, the file date will be used. <em>Note:</em> The file <code>date</code> might\nnot always right. So always give you own date.</li>\n<li><strong>canonical</strong> - Share content between multiple sites without impacting SEO.\nJust put canonical URL. Know more about\n<a href=\"https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls\">canonical url</a>.</li>\n</ul>\n<h3>If file name start with underscore “_” it will be consider as draft.</h3>\n<p><strong>Example:</strong> <code>posts/_This is draft.md</code></p>\n<h2>Markdown Guide</h2>\n<h3><a href=\"https://commonmark.org/help/\">CommonMark</a> Syntex</h3>\n<h4>Heading</h4>\n<pre><code class=\"language-md\"># H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n</code></pre>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h4>Inline style</h4>\n<pre><code class=\"language-md\">**Bold** _Italic_ ~~Strikethrough~~\n</code></pre>\n<p><strong>Bold</strong> <em>Italic</em> <s>Strikethrough</s></p>\n<h4>Link and Image</h4>\n<pre><code class=\"language-md\">[website](https://anzenkodo.github.io/dblog)\n![Jurassic Deno by Samip Poudel](https://deno.land/images/artwork/jurassicDeno.jpg)\n</code></pre>\n<p><a href=\"https://anzenkodo.github.io/dblog\">website</a>\n<img src=\"https://deno.land/images/artwork/jurassicDeno.jpg\" alt=\"Jurassic Deno by Samip Poudel\"></p>\n<h4>Blockquote</h4>\n<pre><code class=\"language-md\">&gt; 'The road to hell is paved with good intentions' by Abbot Bernard\n</code></pre>\n<blockquote>\n<p>‘The road to hell is paved with good intentions’ by Abbot Bernard</p>\n</blockquote>\n<h4>List</h4>\n<pre><code class=\"language-md\">- List\n  - List\n- List\n\n1. One\n2. Two\n3. Three\n</code></pre>\n<ul>\n<li>List\n<ul>\n<li>List</li>\n</ul>\n</li>\n<li>List</li>\n</ul>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<h4>Horizontal rule</h4>\n<pre><code class=\"language-md\">---\n</code></pre>\n<hr>\n<h4>Code block</h4>\n<div class=\"highlight highlight-source-lisp notranslate position-relative overflow-auto\">\n<pre>\n`Inline code` with backticks\n```js\n  console.log(\"Code Blog in JavaScript\");\n```\n</pre>\n</div>\n<p><code>Inline code</code> with backticks</p>\n<pre><code class=\"language-js\">console.log(&quot;Code Blog in JavaScript&quot;);\n</code></pre>\n<h3>Additional Markdown syntax</h3>\n<h4>Checkbox</h4>\n<pre><code class=\"language-md\">- [ ] Checkbox\n- [x] Checkbox with tick\n</code></pre>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> Checkbox</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> Checkbox with tick</label></li>\n</ul>\n<h4>Image with caption</h4>\n<pre><code class=\"language-md\">![Deno](https://deno.land/images/artwork/deno_matrix.png &quot;Matrix by bramaudi&quot;)\n</code></pre>\n<figure data-type=\"image\"><img src=\"https://deno.land/images/artwork/deno_matrix.png\" alt=\"Deno\" loading=\"lazy\" decoding=\"async\"><figcaption>Matrix by bramaudi</figcaption></figure>\n<h4>Footer</h4>\n<pre><code class=\"language-md\">Here is a footnote reference[^1]. [^1]: Here is the footnote.\n</code></pre>\n<p>Here is a footnote reference[^1]. [^1]: Here is the footnote.</p>\n<h4>Additional inline syntax</h4>\n<pre><code class=\"language-md\">~sub~ ^sup^ ==mark== [[kbd]] _underline_ ++insert++ ~~delete~~\n</code></pre>\n<p><sub>sub</sub>\n<sup>sup</sup>\n<mark>mark</mark>\n<kbd>kbd</kbd>\n<u>underline</u>\n<ins>insert</ins>\n<del>delete</del></p>\n<h4>Description list</h4>\n<pre><code class=\"language-md\">: Definition 1 Term 2 with _inline markup_ : Definition 2 Third paragraph of\ndefinition 2.\n</code></pre>\n<dl>\n  <dt>Definition 1</dt>\n  <dd>Term 2 with inline.</dd>\n  <dt>Definition 2</dt>\n  <dd>Third paragraph of definition 2.</dd>\n</dl>\n<h4>Abbreviation</h4>\n<pre><code class=\"language-md\">*[abbr]: Abbreviation\n</code></pre>\n<p><abbr title=\"Abbreviation\">abbr</abbr></p>\n<h4>Table</h4>\n<h5>Normal</h5>\n<pre><code class=\"language-md\">| Syntax    | Description |\n| --------- | ----------- |\n| Header    | Title       |\n| Paragraph | Text        |\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Header</td>\n<td>Title</td>\n</tr>\n<tr>\n<td>Paragraph</td>\n<td>Text</td>\n</tr>\n</tbody>\n</table>\n<h5>Multiline</h5>\n<pre><code class=\"language-md\">| Markdown  | Rendered HTML |\n| --------- | ------------- |\n| _Italic_  | _Italic_      |\n|           |               |\n| - Item 1  | - Item 1      |\n| - Item 2  | - Item 2      |\n| ```python | ```python \\   |\n| .1 + .2   | .1 + .2       |\n</code></pre>\n<table><thead><tr><th>Markdown</th><th>Rendered HTML</th></tr></thead> <tbody>\n  <tr> <td> <pre><code>*Italic* </code></pre> </td> <td> <p><em>Italic</em></p>\n  </td> </tr> <tr> <td> <pre><code>- Item 1 - Item 2</code></pre> </td> <td>\n  <ul> <li>Item 1</li> <li>Item 2</li> </ul> </td> </tr> <tr> <td>\n<pre><code>\n```python\n.1 + .2\n```\n</code></pre> </td> <td> <pre><code class=\"language-python\">.1 + .2\n  </code></pre> </td> </tr> </tbody> </table>\n<h5>Rowspan</h5>\n<pre><code class=\"language-md\">|                       Stage | Direct Products | ATP Yields |\n| --------------------------: | --------------: | ---------: |\n|                  Glycolysis |           2 ATP |            |\n|                          ^^ |          2 NADH |   3--5 ATP |\n|          Pyruvaye oxidation |          2 NADH |      5 ATP |\n|           Citric acid cycle |           2 ATP |            |\n|                          ^^ |          6 NADH |     15 ATP |\n|                          ^^ |         2 FADH2 |      3 ATP |\n|              **30--32** ATP |                 |            |\n| [Net ATP yields per hexose] |                 |            |\n</code></pre>\n<table> <caption id=\"netatpyieldsperhexose\">Net ATP yields per hexose</caption>\n  <thead> <tr> <th align=\"right\">Stage</th> <th align=\"right\">Direct\nProducts</th> <th align=\"right\">ATP Yields</th> </tr> </thead> <tbody> <tr> <td\nalign=\"right\" rowspan=\"2\">Glycolysis</td> <td align=\"right\" colspan=\"2\">2\nATP</td> </tr> <tr> <td align=\"right\">2 NADH</td> <td align=\"right\">3–5\nATP</td> </tr> <tr> <td align=\"right\">Pyruvaye oxidation</td> <td\nalign=\"right\">2 NADH</td> <td align=\"right\">5 ATP</td> </tr> <tr> <td\nalign=\"right\" rowspan=\"3\">Citric acid cycle</td> <td align=\"right\"\ncolspan=\"2\">2 ATP</td> </tr> <tr> <td align=\"right\">6 NADH</td> <td\nalign=\"right\">15 ATP</td> </tr> <tr> <td align=\"right\">2 FADH2</td> <td\nalign=\"right\">3 ATP</td> </tr> <tr> <td align=\"right\"\ncolspan=\"3\"><strong>30–32</strong> ATP</td> </tr> </tbody> </table>\n<h4>Headerless</h4>\n<pre><code class=\"language-md\">|--|--|--|--|--|--|--|--| |♜| |♝|♛|♚|♝|♞|♜| | |♟|♟|♟| |♟|♟|♟| |♟| |♞| | | | | |\n| |♗| | |♟| | | | | | | | |♙| | | | | | | | | |♘| | | |♙|♙|♙|♙| |♙|♙|♙|\n|♖|♘|♗|♕|♔| | |♖|\n</code></pre>\n<table> <tbody> <tr> <td>♜</td> <td></td> <td>♝</td> <td>♛</td> <td>♚</td>\n  <td>♝</td> <td>♞</td> <td>♜</td> </tr> <tr> <td></td> <td>♟</td> <td>♟</td>\n  <td>♟</td> <td></td> <td>♟</td> <td>♟</td> <td>♟</td> </tr> <tr> <td>♟</td>\n  <td></td> <td>♞</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>\n  <tr> <td></td> <td>♗</td> <td></td> <td></td> <td>♟</td> <td></td> <td></td>\n  <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> <td>♙</td>\n  <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td>\n  <td></td> <td></td> <td>♘</td> <td></td> <td></td> </tr> <tr> <td>♙</td>\n  <td>♙</td> <td>♙</td> <td>♙</td> <td></td> <td>♙</td> <td>♙</td> <td>♙</td>\n  </tr> <tr> <td>♖</td> <td>♘</td> <td>♗</td> <td>♕</td> <td>♔</td> <td></td>\n  <td></td> <td>♖</td> </tr> </tbody> </table>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=AK%23Notes&description=This%20my%20personal%20website%20where%20I%20post%20my%20notes%20about%20thing%20that%20I%20have%20learn.%20Features%20%20Easy%20to:%20%20Setup%20Configure%20Write%20%20%20Supports:%20%20Tags%20Search%20(Power%20by%20DuckDuckGo)%20Canonical%20Open%20Graph%20Analytics%20GitHub%20Pages%20%20%20Auto%20generate:%20%20GitHub%20Pages%20Actions%20file%20Favicon%20Sitemap%20404%20page%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/android/ut2-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/android/ut2-6s.html",
      "title": "UT2 6S",
      "content_html": "<h1>MAD QUESTION BANK</h1>\n<h2>1. Write the syntax for Intent-Filter tag.</h2>\n<pre><code class=\"language-xml\">&lt;intent-fliter\nandroid:icon=&quot;drawable resource&quot;\nandroid:label=&quot;string resource&quot;\nandroid:priority=&quot;integer&quot;&gt;\n&lt;/intent-fliter&gt;\n</code></pre>\n<h2>2. Define Services in Android OS.</h2>\n<ul>\n<li>A service is an application component which runs withour direst interaction\nwith the user in the background.</li>\n<li>Services are used for repetitive and potentially long running operations:\n<ul>\n<li>Internet downloads</li>\n<li>Checking for new data</li>\n<li>Data processing</li>\n<li>Updating content</li>\n<li>Providers and the like</li>\n</ul>\n</li>\n<li>They typically run in the background to perform long-running operations or\nwork for remote processes.</li>\n</ul>\n<h3>1. Started</h3>\n<ul>\n<li>The service start with startService() function.</li>\n<li>To stop the service we can use stopService() &amp; stopSelf() function.</li>\n</ul>\n<h3>2. Bound</h3>\n<ul>\n<li>A service is bound when an application component binds to it by calling\nbindService().</li>\n<li>To un bound the service we can use unbindService() function.</li>\n</ul>\n<h2>3. Enlist the steps to publish the Android application</h2>\n<ul>\n<li><strong>Step 1</strong> - Sign up or Sign in for an account on the Android Developer\nconsole.</li>\n<li><strong>Step 2</strong> - Create a new appplication.</li>\n<li><strong>Step 3</strong> - Prepare multimedia.</li>\n<li><strong>Step 4</strong> - Prepare code for release.</li>\n<li><strong>Step 5</strong> - Build a release-ready APK.</li>\n<li><strong>Step 6</strong> - Upload APK complete the checklist on the left until all the items\nhave a green checkmark.</li>\n</ul>\n<h2>5. What is Date and Time picker with its methods?</h2>\n<h3>Date Picker</h3>\n<ul>\n<li>Android Date Picker allows you to select the date consisting of day, month and\nyear in your custom user interface.</li>\n<li>Methods of DatePicker:\n<ul>\n<li><strong>getDayOfMonth()</strong> - This method gets the selected day of month.</li>\n<li><strong>getMonth()</strong> - This method gets the selected month.</li>\n<li><strong>getYear()</strong> - This method gets the selected year.</li>\n<li><strong>getFirstDayOfWeek()</strong> - This method returns first day of the week.</li>\n<li><strong>getCalendarView()</strong> - This method returns calender View.</li>\n</ul>\n</li>\n</ul>\n<h3>TimePicker</h3>\n<ul>\n<li>Android Time Picker allows us to select the time of day in either 24h or AM/PM\nmode.</li>\n<li>The time consists of hours, minutes and clock format.</li>\n<li>Methods of TimePicker</li>\n</ul>\n<ol>\n<li><strong>setCurrentHour()</strong> - This method sets the current hour.</li>\n<li>setCurrentMinute() - This method sets the current minute.</li>\n<li><strong>is24HoursView()</strong> - This method returns true if this 24 hour view else\nfalse.</li>\n<li><strong>isEnabled()</strong> - This method returns the enabled status for this view.</li>\n</ol>\n<h2>6. Write a program to display circular progress bar.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  tools:context=&quot;.MainActivity&quot;&gt;\n  &lt;Button\n    android:id=&quot;@+id/btnDownloadFile&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Download File&quot;\n    andorid:layout_centerInParent=&quot;true&quot; /&gt;\n&lt;/RelativeLayout&gt;\n</code></pre>\n<h2>7. List sensors in Android and explain anyone in detail.</h2>\n<p>The Android supports broad categories of sensors:</p>\n<ol>\n<li>Motion Sensors</li>\n<li>Enviromental Sensors</li>\n<li>Position Sensors</li>\n</ol>\n<h3>Montion Sensors:</h3>\n<ul>\n<li>A motion sensor (or motion detector) is an electronic device that is designed\nto detect and measure movements.</li>\n<li>Motion sensors are used primarily in home and business secrity systems.</li>\n<li>These sensors measure accelecation forces and rotational forces along three\naxes.</li>\n</ul>\n<h2>8. Develop the registration form using the following GUI.</h2>\n<pre><code class=\"language-xml\">&lt;RelativeLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:paddingBottom=&quot;wrap_content&quot;\n  android:paddingTop=&quot;wrap_content&quot;\n  tools:context=&quot;.MainActivity&quot;&gt;\n  &lt;FrameLayout&gt;\n    &lt;ImageView\n      android:layout_width=&quot;wrap_content&quot;\n      android:layout_height=&quot;wrap_content&quot;\n      android:src=&quot;@drawable/banner_image&quot; /&gt;\n  &lt;FrameLayout&gt;\n  &lt;EditText\n    android:id=&quot;@+id/editText1&quot;\n    android:hint=&quot;Name&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_centerHorizontal=&quot;true&quot;\n    android:layout_centerVertical=&quot;true&quot;\n    android:drawableLeft=&quot;@drawable/name_image&quot; /&gt;\n  &lt;EditText\n    android:id=&quot;@+id/editText2&quot;\n    android:hint=&quot;Email ID&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_centerHorizontal=&quot;true&quot;\n    android:layout_centerVertical=&quot;true&quot;\n    android:drawbleLeft=&quot;@drawable/email_image&quot; /&gt;\n  &lt;EditText\n    android:id=&quot;@+id/editText1&quot;\n    android:hint=&quot;Password&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_centerHorizontal=&quot;true&quot;\n    android:layout_centerVertical=&quot;true&quot;\n    android:drawableLeft=&quot;@drawable/pass_image&quot; /&gt;\n  &lt;EditText\n    android:id=&quot;@+id/editText1&quot;\n    android:hint=&quot;Confirm Password&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_centerHorizontal=&quot;true&quot;\n    android:layout_cneterVertical=&quot;true&quot;\n    android:drawableLeft=&quot;@drawable/conpass_image&quot; /&gt;\n  &lt;EditText\n    android:id=&quot;@+id/editText1&quot;\n    android:hint=&quot;Enter Mobile&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_centerHorizontal=&quot;true&quot;\n    android:layout_centerVertical=&quot;true&quot;\n    android:drawableLeft=&quot;@drawable/mobile_image&quot; /&gt;\n  &lt;RadioButton\n    android:id=&quot;@+id/radioMale&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Male&quot; /&gt;\n  &lt;RadioButton\n    android:id=&quot;@+id/radioFemale&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Female&quot; /&gt;\n  &lt;Button\n    android:id=&quot;@+id/btnDisplay&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Register&quot; /&gt;\n&lt;/RelativeLayout&gt;\n</code></pre>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT2 6S&description=MAD%20QUESTION%20BANK%201.%20Write%20the%20syntax%20for%20Intent-Filter%20tag.%20&lt;intent-fliter%20android:icon=&quot;drawable%20resource&quot;%20android:label=&quot;string%20resource&quot;%20android:priority=&quot;integer&quot;&gt;%20&lt;/intent-fliter&gt;%20%202.%20Define%20Services%20in%20Android%20OS.%20%20A%20service%20is%20an%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/android/viva-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/android/viva-6s.html",
      "title": "Viva 6S",
      "content_html": "<h1>MAD VIVA QUESTION</h1>\n<p>(thk to SaturoGojoo,AK,NEWBIEN00B)</p>\n<h2>1) What is android?</h2>\n<p>Android is a mobile operating system based on a modified version of the Linux kernel and other open source software, designed primarily for touchscreen mobile devices such as smartphones and tablets.</p>\n<h2>2) Enlist Features of android?</h2>\n<ul>\n<li>Open Source</li>\n<li>Beautiul UI</li>\n<li>Connectivity</li>\n<li>Storage</li>\n<li>Multi-Touch</li>\n<li>Multi-Tasking</li>\n<li>Multi-Language</li>\n<li>Resizable widgets</li>\n<li>Messaging</li>\n<li>Media Support</li>\n<li>Web Browser</li>\n</ul>\n<h2>3) Explain android architecture?</h2>\n<ul>\n<li>\n<p>Android architecture contains different number of components to support any android device needs. Android software contains an open-source Linux Kernel having collection of number of C/C++ libraries which are exposed through an application framework services.</p>\n</li>\n<li>\n<p>The main components of android architecture are following:</p>\n</li>\n</ul>\n<ol>\n<li><strong>Applications:</strong> Applications is the top layer of android architecture. The pre-installed applications like home, contacts, camera, etc and third party applications will be installed on this layer only.</li>\n<li><strong>Application framework:</strong> Application Framework provides several important classes which are used to create an Android application.</li>\n<li><strong>Application runtime:</strong> Android Runtime environment contains components like core libraries and the Dalvik virtual machine(DVM).</li>\n<li><strong>Platform libraries:</strong> The Platform Libraries includes various C/C++ core libraries and Java based libraries such as Media, Graphics, OpenGL etc. to provide a support for android development.</li>\n<li><strong>Linux Kernel:</strong> The linux kernel manages all the available drivers such as display drivers, camera drivers, audio drivers, etc. which are required during the runtime.</li>\n</ol>\n<h2>4) Explain android sdk?</h2>\n<ul>\n<li>The Android software development kit(SDK)  allows developers to create applications for the Android platform. The Android SDK is the most important software of Android which is installed.</li>\n<li>The Android SDK provides to test application API libraries and emulator documentation sample code developer tools and tutorials which helps us to build and test the debug apps from Android.</li>\n<li>Android SDK provides the tools and application programming interface(API)  for developers to create applications on the Android platform using Java programming language.</li>\n</ul>\n<h2>5) What is Android AVD?</h2>\n<ul>\n<li>An AVD is an emulator configuration that enables to modules an actual device\nby calling hardware and software option to be emulated by the Android\nemulator.</li>\n<li>The AVD manager is an interface that we can launch from android studio which\nhelps us to create and manage AVD.</li>\n<li>An AVD contains hardware profile, system image, storage area, skin and other\nproperties.</li>\n<li>AVD contains emulator for Wear OS, TV, Mobile Phones, Tables, Automotive.</li>\n</ul>\n<h3>Hardware profile</h3>\n<ul>\n<li>Hardware profile defines the characteristics of a device as shipped from the\nfactory of a device as shipped from the factory.</li>\n<li>The AVD manager comes preloaded with certain hardware profile such as Pixel\ndevice and we can define or customize the hardware profile as needed.</li>\n</ul>\n<h3>System image</h3>\n<ul>\n<li>A system image labelled with Google API includes access to Google Play\nservices.</li>\n<li>A system image Labelled with Google Play logo in the Play Store includes the\nGoogle Play Store apps and can access to the Google Play Services.</li>\n</ul>\n<h3>Storage Area</h3>\n<ul>\n<li>The AVD has dedicated storage area on our development machine.</li>\n<li>It stores the devices data such as installed apps and settings, as well as\nemulated and SD cards.</li>\n<li>If needed we can use the AVD manager to wipe user data so that the devices has\nthe same data as if it was a new device.</li>\n</ul>\n<h2>6) What is emulator?</h2>\n<p>The Android Emulator simulates Android devices on your computer so that you can test your application on a variety of devices and Android API levels without needing to have each physical device.</p>\n<h2>7) Difference between JVM and dVM?</h2>\n<table>\n<thead>\n<tr>\n<th>JVM</th>\n<th>DVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JVM supports multiple OS</td>\n<td>DVM supports only Android Operating system.</td>\n</tr>\n<tr>\n<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>\n<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>\n</tr>\n<tr>\n<td>It is based on stack based virtual machine architecture.</td>\n<td>It is based on register based virtual machine architecture.</td>\n</tr>\n<tr>\n<td>JVM runs on more memory</td>\n<td>DVM runs on less memory.</td>\n</tr>\n<tr>\n<td>The executable format of JVM is JAR.</td>\n<td>The executable format of DVM is APK.</td>\n</tr>\n<tr>\n<td>JVM has different constant pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n<tr>\n<td>It runs <code>.class</code> byte code directly.</td>\n<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>\n</tr>\n</tbody>\n</table>\n<h2>8) What are activities?</h2>\n<ol>\n<li>Activities dictate the UI and handles the user interaction to the smart phone screen.</li>\n<li>Activities represent a single screen that user interact.</li>\n</ol>\n<h2>9) What are services?</h2>\n<ul>\n<li>A service is an application component which runs in the background.</li>\n<li>There are three types of service in Android:</li>\n</ul>\n<h3>Foreground service</h3>\n<ul>\n<li>A foreground service performs some operation that is noticeable to the user.</li>\n<li>For example, an audio app would use a foreground service to play an audio track.</li>\n<li>Foreground services must display a Notification. Foreground services continue running even when the user isn’t interacting with the app.</li>\n</ul>\n<h3>Backgroud Service**</h3>\n<ul>\n<li>A background service performs an operation that isn’t directly noticed by the user.</li>\n<li>For example, if an app used a service to compact its storage, that would usually be a background service.</li>\n</ul>\n<h3>Bound Service</h3>\n<ul>\n<li>A service is bound when an application component binds to it by calling bindService().</li>\n<li>A bound service offers a client-server interface that allows components to interact with the service, send requests, receive results, and even do so across processes with interprocess communication (IPC).</li>\n</ul>\n<h2>10) What are intents(<code>Implict</code> and <code>explicit</code> intent)?</h2>\n<h3>Implicit intent</h3>\n<p>The implicit intent is the intent where instead of defining the exact components, you define the action that you want to perform for different activities.</p>\n<h3>Explicit intent</h3>\n<p>An explicit intent is an intent where you explicitly define the component that needs to be called by Android System. An explicit intent is one that you use to launch a specific app component, such s a particular activity or service in your app.</p>\n<h2>11) Explain main Activity file ,manifest and layout file?</h2>\n<p><strong>MainActivity file</strong>\nThe main activity. Java file is automatically kept in this folder by Android studio all the classes will be available here and Android studio will even bundle together the package so that we can work with the file without having to go through all the folders.</p>\n<p><strong>Manifest file</strong>\nIt contains an Android manifest.xml file that is generated by Android studio when we create a project. This file contains the configuration parameters of a project such as Permission services and additional libraries.</p>\n<p><strong>Layout file</strong>\nLayout specifies the various widgets to be used in the UI and the relationships between such widgets and their containers. Layout files are stored in “res-&gt; layout” in the Android application.</p>\n<h2>12) What are different types of UI compents?</h2>\n<p><strong>TextView</strong>\nTextView is a UI Component that displays the text to the user on their Display Screen.\n<strong>EditText</strong>\nEditText is a user interface control that allows the users to enter some text.\n<strong>Button</strong>\nThis is a UI that is used to perform some action as soon as the user clicks on it.\n<strong>ProgressBar</strong>\nProgress bars are used to show progress of a task. For example, when you are uploading or downloading something from the internet, it is better to show the progress of download/upload to the user. In android there is a class called Progress Dialog that allows you to create progress bar.</p>\n<h2>13) What are Layouts (<code>LinearLayout</code>, <code>AbsoluteLayout</code>, <code>TableLayout</code>, <code>FrameLayout</code>, <code>RelativeLayout</code>)?</h2>\n<p><strong>LinearLayout</strong> is a view group that aligns all children in a single direction, vertically or horizontally.\n<strong>AbsoluteLayout</strong> enables us to specify the exact location of its children.\n<strong>TableLayout</strong> is a view that groups views into rows and columns.\n<strong>RelativeLayout</strong> is a view group that displays child views in relative positions.\n<strong>FrameLayout</strong> is a placeholder on screen that we can use to display a single view.</p>\n<h2>14) Define: <code>textview</code>, <code>Edittextview</code>, <code>Button</code>, <code>Image button</code>, <code>checkbox</code>(attributes and methods)?</h2>\n<ul>\n<li><strong>TextView</strong> - This control is used to display text to the user.</li>\n<li><strong>EditTextView</strong> - EditText is a predefined subclass of TextView that includes rich editing capabilities.</li>\n<li><strong>Button</strong> - A push-button that can be pressed, or clicked, by the user to perform an action.</li>\n<li><strong>ImageButton</strong> - An ImageButton is an AbsoluteLayout which enables you to specify the exact location of its children. This shows a button with an image (instead of text) that can be pressed or clicked by the user.</li>\n<li><strong>CheckBox</strong> - An on/off switch that can be toggled by the user. You should use check box when presenting users with a group of selectable options that are not mutually exclusive.</li>\n</ul>\n<h2>15) Explain <code>listview</code>, <code>gridview</code>, <code>imageview</code>, <code>scrollview</code>?</h2>\n<ul>\n<li><strong>ListView</strong> - List of scrollable items can be displayed in Android using ListView. It helps you to displaying the data in the form of a scrollable list.</li>\n<li><strong>GridView</strong> - It is a view group that display items in two dimensional scrolling grid (rows and columns), the grid items are not necessarily predetermined but they are automatically inserted to the layout using a ListAdapter.</li>\n<li><strong>ImageView</strong> - It is used to display an image file in application.</li>\n<li><strong>Scrollview</strong> - It is a view group that is used to make vertically scrollable views. A scroll view contains a single direct child only.</li>\n</ul>\n<h2>16) What is toast explain with example?</h2>\n<ul>\n<li>Toast is used to display information for a period of time.</li>\n<li>It contains a message to be displayed quickly and disappears after specified period of time.</li>\n<li>It does not block the user interaction.</li>\n<li>Example:</li>\n</ul>\n<pre><code class=\"language-xml=\">Toast.makeText(getApplicationContext(),&quot;Hello Javatpoint&quot;,Toast.LENGTH_SHORT).show();\n</code></pre>\n<h2>17) Explain activity lifecycle?</h2>\n<!-- Android Activity Lifecycle is controlled by 7 methods of android.app.Activity class.\n- The android Activity is the subclass of ContextThemeWrapper class.\n- An activity is the single screen in android. It is like window or frame of Java.\n- By the help of activity, you can place all your UI components or widgets in a single screen.\n\n![Activity Lifecycle Image](https://i.imgur.com/VKu9fbr.png)-->\n<ul>\n<li><strong>7 lifecycle methods of android activity.</strong>\n<ul>\n<li><strong>onCreate</strong> - called when activity is first created.</li>\n<li><strong>onStart</strong> - called when activity is becoming visible to the user.</li>\n<li><strong>onResume</strong> - called when activity will start interacting with the user.</li>\n<li><strong>onPause</strong> - called when activity is not visible to the user.</li>\n<li><strong>onStop</strong> - called when activity is no longer visible to the user.</li>\n<li><strong>onRestart</strong> - called after your activity is stopped, prior to start.</li>\n<li><strong>onDestroy</strong> - called before the activity is destroyed.</li>\n</ul>\n</li>\n</ul>\n<h2>18) Explain broadcast receivers?</h2>\n<p>Broadcast Receivers simply respond to broadcast messages from other applications or from the system itself. These messages are sometime called events or intents.</p>\n<h3>Creating the Broadcast Receiver</h3>\n<p>A broadcast receiver is implemented as a subclass of Broadcast Receiver class and overriding the <code>onReceive()</code> method where each message is received as an Intent object parameter.</p>\n<h3>Registering Broadcast Receiver</h3>\n<p>An application listens for specific broadcast intents by registering a broadcast receiver in AndroidManifest.xml file. Consider we are going to register MyReceiver for system generated event <code>ACTION_BOOT_COMPLETED</code> which is fired by the system once the Android system has completed the boot process.</p>\n<h2>19) Explain content provider?</h2>\n<p>Android system allows the content provider to store the application data in several ways. Users can manage to store the application data like images, audio, videos, and personal contact information by storing them in SQLite Database, in files, or even on a network. In order to share the data, content providers have certain permissions that are used to grant or restrict the rights to other applications to interfere with the data.</p>\n<h2>20) What is sensors?</h2>\n<ul>\n<li>Most Android-powered devices have built-in sensors that measure motion, orientation, and various environmental conditions.</li>\n<li>These sensors are capable of providing raw data with high precision and accuracy, and are useful if you want to monitor three-dimensional device movement or positioning, or you want to monitor changes in the ambient environment near a device.</li>\n<li>There are three type of sensors in android:</li>\n</ul>\n<h3>Mostion sensors</h3>\n<p>These sensors measure acceleration forces and rotational forces along three axes. This category includes accelerometers, gravity sensors, gyroscopes, and rotational vector sensors.</p>\n<h3>Environmental sensors</h3>\n<p>These sensors measure various environmental parameters, such as ambient air temperature and pressure, illumination, and humidity. This category includes barometers, photometers, and thermometers.</p>\n<h3>Position sensors</h3>\n<p>These sensors measure the physical position of a device. This category includes orientation sensors and magnetometers.</p>\n<h2>21) What is location based services?</h2>\n<p><strong>Location Based Services:</strong> Creating the Project, Getting the Maps API Key, Displaying the Map, Displaying the Zoom Control, Navigating to a Specific Location, Adding Markers, Getting Location,Geocoding and Reverse Geocoding, Getting Location Data, Monitoring Location.</p>\n<h2>22) What is Geo code and reverse Geo code?</h2>\n<h3>Geo code</h3>\n<p>Geocoding is the process of converting addresses (like a street address) into geographic coordinates (like latitude and longitude), which you can use to place markers on a map, or position the map.</p>\n<h3>Reverse Geo code</h3>\n<p>Reverse geocoding is the process of converting geographic coordinates into a human-readable address.</p>\n<h2>23) Enlist Steps to publish android application?</h2>\n<p><strong>Step 1:</strong> First generate signed apk of your Android App to publish it on Play Store.\n<strong>Step 2:</strong> Sign up for Google Play Console to publish and manage your Android App.\n<strong>Step 3:</strong> Now click on Create Application.\n<strong>Step 4:</strong> Now fill store listing details of your App which include Title, Short and Full description.\n<strong>Step 5:</strong> Now Click on ready on publish along with save draft and click on Manage release.\n<strong>Step 6:</strong> After Manage production click on edit release.\n<strong>Step 7:</strong> Now click on review.\n<strong>Step 8:</strong> After review click on Start Rollout to production.</p>\n<h2>24) What is Date and time Picker?</h2>\n<h3>Datepicker</h3>\n<ul>\n<li>Datepicker is a widget used to select a date. It allows to select date by day, month and year in your custom UI (user interface).</li>\n<li>Methods of DatePicker inckudes getDayOfMonth(), getMonth(), getYear(), getFirstDayOfWeek()</li>\n</ul>\n<h3>Timepicker</h3>\n<ul>\n<li>Timepicker is a widget used for selecting the time of the day in either AM/PM mode or 24 hours mode. The displayed time consist of hours, minutes and clock format.</li>\n<li>Methods of Timepicker inckudes setCurrentHour(), setHour(), setCurrentMinute(), getCurrentMinute()</li>\n</ul>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Viva 6S&description=MAD%20VIVA%20QUESTION%20(thk%20to%20SaturoGojoo,AK,NEWBIEN00B)%201)%20What%20is%20android?%20Android%20is%20a%20mobile%20operating%20system%20based%20on%20a%20modified%20version%20of%20the%20Linux%20kernel%20and%20other%20open%20source%20software,%20designed%20primarily%20for%20touchscreen%20mobile%20devices%20such%20as%20smartphones%20and%20tablets.%202)%20Enli&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/android/viva-6s-sort.html",
      "url": "https://anzenkodo.github.io/notes/programming/android/viva-6s-sort.html",
      "title": "Viva 6S sort",
      "content_html": "<h1>MAD VIVA</h1>\n<h2>1) What is Android?</h2>\n<p>Android is mobile OS based on modified version of Linux kernel and other open\nsource software, designed primarily for touchscreen mobile devices such as\nsmartphones and tablets.</p>\n<h2>2) Enlist features of Android?</h2>\n<ul>\n<li><strong>Open Source</strong> - Android is open-source, which helps to develop customized\nandroid version for future updates.</li>\n<li><strong>Customizable</strong> - Anyone can customize the Android Platform.</li>\n<li><strong>Connectivity</strong> - It provides GSM, CDMA, Bluetooth, WiFi etc.</li>\n<li><strong>Storage</strong> - Many android devices support external storage through Micro SD\ncard.</li>\n<li><strong>Widgets, Multi-Tasking, Multi-Touch, Media Support</strong></li>\n</ul>\n<h2>3) Explain Android architecture?</h2>\n<ul>\n<li>Android architecture contains different number of components to support any\nandroid device needs.</li>\n<li>The main components of Android architecture are following:\n<ul>\n<li><strong>Applications</strong> - Applications is the top layer of android architecture.\nThe pre-installed applications like will be installed on this layer only.</li>\n<li><strong>Application framework</strong> - Application framework provides several important\nclasses which are used to create an Android application.</li>\n<li><strong>Platform libraries</strong> - The platform libraries includes versions C/C++ core\nlibraries such as Media, Graphics, OpenGL etc. To provide a support for\nandroid development.</li>\n<li><strong>Linux Kernel</strong> - The Linux Kernel manages all the available drivers such\nas display drivers, camera drivers, audio drivers, etc. Which are required\nduring the runtime.</li>\n</ul>\n</li>\n</ul>\n<h2>4) Explain Android SDK?</h2>\n<ul>\n<li>The Android software development kit(SDK) allows developers to create\napplications for the Android platform. The Android SDK is the most important\nsoftware of Android which is installed.</li>\n<li>The Android SDK provides to test application API libraries and emulator\ndocumentation sample code developer tools and tutorials which helps us to\nbuild and test the debug apps from Android.</li>\n<li>Android SDK provides the tools and application programming interface(API) for\ndevelopers to create applications on the Android platform using Java\nprogramming language.</li>\n</ul>\n<h2>5) What is Android AVD?</h2>\n<ul>\n<li>An AVD is an emulator configuration that enables to modules an actual device\nby calling hardware and software option to be emulated by the Android\nemulator.</li>\n<li>The AVD manager is an interface that we can launch from android studio which\nhelps us to create and manage AVD.</li>\n<li>An AVD contains hardware profile, system image, storage area, skin and other\nproperties.</li>\n<li>AVD contains emulator for Wear OS, TV, Mobile Phones, Tables, Automotive.</li>\n</ul>\n<h3>Hardware profile</h3>\n<ul>\n<li>Hardware profile defines the characteristics of a device as shipped from the\nfactory of a device as shipped from the factory.</li>\n<li>The AVD manager comes preloaded with certain hardware profile such as Pixel\ndevice and we can define or customize the hardware profile as needed.</li>\n</ul>\n<h3>System image</h3>\n<ul>\n<li>A system image labelled with Google API includes access to Google Play\nservices.</li>\n<li>A system image Labelled with Google Play logo in the Play Store includes the\nGoogle Play Store apps and can access to the Google Play Services.</li>\n</ul>\n<h3>Storage Area</h3>\n<ul>\n<li>The AVD has dedicated storage area on our development machine.</li>\n<li>It stores the devices data such as installed apps and settings, as well as\nemulated and SD cards.</li>\n<li>If needed we can use the AVD manager to wipe user data so that the devices has\nthe same data as if it was a new device.</li>\n</ul>\n<h2>6) What is emulator?</h2>\n<p>The Android Emulator simulates Android devices on your computer so that you can\ntest your application on a variety of devices and Android API levels without\nneeding to have each physical device.</p>\n<h2>7) Difference between JVM and DVM?</h2>\n<table>\n<thead>\n<tr>\n<th>JVM</th>\n<th>DVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JVM supports multiple OS</td>\n<td>DVM supports only Android OS</td>\n</tr>\n<tr>\n<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>\n<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>\n</tr>\n<tr>\n<td>JVM runs on more memory</td>\n<td>DVM runs on less memory.</td>\n</tr>\n<tr>\n<td>The executable format of JVM is JAR</td>\n<td>The executable format of DVM is APK.</td>\n</tr>\n<tr>\n<td>JVM has different constant pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n<tr>\n<td>It runs <code>.class</code> byte code directly…</td>\n<td>The <code>.class</code> byte codes are optimize to <code>.odex</code> format before executing in DVM.</td>\n</tr>\n<tr>\n<td>JVM has different constant pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n</tbody>\n</table>\n<h2>8) What are activities?</h2>\n<ul>\n<li>Activates dictate the UI and handles the user interaction to the smartphone\nscreen.</li>\n<li>Activates represent a single screen that user interact.</li>\n</ul>\n<h2>9) What are services?</h2>\n<ul>\n<li>There are Three types of services in Android:\n<ul>\n<li>Foreground service</li>\n<li>Background service</li>\n<li>Bound service</li>\n</ul>\n</li>\n</ul>\n<h3>Foreground service</h3>\n<ul>\n<li>A foreground service performs some operation that noticeable to the user.</li>\n<li>Foreground services must display a Notification.</li>\n<li>Foreground service continue running even when the user isn’t interacting with\nthe app.</li>\n<li><strong>Example:</strong> An audio app would use a foreground service to play an audio\ntrack.</li>\n</ul>\n<h3>Background Service</h3>\n<ul>\n<li>A background service performs an operating that isn’t directly noticed by\nuser.</li>\n<li><strong>Example:</strong> If an app used a service to compact its storage, that would\nusually be a background service.</li>\n</ul>\n<h3>Bound Service</h3>\n<ul>\n<li>A service is bound when an application component binds to it by calling\n<code>bindService()</code>.</li>\n<li>A bound service offers a client-server interface that allows components to\ninteract with the service, send requests, receive results, and even do so\nacross processes with Interprocess Communication(IPC).</li>\n</ul>\n<h2>10) What are intents?</h2>\n<h3>Implicit intent</h3>\n<p>The implicit intent is the intent where instead of defining the exact components\n, you define the action that you want to perform for different activities.</p>\n<h3>Explicit intent</h3>\n<p>An explicit intent is an intent where you explicitly define the component that\nneeds to be called by Android System. An explicit intent is one that you use to\nlaunch a specific app component, such as particular activity or service in your\napp.</p>\n<h2>11) Explain MainActivity, Manifest &amp; Layout file?</h2>\n<h3>MainActivity</h3>\n<p>The MainActivity.java file is automatically kept in main folder by Android\nStudio all the classes will be available here and Android Studio will even\nbundle together the package so that we can work with the file without having to\ngo through all the folders.</p>\n<h3>Manifest</h3>\n<p>Manifest file generated by Android Studio when we create a project. This file\ncontains the configuration parameters of a project such as permission services\nand additional libraries.</p>\n<h3>Layout</h3>\n<p>Layout specifies the various widgets to be used in UI and the relationships\nbetween such widgets and their containers. Layout files are stored in\n<code>res-&gt;layout</code> in the Android application.</p>\n<h2>12) What are different types of UI components?</h2>\n<ul>\n<li><code>TextView</code> - is a UI component that displays the text to the user  on the user display screen.</li>\n<li><code>EditText</code> - is a UI control that allows the user to enter some\ntext.</li>\n<li><code>Button</code> - is a UI that is used to perform some action as soon as the\nuser clicks on it.</li>\n<li><code>ProgressBar</code> - are used to show progress of a task.</li>\n</ul>\n<h2>13) What are Layouts?</h2>\n<ul>\n<li><code>LinearLayout</code> - is a view group that aligns all children in a single\ndirection, vertically or horizontally.</li>\n<li><code>AbsoluteLayout</code> - enables us to specify the exact location of its children.</li>\n<li><code>TableLayout</code> - is a view that groups views into rows and columns.</li>\n<li><code>RelativeLayout</code> - is a view group that displays child views in relative\npositions.</li>\n<li><code>FrameLayout</code> - is a placeholder on screen that we can use to display a single\nview.</li>\n</ul>\n<h2>14) Define</h2>\n<ul>\n<li><code>TextView</code> - This control is used to display text to the user.</li>\n<li><code>EditTextView</code> - EditText is a predefined subclass of TextView that includes\nrich editing capabilities.</li>\n<li><code>Button</code> - A push-button that can be pressed, or clicked, by the user to\nperform an action.</li>\n<li><code>ImageButton</code> - An ImageButton is an AbsoluteLayout which enables you to\nspecify the exact location of its children. This shows a button with an image\n(instead of text) that can be pressed or clicked by the user.</li>\n<li><code>CheckBox</code> - An on/off switch that can be toggled by the user. You should use\ncheck box when presenting users with a group of selectable options that are\nnot mutually exclusive.</li>\n</ul>\n<h2>15) Explain</h2>\n<ul>\n<li><code>ListView</code> - List of scrollable items can be displayed in Android using\nListView. It helps you to displaying the data in the form of a scrollable list.</li>\n<li><code>GridView</code> - It is a view group that display items in two dimensional\nscrolling grid (rows and columns), the grid items are not necessarily\npredetermined but they are automatically inserted to the layout using a\nListAdapter.</li>\n<li><code>ImageView</code> - It is used to display an image file in application.</li>\n<li><code>Scrollview</code> - It is a view group that is used to make vertically scrollable\nviews. A scroll view contains a single direct child only.</li>\n</ul>\n<h2>16) What is toast explain with example?</h2>\n<ul>\n<li>Toast is used to display information for a period of time.</li>\n<li>It contains a message to be displayed quickly and disappears after specified period of time.</li>\n<li>It does not block the user interaction.</li>\n<li>Example:</li>\n</ul>\n<pre><code class=\"language-xml\">Toast.makeText(getApplicationContext(),&quot;Hello Javatpoint&quot;,Toast.LENGTH_SHORT).show();\n</code></pre>\n<h2>17) Explain activity life cycle?</h2>\n<ul>\n<li><code>onCreate</code> - called when activity is first created.</li>\n<li><code>onStart</code> - called when activity is becoming visible to the user.</li>\n<li><code>onResume</code> - called when activity will start interacting with the user.</li>\n<li><code>onPause</code> - called when activity is not visible to the user.</li>\n<li><code>onStop</code> - called when activity is no longer visible to the user.</li>\n<li><code>onRestart</code> - called after your activity is stopped, prior to start.</li>\n<li><code>onDestroy</code> - called before the activity is destroyed.</li>\n</ul>\n<h2>18) Explain broadcast receivers?</h2>\n<p>Broadcast Receivers simply respond to broadcast messages from other applications\nor from the system itself. These messages are sometime called events or intents.</p>\n<h3>Creating the Broadcast Receiver</h3>\n<p>A broadcast receiver is implemented as a subclass of Broadcast Receiver class\nand overriding the <code>onReceive()</code> method where each message is received as an\nIntent object parameter.</p>\n<h3>Registering Broadcast Receiver</h3>\n<p>An application listens for specific broadcast intents by registering a broadcast\nreceiver in AndroidManifest.xml file. Consider we are going to register\nMy Receiver for system generated event <code>ACTION_BOOT_COMPLETED</code> which is fired\nby the system once the Android system has completed the boot process.</p>\n<h2>19) Explain content provider?</h2>\n<ul>\n<li>Android system allows the content provider to store the application data in\nseveral ways.</li>\n<li>Users can manage to store the application data like images, audio, videos, and\npersonal contact information by storing them in SQLite database, in files or\neven on a network.</li>\n<li>In order to share the data, content providers have certain permissions that\nare used to grant or restrict the right to other applications to interfere\nwith the data.</li>\n</ul>\n<h2>20) What is sensors?</h2>\n<ul>\n<li>Most Android powered devices have built-in sensors that measure motion,\norientation, and various environmental conditions.</li>\n<li>There are three type of sensors in Android:\n<ul>\n<li>Motion</li>\n<li>Environmental</li>\n<li>Position</li>\n</ul>\n</li>\n</ul>\n<h3>Motion</h3>\n<p>These sensors measure acceleration forces and rotational forces along three axes\n. This category includes accelerometers, gravity sensors, gyroscopes, and\nrotational vector.</p>\n<h3>Environmental</h3>\n<p>These sensors measure various environmental parameters, such as ambient air\ntemperature and pressure, illumination, and humidity. This category includes\nbarometers, photometers, and thermometers.</p>\n<h3>Position</h3>\n<p>These sensors measure the physical position of a device. This category includes\norientation sensors and magnetometers.</p>\n<h2>21) What is location based services?</h2>\n<p><strong>Location Based Services:</strong> Location-Based Services(LBS) are present in Android\nto provide you with features like current location detection, display of nearby\nplaces, Geofencing, etc. It fetches the location using your device’s GPS, WiFi,\nor Cellular Networks.</p>\n<h2>22) What is Geo code and Reverse geo code?</h2>\n<h3>Geo code</h3>\n<p>Geocoding is the process of converting addresses (like a street address) into\ngeographic coordinates (like latitude and longitude), which you can use to place\nmarkers on a map, or position the map.</p>\n<h3>Reverse Geo code</h3>\n<p>Reverse geocoding is the process of converting geographic coordinates into a\nhuman-readable address.</p>\n<h2>23) Enlist Steps to publish android application?</h2>\n<ul>\n<li><strong>Step 1:</strong> First generate signed apk of your Android App to publish it on Play Store.</li>\n<li><strong>Step 2:</strong> Sign up for Google Play Console to publish and manage your Android App.</li>\n<li><strong>Step 3:</strong> Now click on Create Application.</li>\n<li><strong>Step 4:</strong> Now fill store listing details of your App which include Title, Short and Full description.</li>\n<li><strong>Step 5:</strong> Now Click on ready on publish along with save draft and click on Manage release.</li>\n<li><strong>Step 6:</strong> After Manage production click on edit release.</li>\n<li><strong>Step 7:</strong> Now click on review.</li>\n<li><strong>Step 8:</strong> After review click on Start Rollout to production.</li>\n</ul>\n<h2>24) What is date and time picker?</h2>\n<h3><code>DatePicker</code></h3>\n<ul>\n<li>Date picker is widget used to select a date.</li>\n<li>It allows to select data by day, month and year in your custom UI.</li>\n<li>Methods of <code>DatePicker</code> in invokes <code>getDayOfMonth()</code>, <code>getMonth()</code>,\n<code>getYear()</code>, <code>getFirstDayOfWeek()</code>.</li>\n</ul>\n<h3><code>TimePicker</code></h3>\n<ul>\n<li><code>TimePicker</code> is a widget used for selecting the time of the day in either\nAM/PM mode or 24h mode.</li>\n<li>The displayed time consist of hours, minutes and clock format.</li>\n<li>Methods of <code>TimePicker</code> invokes <code>setCurrentHour()</code>, <code>setHour()</code>,\n<code>setCurrentMinute()</code>, <code>getCurrentMinute()</code>.</li>\n</ul>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Viva 6S sort&description=MAD%20VIVA%201)%20What%20is%20Android?%20Android%20is%20mobile%20OS%20based%20on%20modified%20version%20of%20Linux%20kernel%20and%20other%20open%20source%20software,%20designed%20primarily%20for%20touchscreen%20mobile%20devices%20such%20as%20smartphones%20and%20tablets.%202)%20Enlist%20features%20of%20Android?%20%20Open%20Source%20-%20Android%20is%20open-source,%20whi&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/android/pratical-s6.html",
      "url": "https://anzenkodo.github.io/notes/programming/android/pratical-s6.html",
      "title": "Pratical S6",
      "content_html": "<h2>1. Write a program to place Name, Age, Mobile number linearly(vertical) on the display screen using Linear layout.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingLeft=&quot;16dp&quot;\n    android:paddingRight=&quot;16dp&quot;\n    android:paddingTop=&quot;16dp&quot;\n    android:orientation=&quot;vertical&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n    &lt;TextView\n        android:id=&quot;@+id/student_name&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Name:&quot; /&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Age:&quot; /&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Mobile Number:&quot; /&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n<p><a href=\"https://codingatharva.blogspot.com/2020/01/program-to-place-ui-component-in-linear-vertical-layout-in-Android-Studio.html\">Source</a></p>\n<h2>2. Write a program to place Name, Age, Mobile number linearly(vertical) on the display screen using Absolute layout.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;AbsoluteLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingLeft=&quot;16dp&quot;\n    android:paddingTop=&quot;16dp&quot;\n    android:paddingRight=&quot;16dp&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n    &lt;TextView\n        android:id=&quot;@+id/student_name&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_x=&quot;125dp&quot;\n        android:layout_y=&quot;280dp&quot;\n        android:text=&quot;Name:&quot;\n        android:textColor=&quot;#86AD33&quot;\n        android:textSize=&quot;20dp&quot;\n        android:textStyle=&quot;bold&quot; /&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_x=&quot;125dp&quot;\n        android:layout_y=&quot;304dp&quot;\n        android:text=&quot;Age:&quot;\n        android:textColor=&quot;#86AD33&quot;\n        android:textSize=&quot;20dp&quot;\n        android:textStyle=&quot;bold&quot; /&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_x=&quot;125dp&quot;\n        android:layout_y=&quot;328dp&quot;\n        android:text=&quot;Mobile Number:&quot;\n        android:textColor=&quot;#86AD33&quot;\n        android:textSize=&quot;20dp&quot;\n        android:textStyle=&quot;bold&quot; /&gt;\n&lt;/AbsoluteLayout&gt;\n</code></pre>\n<p><a href=\"https://codingatharva.blogspot.com/2020/01/absolute-layout-centrally-in-Android-Studio.html\">Source</a></p>\n<h2>3. Write a program to display 5 students basic information in a table form using Table layout.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:collapseColumns=&quot;*&quot;\n    android:shrinkColumns=&quot;*&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center_horizontal&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;match_parent&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:text=&quot;10 Students Basic Information&quot;\n            android:textColor=&quot;#86AD33&quot;\n            android:textSize=&quot;20dp&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Student Numbers&quot;\n            android:textColor=&quot;#000&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Name&quot;\n            android:textColor=&quot;#000&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;RollNo&quot;\n            android:textColor=&quot;#000&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Age&quot;\n            android:textColor=&quot;#000&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:text=&quot;Student 1:&quot;\n            android:textColor=&quot;#86AD33&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Student 2:&quot;\n            android:textColor=&quot;#86AD33&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Student 3:&quot;\n            android:textColor=&quot;#86AD33&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Student 4:&quot;\n            android:textColor=&quot;#86AD33&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;&gt;\n        &lt;TextView\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:text=&quot;Student 5:&quot;\n            android:textColor=&quot;#86AD33&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n        &lt;EditText\n            android:layout_width=&quot;0dp&quot;\n            android:layout_weight=&quot;1&quot;\n            android:layout_height=&quot;wrap_content&quot; /&gt;\n    &lt;/TableRow&gt;\n&lt;/TableLayout&gt;\n</code></pre>\n<p><a href=\"https://codingatharva.blogspot.com/2020/02/program-to-display-10-students-basic-info-in-table-layout-android.html\">Source</a></p>\n<h2>4. Write a program to accept username and password from the end user using Text View and edit Text.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;TableLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:padding=&quot;50dp&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center&quot;\n        android:textSize=&quot;25dp&quot;\n        android:text=&quot;Login Page&quot; /&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center_horizontal&quot;&gt;\n        &lt;TextView\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_weight=&quot;1&quot;\n            android:gravity=&quot;center&quot;\n            android:text=&quot;Enter UserName:&quot; /&gt;\n\n        &lt;EditText\n            android:id=&quot;@+id/user&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_weight=&quot;1&quot;\n            android:hint=&quot;abc@gmail.com&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;TableRow\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:gravity=&quot;center_horizontal&quot;&gt;\n        &lt;TextView\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_weight=&quot;1&quot;\n            android:gravity=&quot;center&quot;\n            android:text=&quot;Enter Password:&quot; /&gt;\n        &lt;EditText\n            android:id=&quot;@+id/pass&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_weight=&quot;1&quot;\n            android:hint=&quot;1234&quot; /&gt;\n    &lt;/TableRow&gt;\n    &lt;Button\n        android:id=&quot;@+id/btn1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_marginBottom=&quot;172dp&quot;\n        android:text=&quot;Login&quot; /&gt;\n&lt;/TableLayout&gt;\n</code></pre>\n<pre><code class=\"language-java\">import androidx.appcompat.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\npublic class MainActivity extends AppCompatActivity {\n   EditText user,pass;\n    Button b;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        b= findViewById(R.id.btn1);\n        user = findViewById(R.id.user);\n        pass = findViewById(R.id.pass);\n        b.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if(user.getText().toString().equals(&quot;atharva&quot;) &amp; pass.getText().toString().equals(&quot;1234&quot;))\n?\n                {\n                    Toast.makeText( getApplicationContext(),&quot;Login Sucessful&quot;,Toast.LENGTH_SHORT).show();\n                }\n                else\n                {\n                    Toast.makeText( getApplicationContext(),&quot;Login UnSucessful&quot;,Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }\n}\n</code></pre>\n<p><a href=\"https://codingatharva.blogspot.com/2020/03/program-to-accept-username-and-password-in-Android-Studio.html\">Source</a></p>\n<h2>5. Write a program to create a toggle button to display ON/OFF Bluetooth on the display screen.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot;\n    android:padding=&quot;20dp&quot;&gt;\n    &lt;ToggleButton\n        android:id=&quot;@+id/toggleButton&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;50dp&quot;\n        android:text=&quot;ToggleButton&quot;\n        android:textOn=&quot;ON&quot;\n        android:textOff=&quot;OFF&quot;\n        android:textSize=&quot;20sp&quot;\n        android:layout_centerInParent=&quot;true&quot;/&gt;\n    &lt;TextView android:id=&quot;@+id/textView&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_below=&quot;@id/toggleButton&quot;\n        android:text=&quot;Bluetooth is OFF&quot;\n        android:gravity=&quot;center_horizontal&quot;\n        android:layout_marginTop=&quot;20dp&quot;\n        android:textSize=&quot;20sp&quot;\n        android:textColor=&quot;@color/colorAccent&quot;/&gt;\n&lt;/RelativeLayout&gt;\n</code></pre>\n<pre><code class=\"language-java\">package com.example.togglebuttonbluetooth;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.widget.CompoundButton;\nimport android.widget.TextView;\nimport android.widget.ToggleButton;\n\npublic class MainActivity extends AppCompatActivity {\n\n    ToggleButton toggleButton;\n    TextView textView;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        toggleButton = findViewById(R.id.toggleButton);\n        textView = findViewById(R.id.textView);\n\n        toggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\n            @Override\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\n                if(isChecked)\n                {\n                    textView.setText(&quot;Bluetooth is &quot; + toggleButton.getTextOn());\n                }\n                else\n                {\n                    textView.setText(&quot;Bluetooth is &quot; + toggleButton.getTextOff());\n                }\n            }\n        });\n    }\n}\n</code></pre>\n<p><a href=\"http://www.programmingtutorials4u.com/android-programming/programs/android-toggle-button/\">Source</a></p>\n<h2>6. Write a program to create a login form for a social networking site.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:background=&quot;#495B8F&quot;\n    android:padding=&quot;20dp&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n\n    &lt;TextView android:id=&quot;@+id/logo&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;80dp&quot;\n        android:text=&quot;F A C E B O O K&quot;\n        android:gravity=&quot;center&quot;\n        android:textSize=&quot;40sp&quot;\n        android:textStyle=&quot;bold&quot;\n        android:layout_marginTop=&quot;40dp&quot;\n        android:textColor=&quot;@android:color/white&quot;/&gt;\n\n    &lt;EditText\n        android:id=&quot;@+id/username&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;60dp&quot;\n        android:layout_below=&quot;@id/logo&quot;\n        android:layout_marginTop=&quot;30dp&quot;\n        android:background=&quot;@android:color/white&quot;\n        android:fontFamily=&quot;monospace&quot;\n        android:hint=&quot;Email or phone number&quot;\n        android:padding=&quot;10dp&quot;\n        android:textSize=&quot;22sp&quot; /&gt;\n\n    &lt;EditText\n        android:id=&quot;@+id/password&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;60dp&quot;\n        android:layout_below=&quot;@id/username&quot;\n        android:background=&quot;@android:color/white&quot;\n        android:fontFamily=&quot;monospace&quot;\n        android:hint=&quot;Password&quot;\n        android:padding=&quot;10dp&quot;\n        android:layout_marginTop=&quot;20dp&quot;\n        android:textSize=&quot;22sp&quot; /&gt;\n\n    &lt;Button android:id=&quot;@+id/btnLogin&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:layout_height=&quot;50dp&quot;\n        android:layout_below=&quot;@id/password&quot;\n        android:layout_marginTop=&quot;30dp&quot;\n        android:text=&quot;Log In&quot;\n        android:background=&quot;#6D9ADD&quot;\n        android:textColor=&quot;@android:color/white&quot;\n        android:textSize=&quot;18sp&quot;/&gt;\n\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_centerHorizontal=&quot;true&quot;\n        android:text=&quot;Forgot Password?&quot;\n        android:textColor=&quot;@android:color/white&quot;\n        android:layout_below=&quot;@id/btnLogin&quot;\n        android:layout_marginTop=&quot;10dp&quot;\n        android:textSize=&quot;16sp&quot;/&gt;\n\n&lt;/RelativeLayout&gt;\n</code></pre>\n<pre><code class=\"language-java\">package com.example.socialnetworkingapp;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n}\n</code></pre>\n<p><a href=\"http://www.programmingtutorials4u.com/android-programming/programs/social-networking-login-form/\">Source</a></p>\n<h2>7. Write a program to show five checkboxes and toast selected checkbox.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:orientation=&quot;vertical&quot;\n    android:padding=&quot;10dp&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n\n    &lt;CheckBox\n        android:id=&quot;@+id/cb1&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Android&quot;\n        android:textSize=&quot;25dp&quot;\n        android:layout_gravity=&quot;center&quot;\n        android:padding=&quot;10dp&quot;\n        android:checked=&quot;false&quot;/&gt;\n\n    &lt;CheckBox\n        android:id=&quot;@+id/cb2&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Pythpn&quot;\n        android:textSize=&quot;25dp&quot;\n        android:layout_gravity=&quot;center&quot;\n        android:padding=&quot;10dp&quot;\n        android:checked=&quot;false&quot;/&gt;\n    &lt;CheckBox\n        android:id=&quot;@+id/cb3&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;PHP&quot;\n        android:textSize=&quot;25dp&quot;\n        android:layout_gravity=&quot;center&quot;\n        android:padding=&quot;10dp&quot;\n        android:checked=&quot;false&quot;/&gt;\n    &lt;CheckBox\n        android:id=&quot;@+id/cb4&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;C&quot;\n        android:textSize=&quot;25dp&quot;\n        android:layout_gravity=&quot;center&quot;\n        android:padding=&quot;10dp&quot;\n        android:checked=&quot;false&quot;/&gt;\n    &lt;CheckBox\n        android:id=&quot;@+id/cb5&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Java&quot;\n        android:textSize=&quot;25dp&quot;\n        android:layout_gravity=&quot;center&quot;\n        android:padding=&quot;10dp&quot;\n        android:checked=&quot;false&quot;/&gt;\n\n    &lt;Button\n        android:id=&quot;@+id/btn&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Submit&quot;\n        android:textSize=&quot;35dp&quot;\n        android:layout_gravity=&quot;center&quot;\n        android:padding=&quot;10dp&quot;/&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n<p><a href=\"https://codingatharva.blogspot.com/2020/03/program-demonstrate-checkboxes-in-android-studio.html\">Source</a></p>\n<h2>8. Write a program to display circular progress bar.</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout\n    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:gravity=&quot;center_horizontal&quot;\n    android:orientation=&quot;vertical&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n\n    &lt;RelativeLayout\n        android:id=&quot;@+id/progress_layout&quot;\n        android:layout_width=&quot;200dp&quot;\n        android:layout_height=&quot;200dp&quot;\n        android:layout_margin=&quot;100dp&quot;&gt;\n\n        &lt;!--progress bar implementation--&gt;\n        &lt;ProgressBar\n            android:id=&quot;@+id/progress_bar&quot;\n            style=&quot;?android:attr/progressBarStyleHorizontal&quot;\n            android:layout_width=&quot;match_parent&quot;\n            android:layout_height=&quot;match_parent&quot;\n            android:background=&quot;@drawable/circular_shape&quot;\n            android:indeterminate=&quot;false&quot;\n            android:progressDrawable=&quot;@drawable/circular_progress_bar&quot;\n            android:textAlignment=&quot;center&quot; /&gt;\n\n        &lt;!--Text implementation in center of the progress bar--&gt;\n        &lt;TextView\n            android:id=&quot;@+id/progress_text&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_alignParentLeft=&quot;true&quot;\n            android:layout_alignParentRight=&quot;true&quot;\n            android:layout_centerVertical=&quot;true&quot;\n            android:gravity=&quot;center&quot;\n            android:text=&quot;---&quot;\n            android:textColor=&quot;@color/colorPrimary&quot;\n            android:textSize=&quot;28sp&quot;\n            android:textStyle=&quot;bold&quot; /&gt;\n    &lt;/RelativeLayout&gt;\n\n&lt;/LinearLayout&gt;\n</code></pre>\n<pre><code class=\"language-java\">import android.os.Bundle;\nimport android.os.Handler;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private ProgressBar progressBar;\n    private TextView progressText;\n    int i = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        // set the id for the progressbar and progress text\n        progressBar = findViewById(R.id.progress_bar);\n        progressText = findViewById(R.id.progress_text);\n\n        final Handler handler = new Handler();\n        handler.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                // set the limitations for the numeric\n                // text under the progress bar\n                if (i &lt;= 100) {\n                    progressText.setText(&quot;&quot; + i);\n                    progressBar.setProgress(i);\n                    i++;\n                    handler.postDelayed(this, 200);\n                } else {\n                    handler.removeCallbacks(this);\n                }\n            }\n        }, 200);\n    }\n}\n</code></pre>\n<p><a href=\"https://www.geeksforgeeks.org/how-to-implement-circular-progressbar-in-android/\">Source</a></p>\n<h2>9. Write a program to display 15 buttons using Grid view.</h2>\n<p><a href=\"https://codingatharva.blogspot.com/2020/03/program-to-display-15-buttons-using-grid-view-in-android-studio.html\">Source</a></p>\n<h2>10. Write a program to display a toast message</h2>\n<pre><code class=\"language-java\">import android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.Toast;\n\npublic class MainActivity extends AppCompatActivity {\n\n    Button b1;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        b1 = (Button) findViewById(R.id.toast_button);\n\n        b1.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Toast.makeText(MainActivity.this,&quot;You just Toasted me!!!&quot;,Toast.LENGTH_LONG).show();\n                /*Another way to display a Toast message\n                    Toast t=Toast.makeText(MainActivity.this,&quot;You just Toasted me!!!&quot;,Toast.LENGTH_LONG);\n                    t.show();\n                */\n            }\n        });\n    }\n\n}\n</code></pre>\n<pre><code class=\"language-xml\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:id=&quot;@+id/activity_main&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;\n    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;\n    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;\n    tools:context=&quot;codedost.toast.MainActivity&quot;&gt;\n\n    &lt;Button\n        android:id=&quot;@+id/toast_button&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Toast me!&quot;\n        android:layout_centerVertical=&quot;true&quot;\n        android:layout_centerHorizontal=&quot;true&quot;\n    /&gt;\n\n&lt;/RelativeLayout&gt;\n</code></pre>\n<p><a href=\"https://www.javatpoint.com/android-toast-example\">Source</a></p>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Pratical S6&description=1.%20Write%20a%20program%20to%20place%20Name,%20Age,%20Mobile%20number%20linearly(vertical)%20on%20the%20display%20screen%20using%20Linear%20layout.%20&lt;?xml%20version=&quot;1.0&quot;%20encoding=&quot;utf-8&quot;?&gt;%20&lt;LinearLayout%20xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;%20%20%20%20%20xmlns:app=&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/study/mgt.html",
      "url": "https://anzenkodo.github.io/notes/study/mgt.html",
      "title": "MGT",
      "content_html": "<h1>MGT</h1>\n<ol>\n<li>Who said “Management is the function of executive leadership anywhere”:</li>\n</ol>\n<ul>\n<li>a) Ralph C. Devis</li>\n</ul>\n<ol start=\"2\">\n<li>Universal, goal oriented, multidimensional, continuous process are some\ncharacteristics of:</li>\n</ol>\n<ul>\n<li>a) Management</li>\n</ul>\n<ol start=\"3\">\n<li>Optimum utilization of resources can be ensured by:</li>\n</ol>\n<ul>\n<li>c) Management</li>\n</ul>\n<ol start=\"4\">\n<li>Motivating the people and building the team spirit to improve the life\nstandard of worker is possible due to:</li>\n</ol>\n<ul>\n<li>b) Management</li>\n</ul>\n<ol start=\"5\">\n<li><strong>Management</strong> is the art of getting work done through people</li>\n<li>Management is a creative and <strong>Continuous</strong> process.</li>\n<li>Management is _______</li>\n</ol>\n<ul>\n<li>\n<ol>\n<li>Art of getting things done through people</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Art of knowing what you want to do in best and cheaper way.</li>\n</ol>\n<ul>\n<li><strong>a) 1&amp;2</strong></li>\n</ul>\n</li>\n</ul>\n<ol start=\"8\">\n<li><strong>Administration</strong> concerned with decision making, policy making.</li>\n<li>The difference between administration and management is that:</li>\n</ol>\n<ul>\n<li>a) Administration is largely determinative while management is essentially\nexecutive.</li>\n</ul>\n<ol start=\"10\">\n<li>A tool manufacturing firm want to improve its performance from good to best\nsuggest the steps they should follow:</li>\n</ol>\n<ul>\n<li>a) 1. Optimum utilisation of resources and reduce wastage. 2. Building team\nspirit to achieve goal.</li>\n</ul>\n<ol start=\"11\">\n<li></li>\n</ol>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=MGT&description=MGT%20%20Who%20said%20“Management%20is%20the%20function%20of%20executive%20leadership%20anywhere”:%20%20%20a)%20Ralph%20C.%20Devis%20%20%20Universal,%20goal%20oriented,%20multidimensional,%20continuous%20process%20are%20some%20characteristics%20of:%20%20%20a)%20Management%20%20%20Optimum%20utilization%20of%20resources%20can%20be%20ensured%20by:%20%20%20c)%20Management%20%20%20M&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/study/grammmar.html",
      "url": "https://anzenkodo.github.io/notes/study/grammmar.html",
      "title": "Grammmar",
      "content_html": "<h1>Grammar in English</h1>\n<h2>Part of Speech</h2>\n<p>Words are divided into different kinds of classes called <strong>Parts of Speech</strong>.\nThe parts of speech are eight in number:</p>\n<ol>\n<li><a href=\"#noun\">Noun</a></li>\n<li><a href=\"#adjective\">Adjective</a></li>\n<li><a href=\"#pronoun\">Pronoun</a></li>\n<li><a href=\"#verb\">Verb</a></li>\n<li><a href=\"#adverb\">Adverb</a></li>\n<li><a href=\"#preposition\">Preposition</a></li>\n<li><a href=\"#conjunction\">Conjunction</a></li>\n<li><a href=\"#interjection\">Interjection</a></li>\n<li><a href=\"#determiners\">Determiners</a> (In some modern grammars)</li>\n</ol>\n<h3>Noun</h3>\n<p>A <strong>Noun</strong> is a word used as the name of the person, place, or things as,</p>\n<ol>\n<li>That <em>Mountain</em> look so beautiful from here.</li>\n<li>That <em>tree</em> was so small when we came last year.</li>\n<li>I don’t like <em>rain</em>.</li>\n</ol>\n<p><em><strong>Note</strong></em>\nThe word <em>Things</em> includes:</p>\n<ol>\n<li>All the objects that we can see, hear, taste, touch, or smell.</li>\n<li>Something that we can <em>think of</em>, but can’t perceive by the senses.</li>\n</ol>\n<h3>Adjective</h3>\n<p>An <strong>Adjective</strong> is a word used to add something to the meaning of a noun; as,</p>\n<ol>\n<li>He is <em>playing game</em>.</li>\n<li>She look <strong>beautiful</strong> tonight.</li>\n<li>Sun <strong>set early</strong> today.</li>\n</ol>\n<h3>Pronoun</h3>\n<p>A <strong>Pronoun</strong> is a word used instead of noun; as,</p>\n<ol>\n<li>He is was playing football, but <em>he’s</em> broke his leg.</li>\n<li>The books are where you left <em>them</em>.</li>\n</ol>\n<h3>Verb</h3>\n<p>A <strong>Verb</strong> is a word used to express an action or state; as,</p>\n<ol>\n<li>He is <em>sleeping</em>.</li>\n<li>That boy is very <em>playful</em>.</li>\n<li>India is a very <em>diverse</em> country.</li>\n</ol>\n<h3>Adverb</h3>\n<p>An <strong>Adverb</strong> is a word used to <em>add something</em> to the meaning of the verb, an\nadjective, or another adverb; as,</p>\n<ol>\n<li>He is working <em>very</em> hard today.</li>\n<li>That horse is running <em>so</em> fast today.</li>\n<li>New York look <em>so</em> beautiful in the night.</li>\n</ol>\n<h3>Preposition</h3>\n<p>A <strong>Preposition</strong> is a word used with a noun or pronoun to show how the person\nor thing denoted by the noun or pronoun stands in relation to something else; as</p>\n<ol>\n<li><em>Before</em> the dog got the hat.</li>\n<li>The Ice cream is <em>under</em> the fridge.</li>\n<li>He is <em>going</em> to Goa trip.</li>\n</ol>\n<h3>Conjunction</h3>\n<p>A <strong>Conjunction</strong> is a word used to <em>join</em> words or sentences; as,</p>\n<ol>\n<li>He <em>and</em> she are cousins.</li>\n<li>Three <em>and</em> two make five.</li>\n<li>Happy <em>but</em> sad inside.</li>\n</ol>\n<p>Conjunction have <strong>FANBOYS</strong> a which to remember coordinating conjunctions:</p>\n<ul>\n<li><strong>For</strong> - since, because\n<ul>\n<li>I don’t eat buttons <em>for</em> they are not food.</li>\n</ul>\n</li>\n<li><strong>And</strong> - combines things\n<ul>\n<li>The kangaroo robbed the band <em>and</em> torched the saloon.</li>\n</ul>\n</li>\n<li><strong>Nor</strong> - combines untrue things\n<ul>\n<li>She won’t leave her tree <em>nor</em> will she speak with humans.</li>\n</ul>\n</li>\n<li><strong>But</strong> - express exceptions\n<ul>\n<li>We used every building material <em>but</em> chewing gum.</li>\n</ul>\n</li>\n<li><strong>Or</strong> - choosing between options\n<ul>\n<li>Would you rather have pet bear <em>or</em> a pet giraffe?</li>\n</ul>\n</li>\n<li><strong>Yet</strong> - to the contrary\n<ul>\n<li>I want to leave, <em>yet</em> I cannot.</li>\n</ul>\n</li>\n<li><strong>So</strong> - shows consequences\n<ul>\n<li>He is allergic to sheep, <em>so</em> he skipped the wool festival.</li>\n</ul>\n</li>\n</ul>\n<h3>Interjection</h3>\n<p>An <strong>Interjection</strong> is a word which expresses some sudden feeling; as,</p>\n<ol>\n<li><em>Oh my god</em> ! What have you done.</li>\n<li><em>What</em> ! She is dead.</li>\n<li>Hurrah ! We have won the game.</li>\n</ol>\n<h3>Determiners</h3>\n<p><strong>Determiners</strong> are words that comes at the beginning of the noun, introduces\nnoun, determines noun that is whether none is specific or general.\nThere’s are divided into four types which are:</p>\n<h4>Articles</h4>\n<ul>\n<li><strong>Indefinite articles</strong> - <em>a, an</em> - general version of noun\n<ul>\n<li><em>A</em> book is man’s best friend</li>\n</ul>\n</li>\n<li><strong>Definite articles</strong> - <em>the</em> - specific version of noun\n<ul>\n<li><em>The</em> city Mumbai was called Bombay.</li>\n</ul>\n</li>\n</ul>\n<h4>Demonstratives</h4>\n<blockquote>\n<p><em>this, that, these, those</em></p>\n</blockquote>\n<ul>\n<li><strong>Demonstratives</strong> pronouns are also used as determiners. They are used to\npoint something specific within a sentence. They focus attention on the nouns\nthat they are replacing.\n<ul>\n<li>I want go to <em>that</em> movie.</li>\n<li>He wanted <em>those</em> boys to go away.</li>\n</ul>\n</li>\n</ul>\n<h4>Possessives</h4>\n<blockquote>\n<p><em>my, your, his, her, your their</em></p>\n</blockquote>\n<ul>\n<li><strong>Possessive</strong> pronouns are words that are used to show ownership.\n<ul>\n<li>Where is <em>your</em> bike?</li>\n<li>It’s <em>our</em> secret recipe.</li>\n</ul>\n</li>\n</ul>\n<h4>Quantifiers</h4>\n<blockquote>\n<p><em>some, few little many, much, any</em></p>\n</blockquote>\n<ul>\n<li>They indicate how much or how little of the noun is being discussed.\n<ul>\n<li>He took <em>some</em> books of mine.</li>\n<li>He has few apples in the refrigerator.</li>\n</ul>\n</li>\n</ul>",
      "date_published": "2022-12-23T13:12:50.975Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Grammmar&description=Grammar%20in%20English%20Part%20of%20Speech%20Words%20are%20divided%20into%20different%20kinds%20of%20classes%20called%20Parts%20of%20Speech.%20The%20parts%20of%20speech%20are%20eight%20in%20number:%20%20Noun%20Adjective%20Pronoun%20Verb%20Adverb%20Preposition%20Conjunction%20Interjection%20Determiners%20(In%20some%20modern%20grammars)%20%20Noun%20A%20Noun%20is%20a%20wo&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/c.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/c.html",
      "title": "C",
      "content_html": "<h1>C</h1>\n<ul>\n<li>In fact, you should use the main() to do very little except call each of the other functions.</li>\n<li>A good rule of thumb is that a function should not take more lines than will fit on a single screen. If the function is longer than that, you’re probably making it do too much.</li>\n<li>The difference between local and global variables:\n<ul>\n<li>A variable is global only if you define the variable (such as inti;) before a function name.</li>\n<li>A variable is local only if you define it after an opening brace. A function always begins with opening braces. Some statements, such as while, also have opening braces, and you can define local variables within those braces as well.</li>\n</ul>\n</li>\n<li>Local variables are safer than global variables.</li>\n<li>Don’t define global variables in the middle of a program. They’re too hard to locate if you do.</li>\n</ul>",
      "date_published": "2022-12-23T13:12:50.971Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=C&description=C%20%20In%20fact,%20you%20should%20use%20the%20main()%20to%20do%20very%20little%20except%20call%20each%20of%20the%20other%20functions.%20A%20good%20rule%20of%20thumb%20is%20that%20a%20function%20should%20not%20take%20more%20lines%20than%20will%20fit%20on%20a%20single%20screen.%20If%20the%20function%20is%20longer%20than%20that,%20you’re%20probably%20making%20it%20do%20too%20much.%20The%20di&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/bash.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/bash.html",
      "title": "Bash",
      "content_html": "<p><a href=\"#\">#</a> Bash</p>\n<ul>\n<li>\n<p>Functions Info</p>\n<p><strong>apropos</strong> - List of man pages for possible matches based on a search term.</p>\n</li>\n</ul>\n<h2>Commands</h2>\n<ul>\n<li>\n<p>Man Page Organization</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Man%20Page%202df02a5a631a4ebe9bcfd37a72009fc0.csv\">Man Page</a></p>\n</li>\n<li>\n<p>Redirecting Standard Output</p>\n<pre><code class=\"language-bash\">ls -l /usr/bin &gt; ls-output.txt\n</code></pre>\n<ul>\n<li>This makes output of ls command</li>\n</ul>\n</li>\n<li>\n<p>About <code>uniq</code></p>\n<ul>\n<li><code>uniq</code> to remove any duplicates from the output of the <code>sort</code> command.</li>\n</ul>\n<pre><code class=\"language-bash\">ls /bin /usr/bin | sort | uniq\n</code></pre>\n<ul>\n<li>To see the list of duplicates instead, add the <code>d</code> option to <code>uniq</code></li>\n</ul>\n<pre><code class=\"language-bash\">ls /bin /usr/bin | sort | uniq -d\n</code></pre>\n</li>\n<li>\n<p>About <code>tee</code></p>\n<ul>\n<li><code>tee</code> is like <code>ls &gt; output.txt</code> but it can work with grep command.</li>\n</ul>\n<pre><code class=\"language-bash\">ls /usr/bin | tee ls.txt | grep zip\n</code></pre>\n<h2>About <code>echo</code></h2>\n<pre><code class=\"language-bash\">echo $((2 + 2))\n</code></pre>\n</li>\n<li>\n<p>Symbols</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Symbols%20d88a1a92cda7446fa8a9d2c975c8947e.csv\">Symbols</a></p>\n</li>\n<li>\n<p><code>echo</code> Arithmetic Exponentiation can be nested</p>\n<pre><code class=\"language-bash\">echo $(($((5**2)) * 3))\n</code></pre>\n</li>\n<li>\n<p>The range of integers.</p>\n<pre><code class=\"language-bash\">echo {1..10}\necho a{A{1,2},B{3,4}}b\n</code></pre>\n</li>\n<li>\n<p>Enverment Value List</p>\n<pre><code class=\"language-bash\">cli printenv | less\nset | less\n</code></pre>\n</li>\n</ul>\n<h2>History</h2>\n<ul>\n<li>\n<p>To see the history</p>\n<pre><code class=\"language-bash\">history\n</code></pre>\n</li>\n<li>\n<p>History Command</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/History%20Command%205694bb062b694eb68fa66879592e9106.csv\">History Command</a></p>\n</li>\n<li>\n<p>History Expansion Commands</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/History%20Expansion%20Commands%204935186cd0cd4e49a5c894c0463b2851.csv\">History Expansion Commands</a></p>\n</li>\n<li>\n<p>To record the command</p>\n<pre><code class=\"language-bash\">script\n</code></pre>\n</li>\n</ul>\n<h2>Permissions</h2>\n<ul>\n<li>\n<p>To see the group number</p>\n<pre><code class=\"language-bash\">id\n</code></pre>\n</li>\n<li>\n<p>File Type</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/File%20Type%20b93329415ef14da18905fe8e533748f4.csv\">File Type</a></p>\n</li>\n<li>\n<p>Permission Attributes -rwxrwxr–</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Permission%20Attributes%20-rwxrwxr%E2%80%93%2035ff6cb19e8645a3b96ba09a33eba035.csv\">Permission Attributes -rwxrwxr–</a></p>\n</li>\n<li>\n<p>File Modes in Binary and Octal</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/File%20Modes%20in%20Binary%20and%20Octal%208ac1bb600cca40ebb1db460155009adb.csv\">File Modes in Binary and Octal</a></p>\n</li>\n<li>\n<p>The attribute for changing the file permission</p>\n<ul>\n<li><code>7 (rwx)</code>, <code>6 (rw-)</code>, <code>5 (r-x)</code>, <code>4 (r--)</code>, and <code>0 (---)</code></li>\n</ul>\n</li>\n<li>\n<p><code>chmod</code> Symbolic Notation</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/chmod%20Symbolic%20Notation%2036655aed32be491d8cf121e4b3981626.csv\">chmod Symbolic Notation</a></p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/chmod%20Symbolic%20Notation%20Examples%20d2fdf09328984fce96f5699222acfa25.csv\">chmod Symbolic Notation Examples</a></p>\n</li>\n<li>\n<p><code>umask</code> command controls the default permissions given to a file when it is created.</p>\n<pre><code class=\"language-bash\">umask 005\n</code></pre>\n</li>\n</ul>\n<h2>File System</h2>\n<ul>\n<li>\n<p>Testing and Repairing File Systems</p>\n<pre><code class=\"language-bash\">sudo fsck /dev/sdb1\n</code></pre>\n</li>\n<li>\n<p>Make bootable USB drive</p>\n<pre><code class=\"language-bash\">sudo dd bs=4M if=path/to/input.iso of=/dev/sd&lt;?&gt; conv=fdatasync  status=progress\n</code></pre>\n</li>\n</ul>\n<h2>Helpful Command</h2>\n<ul>\n<li>\n<p>Execute <code>find</code> file with command use <code>xargs</code></p>\n<pre><code class=\"language-bash\">find ~ -type f -name &quot;index.html&quot; | xargs ls -l\n</code></pre>\n</li>\n<li>\n<p>Use <code>find</code> to find the file</p>\n<pre><code class=\"language-bash\">find ~ -type f -name &quot;index.html&quot;\n</code></pre>\n</li>\n<li>\n<p>Best way to compress in tar</p>\n<pre><code class=\"language-bash\">tar cfJ playground.tar.xz playground\n</code></pre>\n</li>\n<li>\n<p>How to Mount ISO File on Linux</p>\n<pre><code class=\"language-bash\">mount -t iso9660 -o loop image.iso /mnt/iso_image\n</code></pre>\n</li>\n<li>\n<p>How to sort in Linux</p>\n<pre><code class=\"language-bash\">sort -nk 5\n\n# With command\n\nls -l /usr/share | sort -nk 5\n\n# Sort in ':'\n\nsort -ht ':' -k 3 /etc/passwd | head\n</code></pre>\n</li>\n<li>\n<p>Remove Duplicate use <code>uniq</code></p>\n<pre><code class=\"language-bash\">sort foo.txt | uniq\n</code></pre>\n</li>\n<li>\n<p>Spell check in Terminal</p>\n<pre><code class=\"language-bash\">aspell check filename\n\n# To check HTML code\n\naspell -H check html-filename\n</code></pre>\n</li>\n<li>\n<p>To make PDF</p>\n<pre><code class=\"language-bash\">ls -l ~/ | pr pr.ps | groff &gt; pr.ps\n\n# Convert PostScript file into Potable Document File\n\nps2pdf pr.ps pr.pdf\n</code></pre>\n</li>\n<li>\n<p>Good Locations for Scripts</p>\n<ul>\n<li><code>~/bin</code>Scripts intended for personal use.</li>\n<li><code>/usr/local/bin</code>Script that everyone on a system is allowed to use.</li>\n<li><code>/usr/local/sbin</code>Scripts intended for use by the system administrator</li>\n<li><code>/usr/local</code>Locally supplied software, scripts and compiled programs</li>\n</ul>\n</li>\n</ul>\n<h1>Shell Script</h1>\n<ul>\n<li>\n<p>Assigning Values to Variables and Constants.</p>\n<pre><code class=\"language-bash\">a=z # Assign the string &quot;z&quot; to variable a.\nb=&quot;a string&quot; # Embedded spaces must be within quotes.\nc=&quot;a string and $b&quot; # Other expansions such as variables can be expanded into the assignment.\nd=&quot;$(ls -l foo.txt)&quot; # Results of a command.\ne=$((5 * 7)) # Arithmetic expansion.\nf=&quot;\\t\\ta string\\n&quot; # Escape sequences such as tabs and newlines.\n</code></pre>\n</li>\n<li>\n<p>Using variables with other commands.</p>\n<pre><code class=\"language-bash\">filename=&quot;myFile&quot;\ntouch file\nmv file ${filename}\n</code></pre>\n</li>\n<li>\n<p>Here script</p>\n<pre><code class=\"language-bash\">command &lt;&lt; token\ntext\ntoken\n</code></pre>\n</li>\n<li>\n<p><code>_EOF_</code></p>\n<ul>\n<li>\n<p>Example</p>\n<pre><code class=\"language-bash\"># !/bin/bash\ndate=$(date +&quot;%x %r %Z&quot;)\n\ncat &lt;&lt; _EOF_\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Website&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Website&lt;/h1&gt;\n        &lt;p&gt;Hello World&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n_EOF_\n</code></pre>\n</li>\n<li>\n<p><code>_EOF_</code> with command</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# Script to retrieve a file via FTP\nFTP_SERVER=ftp.nl.debian.org\nFTP_PATH=/debian/dists/stretch/main/installer-amd64/current/images/\ncdrom REMOTE_FILE=debian-cd_info.tar.gz\nftp -n &lt;&lt; _EOF_\nopen $FTP_SERVER\nuser anonymous me@linuxbox\ncd $FTP_PATH\nhash\nget $REMOTE_FILE\nbye\n_EOF_\nls -l &quot;$REMOTE_FILE&quot;\n</code></pre>\n</li>\n<li>\n<p><code>_EOF_</code> with <code>-</code></p>\n<pre><code class=\"language-bash\"># !/bin/bash\ndate=$(date +&quot;%x %r %Z&quot;)\n\ncat &lt;&lt;- _EOF_\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Website&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Website&lt;/h1&gt;\n        &lt;p&gt;Hello World&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n_EOF_\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Shell Functions</p>\n<pre><code class=\"language-bash\"># !/bin/bash\n\nz=human # Gobal variable\n\necho_1() {\necho &quot;hello&quot;\nreturn\n}\n\necho_2() {\ni=world # local veariable\necho &quot;world&quot;\nreturn\n}\n\necho ${echo_1} ${echo_2} $z\n</code></pre>\n</li>\n<li>\n<p>Flow Control: Branching with if</p>\n<ul>\n<li>\n<p><code>if</code></p>\n<pre><code class=\"language-bash\">x=5\nif [ &quot;$x&quot; -eq 5 ]; then\necho &quot;x equals 5.&quot;\nelse\necho &quot;x does not equal 5.&quot;\nfi\n</code></pre>\n</li>\n<li>\n<p><code>if</code> in shell</p>\n<pre><code class=\"language-bash\">if [ “$x” -eq 5 ]; then echo &quot;equals 5&quot;; else echo &quot;does not equal 5&quot;; fi\n</code></pre>\n</li>\n<li>\n<p><code>if</code>, <code>elif</code> and <code>else</code></p>\n<pre><code class=\"language-bash\">if commands; then\ncommands\n[elif commands; then\ncommands...]\n[else\ncommands]\nfi\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Expressions Examples</h2>\n<ul>\n<li>\n<p>File Expressions</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# test-file: Evaluate the status of a file\nFILE=~/.bashrc\nif [ -e &quot;$FILE&quot; ]; then\nif [ -f &quot;$FILE&quot; ]; then\necho &quot;$FILE is a regular file.&quot;\nfi\nif [ -d &quot;$FILE&quot; ]; then\necho &quot;$FILE is a directory.&quot;\nfi\nif [ -r &quot;$FILE&quot; ]; then\necho &quot;$FILE is readable.&quot;\nfi\nif [ -w &quot;$FILE&quot; ]; then\necho &quot;$FILE is writable.&quot;\nfi\nif [ -x &quot;$FILE&quot; ]; then\necho &quot;$FILE is executable/searchable.&quot;\nfi\nelse\necho &quot;$FILE does not exist&quot;\nexit 1\nfi\nexit\n</code></pre>\n</li>\n<li>\n<p>String Expressions</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# test-string: evaluate the value of a string\nANSWER=maybe\nif [ -z &quot;$ANSWER&quot; ]; then\necho &quot;There is no answer.&quot; &gt;&amp;2\nexit 1\nfi\nif [ &quot;$ANSWER&quot; = &quot;yes&quot; ]; then\necho &quot;The answer is YES.&quot;\nelif [ &quot;$ANSWER&quot; = &quot;no&quot; ]; then\necho &quot;The answer is NO.&quot;\nelif [ &quot;$ANSWER&quot; = &quot;maybe&quot; ]; then\necho &quot;The answer is MAYBE.&quot;\nelse\necho &quot;The answer is UNKNOWN.&quot;\nfi\n</code></pre>\n</li>\n<li>\n<p>Integer Expressions</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# test-integer: evaluate the value of an integer.\nINT=-5\nif [ -z &quot;$INT&quot; ]; then\necho &quot;INT is empty.&quot; &gt;&amp;2\nexit 1\nfi\nif [ &quot;$INT&quot; -eq 0 ]; then\necho &quot;INT is zero.&quot;\nelse\nif [ &quot;$INT&quot; -lt 0 ]; then\necho &quot;INT is negative.&quot;\nelse\necho &quot;INT is positive.&quot;\nfi\nif [ $((INT % 2)) -eq 0 ]; then\necho &quot;INT is even.&quot;\nelse\necho &quot;INT is odd.&quot;\nfi\nfi\n</code></pre>\n</li>\n<li>\n<p>File Expressions</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Is True If:</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file1 -ef file2</td>\n<td>file1 and file2 have the same inode numbers (the two filenames refer to the same file by hard linking).</td>\n</tr>\n<tr>\n<td>file1 -nt file2</td>\n<td>file1 is newer than file2.</td>\n</tr>\n<tr>\n<td>file1 -ot file2</td>\n<td>file1 is older than file2.</td>\n</tr>\n<tr>\n<td>-b file</td>\n<td>file exists and is a block-special (device) file.</td>\n</tr>\n<tr>\n<td>-c file</td>\n<td>file exists and is a character-special (device) file.</td>\n</tr>\n<tr>\n<td>-d file</td>\n<td>file exists and is a directory.</td>\n</tr>\n<tr>\n<td>-e file</td>\n<td>file exists.</td>\n</tr>\n<tr>\n<td>-f file</td>\n<td>file exists and is a regular file.</td>\n</tr>\n<tr>\n<td>-g file</td>\n<td>file exists and is set-group-ID.</td>\n</tr>\n<tr>\n<td>-G file</td>\n<td>file exists and is owned by the effective group ID.</td>\n</tr>\n<tr>\n<td>-k file</td>\n<td>file exists and has its “sticky bit” set.</td>\n</tr>\n<tr>\n<td>-L file</td>\n<td>file exists and is a symbolic link.</td>\n</tr>\n<tr>\n<td>-O file</td>\n<td>file exists and is owned by the effective user ID.</td>\n</tr>\n<tr>\n<td>-p file</td>\n<td>file exists and is a named pipe.</td>\n</tr>\n<tr>\n<td>-r file</td>\n<td>file exists and is readable (has readable permission for the effective user).</td>\n</tr>\n<tr>\n<td>-s file</td>\n<td>file exists and has a length greater than zero.</td>\n</tr>\n<tr>\n<td>-S file</td>\n<td>file exists and is a network socket.</td>\n</tr>\n<tr>\n<td>-t fd</td>\n<td>fd is a file descriptor directed to/from the terminal. This can be used to determine whether standard input/output/error is being redirected.</td>\n</tr>\n<tr>\n<td>-u file</td>\n<td>file exists and is setuid.</td>\n</tr>\n<tr>\n<td>-w file</td>\n<td>file exists and is writable (has write permission for the effective user).</td>\n</tr>\n<tr>\n<td>-x file</td>\n<td>file exists and is executable (has execute/search permission for the effective user).</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>String Expressions</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Is True If…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>string</td>\n<td>string is not null.</td>\n</tr>\n<tr>\n<td>-n string</td>\n<td>The length of string is greater than zero.</td>\n</tr>\n<tr>\n<td>-z string</td>\n<td>The length of string is zero.</td>\n</tr>\n<tr>\n<td><code>string1 = string2</code> <code>string1 == string2</code></td>\n<td>string1 and string2 are equal. Single or double equal signs may be used. The use of double equal signs is supported by bash and is generally preferred, but it is not POSIX compliant.</td>\n</tr>\n<tr>\n<td>string1 != string2</td>\n<td>string1 and string2 are not equal.</td>\n</tr>\n<tr>\n<td>string1 &gt; string2</td>\n<td>string1 sorts after string2.</td>\n</tr>\n<tr>\n<td>string1 &lt; string2</td>\n<td>string1 sorts before string2.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Integer Expressions</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Is True If…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>integer1 -eq integer2</td>\n<td>integer1 is equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 -ne integer2</td>\n<td>integer1 is not equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 -le integer2</td>\n<td>integer1 is less than or equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 is less than or equal to integer2.</td>\n<td>integer1 is less than integer2.</td>\n</tr>\n<tr>\n<td>integer1 -ge integer2</td>\n<td>integer1 is greater than or equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 -gt integer2</td>\n<td>integer1 is greater than integer2.</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>",
      "date_published": "2022-12-23T13:12:50.971Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Bash&description=%23%20Bash%20%20%20Functions%20Info%20apropos%20-%20List%20of%20man%20pages%20for%20possible%20matches%20based%20on%20a%20search%20term.%20%20%20Commands%20%20%20Man%20Page%20Organization%20Man%20Page%20%20%20Redirecting%20Standard%20Output%20ls%20-l%20/usr/bin%20&gt;%20ls-output.txt%20%20%20This%20makes%20output%20of%20ls%20command%20%20%20%20About%20uniq%20%20uniq%20to%20remove%20any%20duplica&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/css.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/css.html",
      "title": "CSS",
      "content_html": "<h1>CSS</h1>\n<p><a href=\"https://anzenkodo.github.io/notes/CSS%208946e12a95f04e3490bd9c09bfb99d1e/SASS%20d57c9cbb233644a3a615a487f4cdf949.md\">SASS</a></p>\n<ul>\n<li>\n<p>BEM Method</p>\n<pre><code class=\"language-css\">/* Block component */\n.btn {}\n/* Element that depends upon the block */\n.btn__price {}\n/* Modifier that changes the style of the block */\n.btn--orange {}\n.btn--big {}\n</code></pre>\n</li>\n<li>\n<p>Dark Mode Setting</p>\n<pre><code class=\"language-css\">:root {\n  color-scheme: light dark; /* both supported */\n}\n</code></pre>\n</li>\n<li>\n<p>Image Dark</p>\n<ul>\n<li>\n<p>Apply the filter directly on the body tag.</p>\n<pre><code class=\"language-css\">body.dark-theme img {\n  filter: brightness(.8) contrast(1.2);\n}\n</code></pre>\n</li>\n<li>\n<p>Or apply it via media query.</p>\n<pre><code class=\"language-css\">@media (prefers-color-scheme: dark) {\n  img {\n    filter: brightness(.8) contrast(1.2);\n  }\n}\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Image prefer Dark</p>\n<pre><code class=\"language-html\">&lt;picture&gt;\n  &lt;!-- Use this image if the user's OS setting is light or unset --&gt;\n  &lt;source srcset=&quot;photo-light.png&quot; media=&quot;(prefers-color-scheme: light) or (prefers-color-scheme: no-preference)&quot;&gt;\n  &lt;!-- Use this image if the user's OS setting is dark --&gt;\n  &lt;source srcset=&quot;photo-dark.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;\n&lt;/picture&gt;\n</code></pre>\n</li>\n<li>\n<p>Non-standard attributes, dataset</p>\n<pre><code class=\"language-css\">&lt;style&gt;\n  /* styles rely on the custom attribute &quot;order-state&quot; */\n  .order[order-state=&quot;new&quot;] {\n    color: green;\n  }\n\n  .order[order-state=&quot;pending&quot;] {\n    color: blue;\n  }\n\n  .order[order-state=&quot;canceled&quot;] {\n    color: red;\n  }\n&lt;/style&gt;\n\n&lt;div class=&quot;order&quot; order-state=&quot;new&quot;&gt;\n  A new order.\n&lt;/div&gt;\n\n&lt;div class=&quot;order&quot; order-state=&quot;pending&quot;&gt;\n  A pending order.\n&lt;/div&gt;\n\n&lt;div class=&quot;order&quot; order-state=&quot;canceled&quot;&gt;\n  A canceled order.\n&lt;/div&gt;\n</code></pre>\n</li>\n</ul>",
      "date_published": "2022-12-23T13:12:50.971Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=CSS&description=CSS%20SASS%20%20%20BEM%20Method%20/*%20Block%20component%20*/%20.btn%20{}%20/*%20Element%20that%20depends%20upon%20the%20block%20*/%20.btn__price%20{}%20/*%20Modifier%20that%20changes%20the%20style%20of%20the%20block%20*/%20.btn--orange%20{}%20.btn--big%20{}%20%20%20%20Dark%20Mode%20Setting%20:root%20{%20%20%20color-scheme:%20light%20dark;%20/*%20both%20supported%20*/%20}%20%20%20%20Image%20Da&right_meta=AK%23Notes&background_color=%23bd8bf2"
    }
  ]
}