{
  "version": "https://jsonfeed.org/version/1",
  "title": "AK#Notes",
  "home_page_url": "https://anzenkodo.github.io/notes",
  "feed_url": "https://anzenkodo.github.io/notes/feed.json",
  "description": "This my personal website where I post my notes about thing that I have learn.",
  "favicon": "https://anzenkodo.github.io/notes/favicon.png",
  "icon": "https://anzenkodo.github.io/notes/favicon.png",
  "author": {
    "name": "Axel",
    "url": "https://AnzenKodo.github.io/"
  },
  "items": [
    {
      "id": "https://anzenkodo.github.io/notes/",
      "url": "https://anzenkodo.github.io/notes/",
      "title": "Home",
      "content_html": "<p>This my personal website where I post my notes about thing that I have learn.</p>\n<h2>Features</h2>\n<ul>\n<li>Easy to:\n<ul>\n<li>Setup</li>\n<li>Configure</li>\n<li>Write</li>\n</ul>\n</li>\n<li>Supports:\n<ul>\n<li>Tags</li>\n<li>Search (Power by <a href=\"https://duckduckgo.com/\">DuckDuckGo</a>)</li>\n<li>Canonical</li>\n<li><a href=\"https://ogp.me/\">Open Graph</a></li>\n<li>Analytics</li>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a></li>\n</ul>\n</li>\n<li>Auto generate:\n<ul>\n<li>GitHub Pages Actions file</li>\n<li>Favicon</li>\n<li>Sitemap</li>\n<li>404 page</li>\n<li>CSS</li>\n<li><code>mainfest.json</code> file</li>\n<li>Feeds\n<ul>\n<li>RSS</li>\n<li>JSON</li>\n<li>Atom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>No Client side JavaScript</li>\n<li>Minified HTML &amp; Inline CSS</li>\n<li>Lightweight</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<ul>\n<li>Download deno from <a href=\"https://deno.land/\">https://deno.land/</a> and install it.</li>\n<li>After installing deno run following commands.</li>\n</ul>\n<pre><code class=\"language-sh\"># Install the dblog\ndeno run https://deno.land/x/dblog/install.js # Add deno to path, if you didn't already.\n\n# See all the options that are available\ndblog --help\n\n# Setup the your blog (Skip this if already your blog setup)\ndblog --setup\n\n# Make your blog and Run on localhost\ndblog --serve\n</code></pre>\n<h3>Update</h3>\n<p>To update dblog, rerun the installation command.</p>\n<pre><code class=\"language-sh\">deno run https://deno.land/x/dblog/install.js\n</code></pre>\n<h3>Run dblog without installing dblog</h3>\n<pre><code class=\"language-sh\">deno run -A https://deno.land/x/dblog/mod.js --help\n</code></pre>\n<h2>Live Demo &amp; Folder</h2>\n<ul>\n<li><a href=\"https://anzenkodo.github.io/dblog\">Live Demo</a></li>\n<li><a href=\"https://github.com/AnzenKodo/dblog/tree/gh-pages\">Generated Files</a></li>\n</ul>\n<h2>Configuration</h2>\n<p>Place <code>config.json</code> in root folder to edit default configuration. The\n<code>config.json</code> is optional.</p>\n<p><strong>The <code>config.json</code> with default configuration:</strong></p>\n<pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;dblog&quot;,\n  &quot;start_url&quot;: &quot;https://AnzenKodo.github.io/dblog/&quot;,\n  &quot;description&quot;: &quot;dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.&quot;,\n  &quot;email&quot;: &quot;&quot;,\n  &quot;author&quot;: &quot;AnzenKodo&quot;,\n  &quot;posts&quot;: &quot;./posts&quot;,\n  &quot;output&quot;: &quot;./site&quot;,\n  &quot;favicon&quot;: &quot;favicon.svg&quot;,\n  &quot;lang&quot;: &quot;en-US&quot;,\n  &quot;port&quot;: 8000,\n  &quot;background&quot;: &quot;#ffffff&quot;,\n  &quot;foreground&quot;: &quot;#000000&quot;,\n  &quot;theme&quot;: &quot;#01a252&quot;,\n  &quot;footer&quot;: &quot;&lt;p&gt;Made by &lt;a href=\\&quot;https://AnzenKodo.github.io/AnzenKodo\\&quot;&gt;AnzenKodo&lt;/a&gt; under &lt;a href=\\&quot;https://anzenkodo.github.io/dblog/LICENSE\\&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;\\n&quot;,\n  &quot;page404&quot;: &quot;404 Page Not Found, Sorry :(&quot;,\n  &quot;backup&quot;: false,\n  &quot;exclude&quot;: [\n    &quot;config.json&quot;,\n    &quot;backup.json&quot;\n  ],\n  &quot;nav&quot;: {},\n  &quot;head&quot;: &quot;&quot;\n}\n</code></pre>\n<p><strong>Note:</strong> Every option is optional.</p>\n<ul>\n<li><strong>name</strong> - Name of your blog.</li>\n<li><strong>start_url</strong> - Start URL of your site. <em>Example:</em> ‘<a href=\"https://example.com/\">https://example.com/</a>’,\n‘<a href=\"https://blog.example.com/\">https://blog.example.com/</a>’, ‘<a href=\"https://example.com/blog/\">https://example.com/blog/</a>’</li>\n<li><strong>email</strong> - Your email address. This will enable ‘Reply with Email’ button in\nposts.</li>\n<li><strong>author</strong> - Your name or username.</li>\n<li><strong>posts</strong> - Path of posts.</li>\n<li><strong>output</strong> - Folder where your blog build will be placed. <em>Example:</em> ‘./blog’,\n‘…/site/blog’, ‘site/blog’.</li>\n<li><strong>favicon</strong> - <em><strong>Recommended 500x500px</strong></em>. Favicon location. <em>If empty,\ngenerated favicon will be used</em>. <em>Example:</em> ‘./favicon.png’,\n‘./static/favicon.icon’, ‘…/favicon.jpg’.</li>\n<li><strong>lang</strong> - Blog language in ‘RFC 5646’ format. Example: ‘ja’ for Japanese,\n‘sv’ for Swedish, ‘it’ for Italian. See\n<a href=\"https://wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags\">List of common primary language subtags in Wikipedia</a></li>\n<li><strong>footer</strong> - Footer of your website. <em>Supports CommonMark Markdown format</em>.\n<em>Example:</em>\n<code>Made by [AnzenKodo](https://AnzenKodo.github.io/AnzenKodo) uder [MIT License](https://anzenkodo.github.io/dblog/LICENSE.html)</code>.</li>\n<li><strong>port</strong> - Port of your blog on localhost. <em>Example</em>: ‘8080’, ‘8300’, ‘8400’.</li>\n<li><strong>background</strong> - Background color in light mode. Becomes foreground color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>foreground</strong> - Foreground color in light mode. Becomes background color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>theme</strong> - Blog theme color. <em>Example:</em> ‘#0583f2’, ‘#f20544’, ‘#f2b705’.</li>\n<li><strong>page404</strong> - 404 page message. <em>Example:</em> ‘Sorry, page not found :(’.</li>\n<li><strong>backup</strong> - Backup file location. <em>Example:</em> <code>false</code> to don’t generate\n<code>backup.json</code> file, ‘./backup.json’, ‘./site/backup.json’, ‘…/backup.json’.</li>\n<li><strong>exclude</strong> - Exclude files or folder. <em>Example:</em><pre><code class=\"language-json\">&quot;exclude&quot;: [ &quot;.env&quot;, &quot;todo.md&quot;, &quot;drafts&quot; ],\n</code></pre>\n</li>\n<li><strong>nav</strong> - Nav bar item list. Example:<pre><code class=\"language-json\">&quot;nav&quot;: {\n  &quot;about&quot;: &quot;./about.md&quot;,\n  &quot;stie&quot;: &quot;https://anzenkodo.github.io/AnzenKodo&quot;\n}\n</code></pre>\n</li>\n<li><strong>head</strong> - If you analytics or any other tags you want to put on head tag.\n<em>Example:</em>\n<code>&lt;link rel=&quot;preconnect&quot; href=&quot;//www.google-analytics.com&quot; crossorigin=&quot;&quot;&gt;</code>.</li>\n</ul>\n<h2>CLI Options</h2>\n<pre><code class=\"language-sh\">dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.\n\nWebsite: https://anzenkodo.github.io/dblog\nPackage: https://deno.land/x/dblog\nRepo: https://github.com/AnzenKodo/dblog\nDocs: https://anzenkodo.github.io/dblog/posts/dblog-Docs.html\n\nUSAGE:\n  dblog [OPTIONS]\n\nOPTIONS:\n  --serve   Build blog and Start localhost.\n    --noopen  Don't open browser, when starting localhost.\n  --build   Build blog without starting localhost.\n  --setup   Setup new blog.\n  --backup  Restore blog if 'backup.json' file available.\n  --readme  Generate 'README.md' file.\n  --help    Print help information.\n</code></pre>\n<h2>File Options</h2>\n<pre><code>---\ntitle: If empty the file name will be used\ndescription: If empty the first paragraph will be used.\ntags: [ &quot;tag1&quot;, &quot;tag2&quot; ]\ndate: 20/08/2020\ncanonical:\n---\n</code></pre>\n<ul>\n<li><strong>date</strong> - If empty, the file date will be used. <em>Note:</em> The file <code>date</code> might\nnot always right. So always give you own date.</li>\n<li><strong>canonical</strong> - Share content between multiple sites without impacting SEO.\nJust put canonical URL. Know more about\n<a href=\"https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls\">canonical url</a>.</li>\n</ul>\n<h3>If file name start with underscore “_” it will be consider as draft.</h3>\n<p><strong>Example:</strong> <code>posts/_This is draft.md</code></p>\n<h2>Markdown Guide</h2>\n<h3><a href=\"https://commonmark.org/help/\">CommonMark</a> Syntex</h3>\n<h4>Heading</h4>\n<pre><code class=\"language-md\"># H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n</code></pre>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h4>Inline style</h4>\n<pre><code class=\"language-md\">**Bold** _Italic_ ~~Strikethrough~~\n</code></pre>\n<p><strong>Bold</strong> <em>Italic</em> <s>Strikethrough</s></p>\n<h4>Link and Image</h4>\n<pre><code class=\"language-md\">[website](https://anzenkodo.github.io/dblog)\n![Jurassic Deno by Samip Poudel](https://deno.land/images/artwork/jurassicDeno.jpg)\n</code></pre>\n<p><a href=\"https://anzenkodo.github.io/dblog\">website</a>\n<img src=\"https://deno.land/images/artwork/jurassicDeno.jpg\" alt=\"Jurassic Deno by Samip Poudel\"></p>\n<h4>Blockquote</h4>\n<pre><code class=\"language-md\">&gt; 'The road to hell is paved with good intentions' by Abbot Bernard\n</code></pre>\n<blockquote>\n<p>‘The road to hell is paved with good intentions’ by Abbot Bernard</p>\n</blockquote>\n<h4>List</h4>\n<pre><code class=\"language-md\">- List\n  - List\n- List\n\n1. One\n2. Two\n3. Three\n</code></pre>\n<ul>\n<li>List\n<ul>\n<li>List</li>\n</ul>\n</li>\n<li>List</li>\n</ul>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<h4>Horizontal rule</h4>\n<pre><code class=\"language-md\">---\n</code></pre>\n<hr>\n<h4>Code block</h4>\n<div class=\"highlight highlight-source-lisp notranslate position-relative overflow-auto\">\n<pre>\n`Inline code` with backticks\n```js\n  console.log(\"Code Blog in JavaScript\");\n```\n</pre>\n</div>\n<p><code>Inline code</code> with backticks</p>\n<pre><code class=\"language-js\">console.log(&quot;Code Blog in JavaScript&quot;);\n</code></pre>\n<h3>Additional Markdown syntax</h3>\n<h4>Checkbox</h4>\n<pre><code class=\"language-md\">- [ ] Checkbox\n- [x] Checkbox with tick\n</code></pre>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> Checkbox</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> Checkbox with tick</label></li>\n</ul>\n<h4>Image with caption</h4>\n<pre><code class=\"language-md\">![Deno](https://deno.land/images/artwork/deno_matrix.png &quot;Matrix by bramaudi&quot;)\n</code></pre>\n<figure data-type=\"image\"><img src=\"https://deno.land/images/artwork/deno_matrix.png\" alt=\"Deno\" loading=\"lazy\" decoding=\"async\"><figcaption>Matrix by bramaudi</figcaption></figure>\n<h4>Footer</h4>\n<pre><code class=\"language-md\">Here is a footnote reference[^1]. [^1]: Here is the footnote.\n</code></pre>\n<p>Here is a footnote reference[^1]. [^1]: Here is the footnote.</p>\n<h4>Additional inline syntax</h4>\n<pre><code class=\"language-md\">~sub~ ^sup^ ==mark== [[kbd]] _underline_ ++insert++ ~~delete~~\n</code></pre>\n<p><sub>sub</sub>\n<sup>sup</sup>\n<mark>mark</mark>\n<kbd>kbd</kbd>\n<u>underline</u>\n<ins>insert</ins>\n<del>delete</del></p>\n<h4>Description list</h4>\n<pre><code class=\"language-md\">: Definition 1 Term 2 with _inline markup_ : Definition 2 Third paragraph of\ndefinition 2.\n</code></pre>\n<dl>\n  <dt>Definition 1</dt>\n  <dd>Term 2 with inline.</dd>\n  <dt>Definition 2</dt>\n  <dd>Third paragraph of definition 2.</dd>\n</dl>\n<h4>Abbreviation</h4>\n<pre><code class=\"language-md\">*[abbr]: Abbreviation\n</code></pre>\n<p><abbr title=\"Abbreviation\">abbr</abbr></p>\n<h4>Table</h4>\n<h5>Normal</h5>\n<pre><code class=\"language-md\">| Syntax    | Description |\n| --------- | ----------- |\n| Header    | Title       |\n| Paragraph | Text        |\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Header</td>\n<td>Title</td>\n</tr>\n<tr>\n<td>Paragraph</td>\n<td>Text</td>\n</tr>\n</tbody>\n</table>\n<h5>Multiline</h5>\n<pre><code class=\"language-md\">| Markdown  | Rendered HTML |\n| --------- | ------------- |\n| _Italic_  | _Italic_      |\n|           |               |\n| - Item 1  | - Item 1      |\n| - Item 2  | - Item 2      |\n| ```python | ```python \\   |\n| .1 + .2   | .1 + .2       |\n</code></pre>\n<table><thead><tr><th>Markdown</th><th>Rendered HTML</th></tr></thead> <tbody>\n  <tr> <td> <pre><code>*Italic* </code></pre> </td> <td> <p><em>Italic</em></p>\n  </td> </tr> <tr> <td> <pre><code>- Item 1 - Item 2</code></pre> </td> <td>\n  <ul> <li>Item 1</li> <li>Item 2</li> </ul> </td> </tr> <tr> <td>\n<pre><code>\n```python\n.1 + .2\n```\n</code></pre> </td> <td> <pre><code class=\"language-python\">.1 + .2\n  </code></pre> </td> </tr> </tbody> </table>\n<h5>Rowspan</h5>\n<pre><code class=\"language-md\">|                       Stage | Direct Products | ATP Yields |\n| --------------------------: | --------------: | ---------: |\n|                  Glycolysis |           2 ATP |            |\n|                          ^^ |          2 NADH |   3--5 ATP |\n|          Pyruvaye oxidation |          2 NADH |      5 ATP |\n|           Citric acid cycle |           2 ATP |            |\n|                          ^^ |          6 NADH |     15 ATP |\n|                          ^^ |         2 FADH2 |      3 ATP |\n|              **30--32** ATP |                 |            |\n| [Net ATP yields per hexose] |                 |            |\n</code></pre>\n<table> <caption id=\"netatpyieldsperhexose\">Net ATP yields per hexose</caption>\n  <thead> <tr> <th align=\"right\">Stage</th> <th align=\"right\">Direct\nProducts</th> <th align=\"right\">ATP Yields</th> </tr> </thead> <tbody> <tr> <td\nalign=\"right\" rowspan=\"2\">Glycolysis</td> <td align=\"right\" colspan=\"2\">2\nATP</td> </tr> <tr> <td align=\"right\">2 NADH</td> <td align=\"right\">3–5\nATP</td> </tr> <tr> <td align=\"right\">Pyruvaye oxidation</td> <td\nalign=\"right\">2 NADH</td> <td align=\"right\">5 ATP</td> </tr> <tr> <td\nalign=\"right\" rowspan=\"3\">Citric acid cycle</td> <td align=\"right\"\ncolspan=\"2\">2 ATP</td> </tr> <tr> <td align=\"right\">6 NADH</td> <td\nalign=\"right\">15 ATP</td> </tr> <tr> <td align=\"right\">2 FADH2</td> <td\nalign=\"right\">3 ATP</td> </tr> <tr> <td align=\"right\"\ncolspan=\"3\"><strong>30–32</strong> ATP</td> </tr> </tbody> </table>\n<h4>Headerless</h4>\n<pre><code class=\"language-md\">|--|--|--|--|--|--|--|--| |♜| |♝|♛|♚|♝|♞|♜| | |♟|♟|♟| |♟|♟|♟| |♟| |♞| | | | | |\n| |♗| | |♟| | | | | | | | |♙| | | | | | | | | |♘| | | |♙|♙|♙|♙| |♙|♙|♙|\n|♖|♘|♗|♕|♔| | |♖|\n</code></pre>\n<table> <tbody> <tr> <td>♜</td> <td></td> <td>♝</td> <td>♛</td> <td>♚</td>\n  <td>♝</td> <td>♞</td> <td>♜</td> </tr> <tr> <td></td> <td>♟</td> <td>♟</td>\n  <td>♟</td> <td></td> <td>♟</td> <td>♟</td> <td>♟</td> </tr> <tr> <td>♟</td>\n  <td></td> <td>♞</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>\n  <tr> <td></td> <td>♗</td> <td></td> <td></td> <td>♟</td> <td></td> <td></td>\n  <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> <td>♙</td>\n  <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td>\n  <td></td> <td></td> <td>♘</td> <td></td> <td></td> </tr> <tr> <td>♙</td>\n  <td>♙</td> <td>♙</td> <td>♙</td> <td></td> <td>♙</td> <td>♙</td> <td>♙</td>\n  </tr> <tr> <td>♖</td> <td>♘</td> <td>♗</td> <td>♕</td> <td>♔</td> <td></td>\n  <td></td> <td>♖</td> </tr> </tbody> </table>",
      "date_published": "2022-12-26T21:33:15.326Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=AK%23Notes&description=This%20my%20personal%20website%20where%20I%20post%20my%20notes%20about%20thing%20that%20I%20have%20learn.%20Features%20%20Easy%20to:%20%20Setup%20Configure%20Write%20%20%20Supports:%20%20Tags%20Search%20(Power%20by%20DuckDuckGo)%20Canonical%20Open%20Graph%20Analytics%20GitHub%20Pages%20%20%20Auto%20generate:%20%20GitHub%20Pages%20Actions%20file%20Favicon%20Sitemap%20404%20page%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/database/er-diagram/",
      "url": "https://anzenkodo.github.io/notes/programming/database/er-diagram/",
      "title": "ER Diagram",
      "content_html": "<p>An Entity Relationship Diagram (ERD) is a visual representation of different\ndata using conventions that describe how these data are related to each other.</p>\n<p>Example of ER Diagram:</p>\n<figure data-type=\"image\"><img src=\"./ER.svg\" alt=\"ER Diagram\" loading=\"lazy\" decoding=\"async\"></figure>\n<p>In the diagram, the elements inside rectangles are called entities while the\nitems inside diamonds denote the relationships between entities.</p>\n<p>In the diagram, the elements inside rectangles are called entities while the\nitems inside diamonds denote the relationships between entities.</p>\n<h2>Features</h2>\n<h3>Entity</h3>\n<ul>\n<li>An entity can be a person, place, event, or object that is relevant to given\nsystem.</li>\n<li>For Example, a school system may include student, teacher, major courses,\nsubject, fees, and other items.</li>\n<li>Entites are represented in ER diagrams by a rectangles and named using\nsingular nouns.</li>\n</ul>\n<h3>Weak Entity</h3>\n<ul>\n<li>A weak entity is an entity that depends on teh existence of another entity.</li>\n<li>A weak entity is represented in a database by a separated table, but it does\nnot have a primary key of its own.</li>\n<li>It relies on the primary key of the entity on which it depends.</li>\n<li>Example:\n<ul>\n<li>Consider a databse of orders placed by customers at a retail store.\n“customer” entity might be the identifying entity, while the “order” entity\nis the weak entity. Each order is associated with specific customer, and the\ncustomer’s primary key (e.g. a customer ID) is used as the primary key for\nthe order as well. This means that the order cannot be uniquely identified\nwithout also specifying the customer to which it belongs.</li>\n</ul>\n</li>\n<li>The single identifying entity can have multiple weak entities associated with\nit.</li>\n<li>Diagram:<pre><code>+---------+      +--------------+\n|         |      |+------------+|\n| Orders  |------||Orders Items||\n|         |      |+------------+|\n+---------+      +--------------+\n</code></pre>\n</li>\n</ul>\n<h3>Attribute</h3>\n<ul>\n<li>An attributes is a characterstic or property of an entity.</li>\n<li>Attributes are represented as columns in a database table, with each row\nrepresenting a single entity and each column representing an attribute of that\nentity.</li>\n<li>Example: A “customer” table might include attributes such as “name”,\n“address,” and “phone number,” with each attribute storing information about a\nperticular customer.</li>\n<li>There are two types of attributes:\n<ul>\n<li>Multivalued Attribute</li>\n<li>Derived Attribute</li>\n</ul>\n</li>\n</ul>\n<h4>Multivalued Attribute</h4>\n<ul>\n<li>If an attribute can have more than one value it is called an multivalued\nattribute.</li>\n<li>It is important to note that this is different to an attribute having it own\nattributes.</li>\n<li>Example: A “customer” entity can have multiple “phone_numbers” values.</li>\n<li>Diagram: <img src=\"./Multivalued-Attribute.svg\" alt=\"Multivalued Attribute Diagram\"></li>\n</ul>\n<h4>Derived Attribute</h4>\n<ul>\n<li>An attribute based on another attribute.</li>\n<li>Example: “Age” can be derived from “Date of birth”.</li>\n<li>Diagram: <img src=\"./Derived-Attribute.svg\" alt=\"Derived Attribute Diagram\"></li>\n</ul>\n<h3>Relationship</h3>\n<ul>\n<li>A relationship describes how entities interact.</li>\n<li>Example: The entity “carpenter” may be related to the entity “table” by the\nrelationship “builds” or “makes”.</li>\n<li>Relationships are represented by diamond shapes and are labeled using verbs.</li>\n</ul>\n<h4>Recursive Relationship</h4>\n<ul>\n<li>The same entity participates more than once in the relationship.</li>\n<li>Example: An employee can be a supervisor and be supervised, so there is a\nrecursive relationship.</li>\n</ul>\n<h2>Extended Features</h2>\n<h3>Generalization</h3>\n<ul>\n<li>A generalization hierarchy is a form of abstraction that specifies that two or\nmore entities that share common attributes can be generalized into a\nhigher-level entity type called a super type or generic entity.</li>\n<li>The lower level of entities becomes the subtypes, or categories, to the super\ntype. Subtypes are dependent entities.</li>\n<li>Example: Account is the higher-level entity set and saving account and current\naccount are lower-level entity sets.</li>\n<li>Diagram: <img src=\"./Generalization.webp\" alt=\"Generalization Diagram\"></li>\n</ul>\n<h3>Specialization</h3>\n<ul>\n<li>Specialization is the process of taking subsets of the higher-level entity set\nto form lower-level entity sets.</li>\n<li>It is a process of defining a set of subclasses of an entity type, which is\ncalled the super class of the specialization.</li>\n<li>The process of defining subclass is based on the basis of some distinguish\ncharacteristics of the entities in the super class.</li>\n<li>Diagram: <img src=\"./Specialization.webp\" alt=\"Specialization Diagram\"></li>\n</ul>\n<h3>Aggregration</h3>\n<ul>\n<li>Aggregration is a process when relation between two entities is treated as a\nsingle entity.</li>\n<li>Example: The relationship between Center and Course together, is acting as an\nEntity, which is in relationship with another entity Visitor.</li>\n<li>Diagram: <img src=\"./Aggregration.webp\" alt=\"Aggregration Diagram\"></li>\n</ul>\n<h2>Resources</h2>\n<ul>\n<li><a href=\"https://www.lucidchart.com/pages/er-diagrams\">What is an Entity Relationship Diagram (ERD)?</a></li>\n<li><a href=\"https://www.studytonight.com/dbms/generalization-and-specialization.php\">The Enhanced ER Model</a></li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=ER Diagram&description=An%20Entity%20Relationship%20Diagram%20(ERD)%20is%20a%20visual%20representation%20of%20different%20data%20using%20conventions%20that%20describe%20how%20these%20data%20are%20related%20to%20each%20other.%20Example%20of%20ER%20Diagram:%20%20In%20the%20diagram,%20the%20elements%20inside%20rectangles%20are%20called%20entities%20while%20the%20items%20inside%20diamonds%20d&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/database/er-diagram/question-bank.html",
      "url": "https://anzenkodo.github.io/notes/programming/database/er-diagram/question-bank.html",
      "title": "Question Bank",
      "content_html": "<h2>Question bank for 2 Marks.</h2>\n<h3>1. Define Entity Set?</h3>\n<ul>\n<li>An entity set is a collection of similar entites.</li>\n<li>An entity is an object or concept in the real world that can be identified and\ntracked, such as a person, a place or a thing.</li>\n<li>An entity set is a set of entities of the same type that share common\nproperties.</li>\n<li>Example:\n<ul>\n<li>A “customer” entity set might include all of the customer records in a\ncustomer database, with each record repesenting a single customer. The\nentity set would include attributes such as the customer’s name, address,\nand phone number, as well as any other relevant information.</li>\n</ul>\n</li>\n<li>Entity sets represent as tables in a database, with each row representing a\nsingle entity and each column representing an attribute of that entity.</li>\n</ul>\n<h3>2. Define Generalization?</h3>\n<h3>3. Define Specialization?</h3>\n<h3>4. Explain referential integrity constraints with example?</h3>\n<h3>5. Explain Primary key constraint with example?</h3>\n<h2>Question bank for 3 Marks.</h2>\n<h3>1. Write notes on types of attributes?</h3>\n<h3>2. Explain different types of Keys in DBMS?</h3>\n<h3>3. List out and explain mapping Cardinalities in ER Diagram?</h3>\n<h3>4. Write notes on the following constraints: i) Not NULL ii) Unique</h3>\n<h3>5. Write notes on the following</h3>\n<h4>1. Left Outer Join</h4>\n<h4>2. Right Outer Join</h4>\n<h2>Question bank for 5 Marks.</h2>\n<h3>1. Construct an ER diagram for a car insurance company that has a set of customers each of whom owns one or more cars, Each car has associated with it zero to any number of recorded accidents?</h3>\n<h3>2. Explain Unary operations in relational algebra?</h3>\n<h3>3. Explain Set Theory operation in relational algebra?</h3>\n<h3>4. Define generalization and specialization hierarchy for a motor vehicle sales company. The Company sells motorcycles, passenger cars, vans and buses. Justify your placement of attributes at each level of hierarchy. Explain why they should not be placed at higher or lower level.</h3>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Question Bank&description=Question%20bank%20for%202%20Marks.%201.%20Define%20Entity%20Set?%20%20An%20entity%20set%20is%20a%20collection%20of%20similar%20entites.%20An%20entity%20is%20an%20object%20or%20concept%20in%20the%20real%20world%20that%20can%20be%20identified%20and%20tracked,%20such%20as%20a%20person,%20a%20place%20or%20a%20thing.%20An%20entity%20set%20is%20a%20set%20of%20entities%20of%20the%20same%20type%20th&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/bash.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/bash.html",
      "title": "Bash",
      "content_html": "<p><a href=\"#\">#</a> Bash</p>\n<ul>\n<li>\n<p>Functions Info</p>\n<p><strong>apropos</strong> - List of man pages for possible matches based on a search term.</p>\n</li>\n</ul>\n<h2>Commands</h2>\n<ul>\n<li>\n<p>Man Page Organization</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Man%20Page%202df02a5a631a4ebe9bcfd37a72009fc0.csv\">Man Page</a></p>\n</li>\n<li>\n<p>Redirecting Standard Output</p>\n<pre><code class=\"language-bash\">ls -l /usr/bin &gt; ls-output.txt\n</code></pre>\n<ul>\n<li>This makes output of ls command</li>\n</ul>\n</li>\n<li>\n<p>About <code>uniq</code></p>\n<ul>\n<li><code>uniq</code> to remove any duplicates from the output of the <code>sort</code> command.</li>\n</ul>\n<pre><code class=\"language-bash\">ls /bin /usr/bin | sort | uniq\n</code></pre>\n<ul>\n<li>To see the list of duplicates instead, add the <code>d</code> option to <code>uniq</code></li>\n</ul>\n<pre><code class=\"language-bash\">ls /bin /usr/bin | sort | uniq -d\n</code></pre>\n</li>\n<li>\n<p>About <code>tee</code></p>\n<ul>\n<li><code>tee</code> is like <code>ls &gt; output.txt</code> but it can work with grep command.</li>\n</ul>\n<pre><code class=\"language-bash\">ls /usr/bin | tee ls.txt | grep zip\n</code></pre>\n<h2>About <code>echo</code></h2>\n<pre><code class=\"language-bash\">echo $((2 + 2))\n</code></pre>\n</li>\n<li>\n<p>Symbols</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Symbols%20d88a1a92cda7446fa8a9d2c975c8947e.csv\">Symbols</a></p>\n</li>\n<li>\n<p><code>echo</code> Arithmetic Exponentiation can be nested</p>\n<pre><code class=\"language-bash\">echo $(($((5**2)) * 3))\n</code></pre>\n</li>\n<li>\n<p>The range of integers.</p>\n<pre><code class=\"language-bash\">echo {1..10}\necho a{A{1,2},B{3,4}}b\n</code></pre>\n</li>\n<li>\n<p>Enverment Value List</p>\n<pre><code class=\"language-bash\">cli printenv | less\nset | less\n</code></pre>\n</li>\n</ul>\n<h2>History</h2>\n<ul>\n<li>\n<p>To see the history</p>\n<pre><code class=\"language-bash\">history\n</code></pre>\n</li>\n<li>\n<p>History Command</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/History%20Command%205694bb062b694eb68fa66879592e9106.csv\">History Command</a></p>\n</li>\n<li>\n<p>History Expansion Commands</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/History%20Expansion%20Commands%204935186cd0cd4e49a5c894c0463b2851.csv\">History Expansion Commands</a></p>\n</li>\n<li>\n<p>To record the command</p>\n<pre><code class=\"language-bash\">script\n</code></pre>\n</li>\n</ul>\n<h2>Permissions</h2>\n<ul>\n<li>\n<p>To see the group number</p>\n<pre><code class=\"language-bash\">id\n</code></pre>\n</li>\n<li>\n<p>File Type</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/File%20Type%20b93329415ef14da18905fe8e533748f4.csv\">File Type</a></p>\n</li>\n<li>\n<p>Permission Attributes -rwxrwxr–</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/Permission%20Attributes%20-rwxrwxr%E2%80%93%2035ff6cb19e8645a3b96ba09a33eba035.csv\">Permission Attributes -rwxrwxr–</a></p>\n</li>\n<li>\n<p>File Modes in Binary and Octal</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/File%20Modes%20in%20Binary%20and%20Octal%208ac1bb600cca40ebb1db460155009adb.csv\">File Modes in Binary and Octal</a></p>\n</li>\n<li>\n<p>The attribute for changing the file permission</p>\n<ul>\n<li><code>7 (rwx)</code>, <code>6 (rw-)</code>, <code>5 (r-x)</code>, <code>4 (r--)</code>, and <code>0 (---)</code></li>\n</ul>\n</li>\n<li>\n<p><code>chmod</code> Symbolic Notation</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/chmod%20Symbolic%20Notation%2036655aed32be491d8cf121e4b3981626.csv\">chmod Symbolic Notation</a></p>\n<p><a href=\"https://anzenkodo.github.io/notes/Bash%20da610a137ca64195bdf4ec37d6e4274b/chmod%20Symbolic%20Notation%20Examples%20d2fdf09328984fce96f5699222acfa25.csv\">chmod Symbolic Notation Examples</a></p>\n</li>\n<li>\n<p><code>umask</code> command controls the default permissions given to a file when it is created.</p>\n<pre><code class=\"language-bash\">umask 005\n</code></pre>\n</li>\n</ul>\n<h2>File System</h2>\n<ul>\n<li>\n<p>Testing and Repairing File Systems</p>\n<pre><code class=\"language-bash\">sudo fsck /dev/sdb1\n</code></pre>\n</li>\n<li>\n<p>Make bootable USB drive</p>\n<pre><code class=\"language-bash\">sudo dd bs=4M if=path/to/input.iso of=/dev/sd&lt;?&gt; conv=fdatasync  status=progress\n</code></pre>\n</li>\n</ul>\n<h2>Helpful Command</h2>\n<ul>\n<li>\n<p>Execute <code>find</code> file with command use <code>xargs</code></p>\n<pre><code class=\"language-bash\">find ~ -type f -name &quot;index.html&quot; | xargs ls -l\n</code></pre>\n</li>\n<li>\n<p>Use <code>find</code> to find the file</p>\n<pre><code class=\"language-bash\">find ~ -type f -name &quot;index.html&quot;\n</code></pre>\n</li>\n<li>\n<p>Best way to compress in tar</p>\n<pre><code class=\"language-bash\">tar cfJ playground.tar.xz playground\n</code></pre>\n</li>\n<li>\n<p>How to Mount ISO File on Linux</p>\n<pre><code class=\"language-bash\">mount -t iso9660 -o loop image.iso /mnt/iso_image\n</code></pre>\n</li>\n<li>\n<p>How to sort in Linux</p>\n<pre><code class=\"language-bash\">sort -nk 5\n\n# With command\n\nls -l /usr/share | sort -nk 5\n\n# Sort in ':'\n\nsort -ht ':' -k 3 /etc/passwd | head\n</code></pre>\n</li>\n<li>\n<p>Remove Duplicate use <code>uniq</code></p>\n<pre><code class=\"language-bash\">sort foo.txt | uniq\n</code></pre>\n</li>\n<li>\n<p>Spell check in Terminal</p>\n<pre><code class=\"language-bash\">aspell check filename\n\n# To check HTML code\n\naspell -H check html-filename\n</code></pre>\n</li>\n<li>\n<p>To make PDF</p>\n<pre><code class=\"language-bash\">ls -l ~/ | pr pr.ps | groff &gt; pr.ps\n\n# Convert PostScript file into Potable Document File\n\nps2pdf pr.ps pr.pdf\n</code></pre>\n</li>\n<li>\n<p>Good Locations for Scripts</p>\n<ul>\n<li><code>~/bin</code>Scripts intended for personal use.</li>\n<li><code>/usr/local/bin</code>Script that everyone on a system is allowed to use.</li>\n<li><code>/usr/local/sbin</code>Scripts intended for use by the system administrator</li>\n<li><code>/usr/local</code>Locally supplied software, scripts and compiled programs</li>\n</ul>\n</li>\n</ul>\n<h1>Shell Script</h1>\n<ul>\n<li>\n<p>Assigning Values to Variables and Constants.</p>\n<pre><code class=\"language-bash\">a=z # Assign the string &quot;z&quot; to variable a.\nb=&quot;a string&quot; # Embedded spaces must be within quotes.\nc=&quot;a string and $b&quot; # Other expansions such as variables can be expanded into the assignment.\nd=&quot;$(ls -l foo.txt)&quot; # Results of a command.\ne=$((5 * 7)) # Arithmetic expansion.\nf=&quot;\\t\\ta string\\n&quot; # Escape sequences such as tabs and newlines.\n</code></pre>\n</li>\n<li>\n<p>Using variables with other commands.</p>\n<pre><code class=\"language-bash\">filename=&quot;myFile&quot;\ntouch file\nmv file ${filename}\n</code></pre>\n</li>\n<li>\n<p>Here script</p>\n<pre><code class=\"language-bash\">command &lt;&lt; token\ntext\ntoken\n</code></pre>\n</li>\n<li>\n<p><code>_EOF_</code></p>\n<ul>\n<li>\n<p>Example</p>\n<pre><code class=\"language-bash\"># !/bin/bash\ndate=$(date +&quot;%x %r %Z&quot;)\n\ncat &lt;&lt; _EOF_\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Website&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Website&lt;/h1&gt;\n        &lt;p&gt;Hello World&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n_EOF_\n</code></pre>\n</li>\n<li>\n<p><code>_EOF_</code> with command</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# Script to retrieve a file via FTP\nFTP_SERVER=ftp.nl.debian.org\nFTP_PATH=/debian/dists/stretch/main/installer-amd64/current/images/\ncdrom REMOTE_FILE=debian-cd_info.tar.gz\nftp -n &lt;&lt; _EOF_\nopen $FTP_SERVER\nuser anonymous me@linuxbox\ncd $FTP_PATH\nhash\nget $REMOTE_FILE\nbye\n_EOF_\nls -l &quot;$REMOTE_FILE&quot;\n</code></pre>\n</li>\n<li>\n<p><code>_EOF_</code> with <code>-</code></p>\n<pre><code class=\"language-bash\"># !/bin/bash\ndate=$(date +&quot;%x %r %Z&quot;)\n\ncat &lt;&lt;- _EOF_\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Website&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Website&lt;/h1&gt;\n        &lt;p&gt;Hello World&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n_EOF_\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Shell Functions</p>\n<pre><code class=\"language-bash\"># !/bin/bash\n\nz=human # Gobal variable\n\necho_1() {\necho &quot;hello&quot;\nreturn\n}\n\necho_2() {\ni=world # local veariable\necho &quot;world&quot;\nreturn\n}\n\necho ${echo_1} ${echo_2} $z\n</code></pre>\n</li>\n<li>\n<p>Flow Control: Branching with if</p>\n<ul>\n<li>\n<p><code>if</code></p>\n<pre><code class=\"language-bash\">x=5\nif [ &quot;$x&quot; -eq 5 ]; then\necho &quot;x equals 5.&quot;\nelse\necho &quot;x does not equal 5.&quot;\nfi\n</code></pre>\n</li>\n<li>\n<p><code>if</code> in shell</p>\n<pre><code class=\"language-bash\">if [ “$x” -eq 5 ]; then echo &quot;equals 5&quot;; else echo &quot;does not equal 5&quot;; fi\n</code></pre>\n</li>\n<li>\n<p><code>if</code>, <code>elif</code> and <code>else</code></p>\n<pre><code class=\"language-bash\">if commands; then\ncommands\n[elif commands; then\ncommands...]\n[else\ncommands]\nfi\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Expressions Examples</h2>\n<ul>\n<li>\n<p>File Expressions</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# test-file: Evaluate the status of a file\nFILE=~/.bashrc\nif [ -e &quot;$FILE&quot; ]; then\nif [ -f &quot;$FILE&quot; ]; then\necho &quot;$FILE is a regular file.&quot;\nfi\nif [ -d &quot;$FILE&quot; ]; then\necho &quot;$FILE is a directory.&quot;\nfi\nif [ -r &quot;$FILE&quot; ]; then\necho &quot;$FILE is readable.&quot;\nfi\nif [ -w &quot;$FILE&quot; ]; then\necho &quot;$FILE is writable.&quot;\nfi\nif [ -x &quot;$FILE&quot; ]; then\necho &quot;$FILE is executable/searchable.&quot;\nfi\nelse\necho &quot;$FILE does not exist&quot;\nexit 1\nfi\nexit\n</code></pre>\n</li>\n<li>\n<p>String Expressions</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# test-string: evaluate the value of a string\nANSWER=maybe\nif [ -z &quot;$ANSWER&quot; ]; then\necho &quot;There is no answer.&quot; &gt;&amp;2\nexit 1\nfi\nif [ &quot;$ANSWER&quot; = &quot;yes&quot; ]; then\necho &quot;The answer is YES.&quot;\nelif [ &quot;$ANSWER&quot; = &quot;no&quot; ]; then\necho &quot;The answer is NO.&quot;\nelif [ &quot;$ANSWER&quot; = &quot;maybe&quot; ]; then\necho &quot;The answer is MAYBE.&quot;\nelse\necho &quot;The answer is UNKNOWN.&quot;\nfi\n</code></pre>\n</li>\n<li>\n<p>Integer Expressions</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# test-integer: evaluate the value of an integer.\nINT=-5\nif [ -z &quot;$INT&quot; ]; then\necho &quot;INT is empty.&quot; &gt;&amp;2\nexit 1\nfi\nif [ &quot;$INT&quot; -eq 0 ]; then\necho &quot;INT is zero.&quot;\nelse\nif [ &quot;$INT&quot; -lt 0 ]; then\necho &quot;INT is negative.&quot;\nelse\necho &quot;INT is positive.&quot;\nfi\nif [ $((INT % 2)) -eq 0 ]; then\necho &quot;INT is even.&quot;\nelse\necho &quot;INT is odd.&quot;\nfi\nfi\n</code></pre>\n</li>\n<li>\n<p>File Expressions</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Is True If:</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file1 -ef file2</td>\n<td>file1 and file2 have the same inode numbers (the two filenames refer to the same file by hard linking).</td>\n</tr>\n<tr>\n<td>file1 -nt file2</td>\n<td>file1 is newer than file2.</td>\n</tr>\n<tr>\n<td>file1 -ot file2</td>\n<td>file1 is older than file2.</td>\n</tr>\n<tr>\n<td>-b file</td>\n<td>file exists and is a block-special (device) file.</td>\n</tr>\n<tr>\n<td>-c file</td>\n<td>file exists and is a character-special (device) file.</td>\n</tr>\n<tr>\n<td>-d file</td>\n<td>file exists and is a directory.</td>\n</tr>\n<tr>\n<td>-e file</td>\n<td>file exists.</td>\n</tr>\n<tr>\n<td>-f file</td>\n<td>file exists and is a regular file.</td>\n</tr>\n<tr>\n<td>-g file</td>\n<td>file exists and is set-group-ID.</td>\n</tr>\n<tr>\n<td>-G file</td>\n<td>file exists and is owned by the effective group ID.</td>\n</tr>\n<tr>\n<td>-k file</td>\n<td>file exists and has its “sticky bit” set.</td>\n</tr>\n<tr>\n<td>-L file</td>\n<td>file exists and is a symbolic link.</td>\n</tr>\n<tr>\n<td>-O file</td>\n<td>file exists and is owned by the effective user ID.</td>\n</tr>\n<tr>\n<td>-p file</td>\n<td>file exists and is a named pipe.</td>\n</tr>\n<tr>\n<td>-r file</td>\n<td>file exists and is readable (has readable permission for the effective user).</td>\n</tr>\n<tr>\n<td>-s file</td>\n<td>file exists and has a length greater than zero.</td>\n</tr>\n<tr>\n<td>-S file</td>\n<td>file exists and is a network socket.</td>\n</tr>\n<tr>\n<td>-t fd</td>\n<td>fd is a file descriptor directed to/from the terminal. This can be used to determine whether standard input/output/error is being redirected.</td>\n</tr>\n<tr>\n<td>-u file</td>\n<td>file exists and is setuid.</td>\n</tr>\n<tr>\n<td>-w file</td>\n<td>file exists and is writable (has write permission for the effective user).</td>\n</tr>\n<tr>\n<td>-x file</td>\n<td>file exists and is executable (has execute/search permission for the effective user).</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>String Expressions</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Is True If…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>string</td>\n<td>string is not null.</td>\n</tr>\n<tr>\n<td>-n string</td>\n<td>The length of string is greater than zero.</td>\n</tr>\n<tr>\n<td>-z string</td>\n<td>The length of string is zero.</td>\n</tr>\n<tr>\n<td><code>string1 = string2</code> <code>string1 == string2</code></td>\n<td>string1 and string2 are equal. Single or double equal signs may be used. The use of double equal signs is supported by bash and is generally preferred, but it is not POSIX compliant.</td>\n</tr>\n<tr>\n<td>string1 != string2</td>\n<td>string1 and string2 are not equal.</td>\n</tr>\n<tr>\n<td>string1 &gt; string2</td>\n<td>string1 sorts after string2.</td>\n</tr>\n<tr>\n<td>string1 &lt; string2</td>\n<td>string1 sorts before string2.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Integer Expressions</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Is True If…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>integer1 -eq integer2</td>\n<td>integer1 is equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 -ne integer2</td>\n<td>integer1 is not equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 -le integer2</td>\n<td>integer1 is less than or equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 is less than or equal to integer2.</td>\n<td>integer1 is less than integer2.</td>\n</tr>\n<tr>\n<td>integer1 -ge integer2</td>\n<td>integer1 is greater than or equal to integer2.</td>\n</tr>\n<tr>\n<td>integer1 -gt integer2</td>\n<td>integer1 is greater than integer2.</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Bash&description=%23%20Bash%20%20%20Functions%20Info%20apropos%20-%20List%20of%20man%20pages%20for%20possible%20matches%20based%20on%20a%20search%20term.%20%20%20Commands%20%20%20Man%20Page%20Organization%20Man%20Page%20%20%20Redirecting%20Standard%20Output%20ls%20-l%20/usr/bin%20&gt;%20ls-output.txt%20%20%20This%20makes%20output%20of%20ls%20command%20%20%20%20About%20uniq%20%20uniq%20to%20remove%20any%20duplica&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/css.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/css.html",
      "title": "CSS",
      "content_html": "<h1>CSS</h1>\n<p><a href=\"https://anzenkodo.github.io/notes/CSS%208946e12a95f04e3490bd9c09bfb99d1e/SASS%20d57c9cbb233644a3a615a487f4cdf949.md\">SASS</a></p>\n<ul>\n<li>\n<p>BEM Method</p>\n<pre><code class=\"language-css\">/* Block component */\n.btn {}\n/* Element that depends upon the block */\n.btn__price {}\n/* Modifier that changes the style of the block */\n.btn--orange {}\n.btn--big {}\n</code></pre>\n</li>\n<li>\n<p>Dark Mode Setting</p>\n<pre><code class=\"language-css\">:root {\n  color-scheme: light dark; /* both supported */\n}\n</code></pre>\n</li>\n<li>\n<p>Image Dark</p>\n<ul>\n<li>\n<p>Apply the filter directly on the body tag.</p>\n<pre><code class=\"language-css\">body.dark-theme img {\n  filter: brightness(.8) contrast(1.2);\n}\n</code></pre>\n</li>\n<li>\n<p>Or apply it via media query.</p>\n<pre><code class=\"language-css\">@media (prefers-color-scheme: dark) {\n  img {\n    filter: brightness(.8) contrast(1.2);\n  }\n}\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Image prefer Dark</p>\n<pre><code class=\"language-html\">&lt;picture&gt;\n  &lt;!-- Use this image if the user's OS setting is light or unset --&gt;\n  &lt;source srcset=&quot;photo-light.png&quot; media=&quot;(prefers-color-scheme: light) or (prefers-color-scheme: no-preference)&quot;&gt;\n  &lt;!-- Use this image if the user's OS setting is dark --&gt;\n  &lt;source srcset=&quot;photo-dark.png&quot; media=&quot;(prefers-color-scheme: dark)&quot;&gt;\n&lt;/picture&gt;\n</code></pre>\n</li>\n<li>\n<p>Non-standard attributes, dataset</p>\n<pre><code class=\"language-css\">&lt;style&gt;\n  /* styles rely on the custom attribute &quot;order-state&quot; */\n  .order[order-state=&quot;new&quot;] {\n    color: green;\n  }\n\n  .order[order-state=&quot;pending&quot;] {\n    color: blue;\n  }\n\n  .order[order-state=&quot;canceled&quot;] {\n    color: red;\n  }\n&lt;/style&gt;\n\n&lt;div class=&quot;order&quot; order-state=&quot;new&quot;&gt;\n  A new order.\n&lt;/div&gt;\n\n&lt;div class=&quot;order&quot; order-state=&quot;pending&quot;&gt;\n  A pending order.\n&lt;/div&gt;\n\n&lt;div class=&quot;order&quot; order-state=&quot;canceled&quot;&gt;\n  A canceled order.\n&lt;/div&gt;\n</code></pre>\n</li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=CSS&description=CSS%20SASS%20%20%20BEM%20Method%20/*%20Block%20component%20*/%20.btn%20{}%20/*%20Element%20that%20depends%20upon%20the%20block%20*/%20.btn__price%20{}%20/*%20Modifier%20that%20changes%20the%20style%20of%20the%20block%20*/%20.btn--orange%20{}%20.btn--big%20{}%20%20%20%20Dark%20Mode%20Setting%20:root%20{%20%20%20color-scheme:%20light%20dark;%20/*%20both%20supported%20*/%20}%20%20%20%20Image%20Da&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/c.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/c.html",
      "title": "C",
      "content_html": "<h1>C</h1>\n<ul>\n<li>In fact, you should use the main() to do very little except call each of the other functions.</li>\n<li>A good rule of thumb is that a function should not take more lines than will fit on a single screen. If the function is longer than that, you’re probably making it do too much.</li>\n<li>The difference between local and global variables:\n<ul>\n<li>A variable is global only if you define the variable (such as inti;) before a function name.</li>\n<li>A variable is local only if you define it after an opening brace. A function always begins with opening braces. Some statements, such as while, also have opening braces, and you can define local variables within those braces as well.</li>\n</ul>\n</li>\n<li>Local variables are safer than global variables.</li>\n<li>Don’t define global variables in the middle of a program. They’re too hard to locate if you do.</li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=C&description=C%20%20In%20fact,%20you%20should%20use%20the%20main()%20to%20do%20very%20little%20except%20call%20each%20of%20the%20other%20functions.%20A%20good%20rule%20of%20thumb%20is%20that%20a%20function%20should%20not%20take%20more%20lines%20than%20will%20fit%20on%20a%20single%20screen.%20If%20the%20function%20is%20longer%20than%20that,%20you’re%20probably%20making%20it%20do%20too%20much.%20The%20di&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/java.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/java.html",
      "title": "Java",
      "content_html": "<h1>Java</h1>\n<h2>1) Write a program to check number is even or odd using if else.</h2>\n<pre><code class=\"language-java\">import java.util.Scanner;\n\n/**\n * Java Program - Check if Number is Even or Odd\n */\n\npublic class Example {\n\n    public static void main(String[] args) {\n        //create a scanner to read bytes from console entered by user via keyboard\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(&quot;Enter a number : &quot;);\n        //read integer from user\n        int a = scanner.nextInt();\n\n        //check if the number is even or odd\n        if(a%2==0) {\n            System.out.println(&quot;The number is even.&quot;);\n        } else {\n            System.out.println(&quot;The number is odd.&quot;);\n        }\n\n        //close the scanner\n        scanner.close();\n    }\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>Enter a number : 4\nThe number is even.\n</code></pre>\n<h2>2) Write a program to check switch case statement using character datatype.</h2>\n<pre><code class=\"language-java\">public class SwitchExample {\npublic static void main(String[] args) {\n    //Declaring a variable for switch expression\n    String name=&quot;a&quot;;\n    //Switch expression\n    switch(name){\n    //Case statements\n    case &quot;a&quot;: System.out.println(&quot;Aman is in Database.&quot;);\n    break;\n    case &quot;r&quot;: System.out.println(&quot;Ravi is in Database.&quot;);\n    break;\n    case &quot;g&quot;: System.out.println(&quot;Gita is in Database.&quot;);\n    break;\n    //Default case statement\n    default:System.out.println(&quot;Name is not in database.&quot;);\n    }\n}\n}\n</code></pre>\n<pre><code>Aman is in Database.\n</code></pre>\n<h2>3) Develop a program to print command line argument using for loop.</h2>\n<pre><code class=\"language-java\">class CommandLineExample{\n    public static void main(String args[]){\n        System.out.println(&quot;Your first argument is: &quot;+args[0]);\n        for (int i; i &lt;= 5; i++) {\n            System.out.println(arg[0]);\n        }\n    }\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>&gt; java CommandLineExample Hello\nYour first argument is: Hello\nHello\nHello\nHello\nHello\nHello\nHello\n</code></pre>\n<h2>4) Develop a program to show the use of implicit typecasting.</h2>\n<pre><code class=\"language-java\">public class ImplicitTypecastingExample {\n   public static void main(String args[]) {\n      byte p = 12;\n      System.out.println(&quot;byte value : &quot;+p);\n      // Implicit Typecasting\n      short q = p;\n      System.out.println(&quot;short value : &quot;+q);\n      int r = q;\n      System.out.println(&quot;int value : &quot;+r);\n      long s = r;\n      System.out.println(&quot;long value : &quot;+s);\n      float t = s;\n      System.out.println(&quot;float value : &quot;+t);\n      double u = t;\n      System.out.println(&quot;double value : &quot;+u);\n   }\n}\n</code></pre>\n<pre><code>byte value : 12\nshort value : 12\nint value : 12\nlong value : 12\nfloat value : 12.0\ndouble value : 12.0\n</code></pre>\n<h2>5) Write a program to implement different types of constructors to perform addition of complex numbers.</h2>\n<pre><code class=\"language-java\">public class ComplexNumber{\n   //for real and imaginary parts of complex numbers\n   double real, img;\n\n   //constructor to initialize the complex number\n   ComplexNumber(double r, double i){\n\tthis.real = r;\n\tthis.img = i;\n   }\n\n   public static ComplexNumber sum(ComplexNumber c1, ComplexNumber c2)\n   {\n\t//creating a temporary complex number to hold the sum of two numbers\n        ComplexNumber temp = new ComplexNumber(0, 0);\n\n        temp.real = c1.real + c2.real;\n        temp.img = c1.img + c2.img;\n\n        //returning the output complex number\n        return temp;\n    }\n    public static void main(String args[]) {\n\tComplexNumber c1 = new ComplexNumber(5.5, 4);\n\tComplexNumber c2 = new ComplexNumber(1.2, 3.5);\n        ComplexNumber temp = sum(c1, c2);\n        System.out.printf(&quot;Sum is: &quot;+ temp.real+&quot; + &quot;+ temp.img +&quot;i&quot;);\n    }\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>Sum is: 6.7 + 7.5i\n</code></pre>\n<h2>6) Write a program to show the use of all methods of String class.</h2>\n<pre><code class=\"language-java\">public class StringMethodsDemo {\n\tpublic static void main(String[] args) {\n\t\tString targetString = &quot;Java is fun to learn&quot;;\n\t\tString s1= &quot;JAVA&quot;;\n\t\tString s2= &quot;Java&quot;;\n\t\tString s3 = &quot;  Hello Java  &quot;;\n\n\t\tSystem.out.println(&quot;Char at index 2(third position): &quot; + targetString.charAt(2));\n\t\tSystem.out.println(&quot;After Concat: &quot;+ targetString.concat(&quot;-Enjoy-&quot;));\n\t\tSystem.out.println(&quot;Checking equals ignoring case: &quot; +s2.equalsIgnoreCase(s1));\n\t\tSystem.out.println(&quot;Checking equals with case: &quot; +s2.equals(s1));\n\t\tSystem.out.println(&quot;Checking Length: &quot;+ targetString.length());\n\t\tSystem.out.println(&quot;Replace function: &quot;+ targetString.replace(&quot;fun&quot;, &quot;easy&quot;));\n\t\tSystem.out.println(&quot;SubString of targetString: &quot;+ targetString.substring(8));\n\t\tSystem.out.println(&quot;SubString of targetString: &quot;+ targetString.substring(8, 12));\n\t\tSystem.out.println(&quot;Converting to lower case: &quot;+ targetString.toLowerCase());\n\t\tSystem.out.println(&quot;Converting to upper case: &quot;+ targetString.toUpperCase());\n\t\tSystem.out.println(&quot;Triming string: &quot; + s3.trim());\n\t\tSystem.out.println(&quot;searching s1 in targetString: &quot; + targetString.contains(s1));\n\t\tSystem.out.println(&quot;searching s2 in targetString: &quot; + targetString.contains(s2));\n\n\t\tchar [] charArray = s2.toCharArray();\n\t\tSystem.out.println(&quot;Size of char array: &quot; + charArray.length);\n\t\tSystem.out.println(&quot;Printing last element of array: &quot; + charArray[3]);\n\n\t}\n\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>Char at index 2(third position): v\nAfter Concat: Java is fun to learn-Enjoy-\nChecking equals ignoring case: true\nChecking equals with case: false\nChecking Length: 20\nReplace function: Java is easy to learn\nSubString of targetString: fun to learn\nSubString of targetString: fun\nConverting to lower case: java is fun to learn\nConverting to upper case: JAVA IS FUN TO LEARN\nTriming string: Hello Java\nsearching s1 in targetString: false\nsearching s2 in targetString: true\nSize of char array: 4\nPrinting last element of array: a\n</code></pre>\n<h2>7) Write a program to implement all methods of StringBuffer class.</h2>\n<pre><code class=\"language-java\">class StringBufferExample{\n    public static void main(String args[]){\n        StringBuffer sb=new StringBuffer(&quot;Hello&quot;);\n        sb.append(&quot; Java&quot;);\n        System.out.println(sb);\n        sb.insert(1,&quot;Java&quot;);\n        System.out.println(sb);\n        sb.replace(1,3,&quot;Java&quot;);\n        System.out.println(sb);\n        sb.delete(1,3);\n        System.out.println(sb);\n        sb.reverse();\n        System.out.println(sb);\n        System.out.println(sb.capacity());\n        sb.ensureCapacity(10);\n        System.out.println(sb.capacity());\n    }\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>Hello Java\nHJavaello Java\nHJavavaello Java\nHvavaello Java\navaJ olleavavH\n21\n21\n</code></pre>\n<h2>8) Write a program to implement single inheritance.</h2>\n<pre><code class=\"language-java\">class Animal{\nvoid eat(){System.out.println(&quot;eating...&quot;);}\n}\nclass Dog extends Animal{\nvoid bark(){System.out.println(&quot;barking...&quot;);}\n}\nclass TestInheritance{\npublic static void main(String args[]){\nDog d=new Dog();\nd.bark();\nd.eat();\n}}\n</code></pre>\n<p>O/P</p>\n<pre><code>barking...\neating...\n</code></pre>\n<h2>9) Write a program to implement multilevel inheritance.</h2>\n<pre><code class=\"language-java\">class Animal{\nvoid eat(){System.out.println(&quot;eating...&quot;);}\n}\nclass Dog extends Animal{\nvoid bark(){System.out.println(&quot;barking...&quot;);}\n}\nclass BabyDog extends Dog{\nvoid weep(){System.out.println(&quot;weeping...&quot;);}\n}\nclass TestInheritance2{\npublic static void main(String args[]){\nBabyDog d=new BabyDog();\nd.weep();\nd.bark();\nd.eat();\n}}\n</code></pre>\n<p>O/P</p>\n<pre><code>weeping...\nbarking...\neating...\n</code></pre>\n<h2>10) Develop a program to find area of rectangle and circle using interface.</h2>\n<pre><code class=\"language-java\">class FindLargestShape {\n  public static void main(String arg[]) {\n    Rectangle r = new Rectangle(10, 4);\n    System.out.println(&quot;Rectangle Area : &quot; + r.getArea());\n    System.out.println();\n  }\n}\n\nclass Rectangle {\n  double length;\n  double breadth;\n  Rectangle(double length, double breadth) {\n    this.length = length;\n    this.breadth = breadth;\n  }\n  double getArea() {\n    return length * breadth;\n  }\n\n}\n</code></pre>\n<h2>11) Write a program to implement user defined packages in terms of creating a new package and importing the same.</h2>\n<pre><code class=\"language-java\">package example;\n\npublic class gfg {\n\n    public void show()\n    {\n        System.out.println(&quot;Hello geeks!! How are you?&quot;);\n    }\n\n    public static void main(String args[])\n    {\n        gfg obj = new gfg();\n        obj.show();\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\">import example.gfg;\n\npublic class GFG {\n    public static void main(String args[])\n    {\n        gfg obj = new gfg();\n        System.out.println(obj.show());\n    }\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>Hello geeks!! How are you?\n</code></pre>\n<h2>12) Write a program to implement two thread use sleep method.</h2>\n<pre><code class=\"language-java\">class TestSleepMethod1 extends Thread{\n public void run(){\n  for(int i=1;i&lt;5;i++){\n  // the thread will sleep for the 500 milli seconds\n    try{Thread.sleep(500);}catch(InterruptedException e){System.out.println(e);}\n    System.out.println(i);\n  }\n }\n public static void main(String args[]){\n  TestSleepMethod1 t1=new TestSleepMethod1();\n  TestSleepMethod1 t2=new TestSleepMethod1();\n\n  t1.start();\n  t2.start();\n }\n}\n</code></pre>\n<pre><code>11\n2\n2\n3\n3\n4\n4\n</code></pre>\n<h2>13) Develop a program to accept a password from the user and throw “Authentication Failure” exception if the password is incorrect.</h2>\n<pre><code class=\"language-java\">import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nclass AuthenticationException extends Exception {\n\n public AuthenticationException(String message) {\n\n  super(message);\n }\n}\n\npublic class AuthenticationExcDemo {\n\n public static void main(String[] args) {\n\n  InputStreamReader isr = new InputStreamReader(System.in);\n  BufferedReader br = new BufferedReader(isr);\n  String pwd;\n\n  try {\n\n   System.out.print(&quot;Enter password :: &quot;);\n   pwd = br.readLine();\n\n   if(!pwd.equals(&quot;123&quot;))\n    throw new AuthenticationException(&quot;Incorrect password\\nType correct password&quot;);\n   else\n    System.out.println(&quot;Welcome User !!!&quot;);\n\n  }\n  catch (IOException e) {\n   e.printStackTrace();\n  }\n  catch (AuthenticationException a) {\n   a.printStackTrace();\n  }\n  System.out.println(&quot;BYE BYE&quot;);\n }\n\n}\n</code></pre>\n<h2>14) Develop a program to draw a polygon using applet.</h2>\n<pre><code class=\"language-java\">import java.awt.*;\nimport javax.swing.*;\n\npublic class poly extends JApplet {\n\n    // called when applet is started\n    public void init()\n    {\n        // set the size of applet to 300, 300\n        setSize(200, 200);\n        show();\n    }\n\n    // invoked when applet is started\n    public void start()\n    {\n    }\n\n    // invoked when applet is closed\n    public void stop()\n    {\n    }\n\n    public void paint(Graphics g)\n    {\n        // x coordinates of vertices\n        int x[] = { 10, 30, 40, 50, 110, 140 };\n\n        // y coordinates of vertices\n        int y[] = { 140, 110, 50, 40, 30, 10 };\n\n        // number of vertices\n        int numberofpoints = 6;\n\n        // set the color of line drawn to blue\n        g.setColor(Color.blue);\n\n        // draw the polygon using drawPolygon function\n        g.drawPolygon(x, y, numberofpoints);\n    }\n}\n</code></pre>\n<h2>15) Develop an applet for drawing a human face.</h2>\n<pre><code class=\"language-java\">import java.applet.*;\nimport java.awt.*;\npublic class Human_Face extends Applet\n{\n    //Initialize the applet\n    public void init()\n    {\n\tsetBackground(Color.white);\n    }\n    //Draw the human face\n    public void paint(Graphics g)\n    {\n        //Change color to cream\n        Color clr=new Color(255,179,86);\n        g.setColor(clr);\n        //Draw and fill the face\n        g.drawOval(100,100,250,300);\n        g.fillOval(100,100,250,300);\n        //Change color to black\n        g.setColor(Color.black);\n        //Draw the left eye\n        g.drawOval(160,185,40,25);\n        g.fillOval(160,185,40,25);\n        //Draw the right eye\n        g.drawOval(250,185,40,25);\n        g.fillOval(250,185,40,25);\n        //Draw the Left Eyebrow\n        g.drawArc(160,170,35,10,0,180);\n        //Draw the Right Eyebrow\n        g.drawArc(250,170,35,10,0,180);\n        //Draw the Nose\n        g.drawLine(210,265,210,275);\n        g.drawLine(240,265,240,275);\n        g.drawArc(210,275,30,10,0,-180);\n       //Draw the smile\n        g.drawArc(175,300,100,50,0,-180);\n    }\n}\n</code></pre>\n<h2>16) Develop a program to draw square inside a circle using applet.</h2>\n<pre><code class=\"language-java\">import java.applet.&quot;;\nimport java.awt.*;\n/* &lt;applet code=shapes width=10 height=10&gt; &lt;/applet&gt;*/\npublic class shapes extends Applet {\n    public void paint(Graphics g) {\n    g.drawString(&quot;Square inside a circle&quot;, 150,110);\n    g.drawOval(180,10,80,80);\n    g.drawRect(192,22,55,55):\n    g.drawString(&quot;Circle inside a square&quot;, 290, 110);\n    g.drawRect(290, 10, 80, 80);\n    g.drawOval(290, 10, 80, 80);\n    }\n}\n</code></pre>\n<h2>17) Develop a program to copy characters from one file to another.</h2>\n<pre><code class=\"language-java\">import java.io.*;\nimport java.util.*;\nclass Copyfile {\n public static void main(String arg[]) throws Exception {\n  Scanner sc = new Scanner(System.in);\n  System.out.print(&quot;Provide source file name :&quot;);\n  String sfile = sc.next();\n  System.out.print(&quot;Provide destination file name :&quot;);\n  String dfile = sc.next();\n  FileReader fin = new FileReader(sfile);\n  FileWriter fout = new FileWriter(dfile, true);\n  int c;\n  while ((c = fin.read()) != -1) {\n   fout.write(c);\n  }\n  System.out.println(&quot;Copy finish...&quot;);\n  fin.close();\n  fout.close();\n }\n}\n</code></pre>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Java&description=Java%201)%20Write%20a%20program%20to%20check%20number%20is%20even%20or%20odd%20using%20if%20else.%20import%20java.util.Scanner;%20%20/**%20%20*%20Java%20Program%20-%20Check%20if%20Number%20is%20Even%20or%20Odd%20%20*/%20%20public%20class%20Example%20{%20%20%20%20%20%20public%20static%20void%20main(String[]%20args)%20{%20%20%20%20%20%20%20%20%20//create%20a%20scanner%20to%20read%20bytes%20from%20console%20en&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/javascript/browser.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/javascript/browser.html",
      "title": "Browser",
      "content_html": "<h1>Browser: Document, Events, Interfaces</h1>\n<h1>Document</h1>\n<h2>document.documentElement</h2>\n<h2>document.body</h2>\n<ul>\n<li>\n<p>You can only but document.body in <body> tag.</p>\n<pre><code class=\"language-html\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;script&gt;\n    alert( &quot;From HEAD: &quot; + document.body ); // null, there's no &lt;body&gt; yet\n  &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;script&gt;\n    alert( &quot;From BODY: &quot; + document.body ); // HTMLBodyElement, now it exists\n  &lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p><code>document.body.style</code></p>\n<pre><code class=\"language-jsx\">// change the background color to red\ndocument.body.style.background = &quot;red&quot;;\n\n// change it back after 1 second\nsetTimeout(() =&gt; document.body.style.background = &quot;&quot;, 1000);\n</code></pre>\n</li>\n</ul>\n<h2>document.head</h2>\n<h2>Searching:</h2>\n<ul>\n<li>\n<p>Live collections of <strong>getElementsBy</strong>* &amp; <strong>querySelector</strong>*</p>\n<ul>\n<li>All methods “getElementsBy*” return a live collection. Such collections always reflect the current state of the document and “auto-update” when it changes.</li>\n</ul>\n<pre><code class=\"language-html\">&lt;div&gt;First div&lt;/div&gt;\n\n&lt;script&gt;\n  let divs = document.getElementsByTagName('div');\n  alert(divs.length); // 1\n&lt;/script&gt;\n\n&lt;div&gt;Second div&lt;/div&gt;\n\n&lt;script&gt;\n  alert(divs.length); // 2\n&lt;/script&gt;\n</code></pre>\n<ul>\n<li>In contrast, querySelectorAll returns a static collection. It’s like a fixed array of elements.</li>\n</ul>\n<pre><code class=\"language-html\">&lt;div&gt;First div&lt;/div&gt;\n\n&lt;script&gt;\n  let divs = document.querySelectorAll('div');\n  alert(divs.length); // 1\n&lt;/script&gt;\n\n&lt;div&gt;Second div&lt;/div&gt;\n\n&lt;script&gt;\n  alert(divs.length); // 1\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>There are 6 main methods to search for nodes in DOM:</p>\n<p><a href=\"https://anzenkodo.github.io/notes/Browser%20Document,%20Events,%20Interfaces%205b1ea1234a324530a62e17f0aecee387/Methods%20to%20Search%20bae8734b53c44a51833cba491564ef97.csv\">Methods to Search</a></p>\n</li>\n<li>\n<p>❓ Search for elements</p>\n<pre><code class=\"language-jsx\">// 1. The table with `id=&quot;age-table&quot;`.\nlet table = document.getElementById('age-table')\n\n// 2. All label elements inside that table\ntable.getElementsByTagName('label')\n// or\ndocument.querySelectorAll('#age-table label')\n\n// 3. The first td in that table (with the word &quot;Age&quot;)\ntable.rows[0].cells[0]\n// or\ntable.getElementsByTagName('td')[0]\n// or\ntable.querySelector('td')\n\n// 4. The form with the name &quot;search&quot;\n// assuming there's only one element with name=&quot;search&quot; in the document\nlet form = document.getElementsByName('search')[0]\n// or, form specifically\ndocument.querySelector('form[name=&quot;search&quot;]')\n\n// 5. The first input in that form.\nform.getElementsByTagName('input')[0]\n// or\nform.querySelector('input')\n\n// 6. The last input in that form\nlet inputs = form.querySelectorAll('input') // find all inputs\ninputs[inputs.length-1] // take the last one\n</code></pre>\n</li>\n</ul>\n<h3>getElement*</h3>\n<ul>\n<li>\n<p>We can get id of the element using the method <code>document.getElementById(id)</code>.</p>\n<pre><code class=\"language-html\">&lt;div id=&quot;elem&quot;&gt;\n\t&lt;p&gt;Hello&lt;/p&gt;\n\t&lt;div id=&quot;elem-content&quot;&gt;World&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\ndocument.getElementById(&quot;elem&quot;).style.background = &quot;green&quot;;\ndocument.getElementById(&quot;elem-content&quot;).style.color = &quot;white&quot;;\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>The <code>getElementsByTagName</code> method of Document interface returns an HTMLCollection of elements with the given tag name.</p>\n<pre><code class=\"language-html\">&lt;ul id=&quot;birds&quot;&gt;\n  &lt;li&gt;Orange-winged parrot&lt;/li&gt;\n  &lt;li class=&quot;endangered&quot;&gt;Philippine eagle&lt;/li&gt;\n  &lt;li&gt;Great white pelican&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;script&gt;\nconsole.log(document.getElementsByTagName(&quot;li&quot;).length);\n// 3\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>getElementsByClassName</code>for finding element with class name.</p>\n<pre><code class=\"language-html\">&lt;form name=&quot;my-form&quot;&gt;\n  &lt;div class=&quot;article&quot;&gt;Article&lt;/div&gt;\n  &lt;div class=&quot;long article&quot;&gt;Long article&lt;/div&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n\tlet form = document.getElementsByName('my-form')[0];\n\n\tlet articles = form.getElementsByClassName('article').length;\n\n\tconsole.log(articles);\n&lt;/script&gt;\n</code></pre>\n</li>\n</ul>\n<h3>querySelector*</h3>\n<ul>\n<li>\n<p><code>document.querySelectorAll(css)</code> returns all elements inside matching the given CSS selector.</p>\n<pre><code class=\"language-html\">&lt;ul&gt;\n  &lt;li&gt;The&lt;/li&gt;\n  &lt;li&gt;test&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul&gt;\n  &lt;li&gt;has&lt;/li&gt;\n  &lt;li&gt;passed&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Hello World&lt;/p&gt;\n&lt;script&gt;\n  let elements = document.querySelectorAll('li:last-child, p');\n\n  for (let elem of elements) {\n    console.log(elem.innerHTML); // &quot;test&quot;, &quot;passed&quot;\n  }\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>The call to <code>document.querySelector(css)</code> returns the first element for the given CSS selector.</p>\n<pre><code class=\"language-html\">&lt;h1&gt;Contents&lt;/h1&gt;\n\n&lt;div class=&quot;contents&quot;&gt;\n  &lt;ul class=&quot;book&quot;&gt;\n    &lt;li class=&quot;chapter&quot;&gt;Chapter 1&lt;/li&gt;\n    &lt;li class=&quot;chapter&quot;&gt;Chapter 1&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n  let chapter = document.querySelector('.chapter'); // LI\n\n  alert(chapter.closest('.book')); // UL\n  alert(chapter.closest('.contents')); // DIV\n\n  alert(chapter.closest('h1')); // null (because h1 is not an ancestor)\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>❓ Make external links orange</p>\n<pre><code class=\"language-html\">&lt;a name=&quot;list&quot;&gt;the list&lt;/a&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;http://google.com&quot;&gt;http://google.com&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;/tutorial&quot;&gt;/tutorial.html&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;local/path&quot;&gt;local/path&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;ftp://ftp.com/my.zip&quot;&gt;ftp://ftp.com/my.zip&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;http://nodejs.org&quot;&gt;http://nodejs.org&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;http://internal.com/test&quot;&gt;http://internal.com/test&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;script&gt;\n\tlet link = document.querySelectorAll('a');\n\t\tfor ( let links of link ) {\n\t\t\tif( String(links.getAttribute('href')).includes('http')) {\n\t\t\t  links.style.color = 'orange';\n\t\t\t};\n\t\t}\n&lt;/script&gt;\n</code></pre>\n<pre><code class=\"language-html\">&lt;a name=&quot;list&quot;&gt;the list&lt;/a&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;http://google.com&quot;&gt;http://google.com&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;/tutorial&quot;&gt;/tutorial.html&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;local/path&quot;&gt;local/path&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;ftp://ftp.com/my.zip&quot;&gt;ftp://ftp.com/my.zip&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;http://nodejs.org&quot;&gt;http://nodejs.org&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;http://internal.com/test&quot;&gt;http://internal.com/test&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;script&gt;\n\tlet links = document.querySelectorAll('a');\n\n\tfor (let link of links) {\n\t  let href = link.getAttribute('href');\n\t  if (!href) continue; // no attribute\n\n\t  if (!href.includes('://')) continue; // no protocol\n\n\t  if (href.startsWith('http://internal.com')) continue; // internal\n\n\t  link.style.color = 'orange';\n\t}\n&lt;/script&gt;\n</code></pre>\n<pre><code class=\"language-html\">&lt;a name=&quot;list&quot;&gt;the list&lt;/a&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;http://google.com&quot;&gt;http://google.com&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;/tutorial&quot;&gt;/tutorial.html&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;local/path&quot;&gt;local/path&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;ftp://ftp.com/my.zip&quot;&gt;ftp://ftp.com/my.zip&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;http://nodejs.org&quot;&gt;http://nodejs.org&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;http://internal.com/test&quot;&gt;http://internal.com/test&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;script&gt;\n\tlet selector = 'a[href*=&quot;://&quot;]:not([href^=&quot;http://internal.com&quot;])';\n\tlet links = document.querySelectorAll(selector);\n\n\tlinks.forEach(link =&gt; link.style.color = 'orange');\n&lt;/script&gt;\n</code></pre>\n</li>\n</ul>\n<h2>Table</h2>\n<ul>\n<li>\n<p>The <table> element supports (in addition to the given above) these properties.</p>\n<ul>\n<li>\n<p>An example of usage:</p>\n<pre><code class=\"language-html\">&lt;table id=&quot;table&quot;&gt;\n  &lt;tr&gt;\n    &lt;td&gt;one&lt;/td&gt;&lt;td&gt;two&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;three&lt;/td&gt;&lt;td&gt;four&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;script&gt;\n  // get td with &quot;two&quot; (first row, second column)\n  let td = table.rows[0].cells[1];\n  td.style.backgroundColor = &quot;red&quot;; // highlight it\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>table.rows</code> – the collection of <tr> elements of the table.</p>\n</li>\n<li>\n<p><code>table.caption/tHead/tFoot</code> – references to elements <caption>, <thead>, <tfoot>.</p>\n</li>\n<li>\n<p><code>table.tBodies</code> – the collection of <tbody> elements.</p>\n</li>\n<li>\n<p><code>tr.cells</code> – the collection of <td> and <th> cells inside the given <tr>.</p>\n</li>\n<li>\n<p><code>tr.sectionRowIndex</code> – the position (index) of the given <tr> inside the enclosing <thead>/<tbody>/<tfoot>.</p>\n</li>\n<li>\n<p><code>tr.rowIndex</code> – the number of the <tr> in the table as a whole (including all table rows).</p>\n</li>\n<li>\n<p><code>td.cellIndex</code> – the number of the cell inside the enclosing <tr>.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>❓ Select all diagonal cells</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    table {\n      border-collapse: collapse;\n    }\n\n    td {\n      border: 1px solid black;\n      padding: 3px 5px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;table&gt;\n    &lt;tr&gt;\n      &lt;td&gt;1:1&lt;/td&gt;\n      &lt;td&gt;2:1&lt;/td&gt;\n      &lt;td&gt;3:1&lt;/td&gt;\n      &lt;td&gt;4:1&lt;/td&gt;\n      &lt;td&gt;5:1&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;1:2&lt;/td&gt;\n      &lt;td&gt;2:2&lt;/td&gt;\n      &lt;td&gt;3:2&lt;/td&gt;\n      &lt;td&gt;4:2&lt;/td&gt;\n      &lt;td&gt;5:2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;1:3&lt;/td&gt;\n      &lt;td&gt;2:3&lt;/td&gt;\n      &lt;td&gt;3:3&lt;/td&gt;\n      &lt;td&gt;4:3&lt;/td&gt;\n      &lt;td&gt;5:3&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;1:4&lt;/td&gt;\n      &lt;td&gt;2:4&lt;/td&gt;\n      &lt;td&gt;3:4&lt;/td&gt;\n      &lt;td&gt;4:4&lt;/td&gt;\n      &lt;td&gt;5:4&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;1:5&lt;/td&gt;\n      &lt;td&gt;2:5&lt;/td&gt;\n      &lt;td&gt;3:5&lt;/td&gt;\n      &lt;td&gt;4:5&lt;/td&gt;\n      &lt;td&gt;5:5&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/table&gt;\n  &lt;script&gt;\n    let table = document.body.firstElementChild;\n    for(let i = 0; i &lt; table.rows.length; i++) {\n      table.rows[i].cells[i].style.background = 'red'\n    }\n    // your code\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n</ul>\n<h2>Methods</h2>\n<ul>\n<li>\n<p><code>Document.createElement()</code> Creates a new element with the given tag name.</p>\n<pre><code class=\"language-html\">&lt;style&gt;\n.alert {\n  padding: 15px;\n  border: 1px solid #d6e9c6;\n  border-radius: 4px;\n  color: #3c763d;\n  background-color: #dff0d8;\n}\n&lt;/style&gt;\n\n&lt;script&gt;\n  let div = document.createElement('div');\n  div.className = &quot;alert&quot;;\n  div.innerHTML = &quot;&lt;strong&gt;Hi there!&lt;/strong&gt; You've read an important message.&quot;;\n\n  document.body.append(div);\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>Document.createTextNode()</code> Creates a new Text node. This method can be used to escape HTML characters.</p>\n<pre><code class=\"language-jsx\">function clicked(word) {\n\tlet printWord = document.createTextNode(word);\n\tdocument.body.append(printWord);\n}\n\nlet button = document.createElement('button');\nbutton.setAttribute('onclick', 'clicked(&quot;Yes &quot;)');\nbutton.innerHTML = 'Click Me!'\ndocument.body.append(button)\n</code></pre>\n</li>\n</ul>\n<h1>DocumentFragment</h1>\n<ul>\n<li>\n<p>The <code>DocumentFragment interface</code> represents a minimal document object that has no parent.</p>\n<pre><code class=\"language-jsx\">let ul = document.createElement(&quot;ul&quot;);\ndocument.body.append(ul);\n\nlet fargment = new DocumentFragment();\n\nfunction getListContent() {\n\n\tfor ( let i = 1; i &lt;= 5; i++ ) {\n\t\tlet li = document.createElement(&quot;li&quot;);\n\t\tli.append(i);\n\t\tfargment.append(li);\n\t}\n\n\tconsole.log(fargment);\n\treturn fargment;\n}\n\nul.append(getListContent());\n</code></pre>\n</li>\n</ul>\n<h1>Node</h1>\n<ul>\n<li>\n<p>Child nodes (or children) – elements that are direct children. In other words, they are nested exactly in the given one. For instance, <head> and <body> are children of <html> element.</p>\n<ul>\n<li>\n<p><code>childNodes</code> read-only property returns a live NodeList of child nodes of the given element where the first child node is assigned index 0.</p>\n<pre><code class=\"language-html\">&lt;html&gt;\n&lt;body&gt;\n  &lt;div&gt;Begin&lt;/div&gt;\n\n  &lt;ul&gt;\n    &lt;li&gt;Information&lt;/li&gt;\n  &lt;/ul&gt;\n\n  &lt;div&gt;End&lt;/div&gt;\n\n  &lt;script&gt;\n    for (let i = 0; i &lt; document.body.childNodes.length; i++) {\n      alert( document.body.childNodes[i] ); // Text, DIV, Text, UL, ..., SCRIPT\n    }\n  &lt;/script&gt;\n  ...more stuff...\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p><code>firstChild</code> read-only property returns the node’s first child in the tree, or null if the node has no children.</p>\n<pre><code class=\"language-html\">&lt;p id=&quot;para-01&quot;&gt;\n  &lt;span&gt;First span&lt;/span&gt;\n&lt;/p&gt;\n\n&lt;script&gt;\n  var p01 = document.getElementById('para-01');\n  alert(p01.firstChild.nodeName);\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>lastChild</code> read-only property returns the last child of the node.</p>\n<pre><code class=\"language-html\">var tr = document.getElementById(&quot;row1&quot;);\nvar corner_td = tr.lastChild;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Siblings are nodes that are children of the same parent.</p>\n<ul>\n<li>\n<p>The next sibling is in<code>nextSibling</code>.</p>\n<pre><code class=\"language-jsx\">alert( document.body.parentNode === document.documentElement ); // true\n</code></pre>\n</li>\n<li>\n<p>the previous one in<code>previousSibling</code>.</p>\n<pre><code class=\"language-jsx\">alert( document.head.nextSibling ); // HTMLBodyElement\n</code></pre>\n</li>\n<li>\n<p>The parent is available as <code>parentNode</code>.</p>\n<pre><code class=\"language-jsx\">alert( document.body.previousSibling ); // HTMLHeadElement\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><code>nodeName</code> to show the element name.</p>\n<pre><code class=\"language-jsx\">&lt;p id=&quot;word&quot;&gt;Hello World&lt;/p&gt;\n&lt;script&gt;\n\tlet elem = document.getElementById('word');\n\tconsole.log(elem.nodeName); // P\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>Node.textContent</code> Pure text.</p>\n<pre><code class=\"language-jsx\">&lt;div id=&quot;elem1&quot;&gt;&lt;/div&gt;\n&lt;div id=&quot;elem2&quot;&gt;&lt;/div&gt;\n\n&lt;script&gt;\n  let name = prompt(&quot;What's your name?&quot;, &quot;&lt;b&gt;Winnie-the-Pooh!&lt;/b&gt;&quot;);\n\n  elem1.innerHTML = name; // Winnie-the-Pooh!\n  elem2.textContent = name; // &lt;b&gt;Winnie-the-Pooh!&lt;/b&gt;\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>❓Count descendants</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n  &lt;ul&gt;\n    &lt;li&gt;Animals\n      &lt;ul&gt;\n        &lt;li&gt;Mammals\n          &lt;ul&gt;\n            &lt;li&gt;Cows&lt;/li&gt;\n            &lt;li&gt;Donkeys&lt;/li&gt;\n            &lt;li&gt;Dogs&lt;/li&gt;\n            &lt;li&gt;Tigers&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li&gt;Other\n          &lt;ul&gt;\n            &lt;li&gt;Snakes&lt;/li&gt;\n            &lt;li&gt;Birds&lt;/li&gt;\n            &lt;li&gt;Lizards&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li&gt;Fishes\n      &lt;ul&gt;\n        &lt;li&gt;Aquarium\n          &lt;ul&gt;\n            &lt;li&gt;Guppy&lt;/li&gt;\n            &lt;li&gt;Angelfish&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li&gt;Sea\n          &lt;ul&gt;\n            &lt;li&gt;Sea trout&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n\t&lt;script&gt;\n\t\tlet lists = document.getElementsByTagName('li');\n\t\tfor (let list of lists) {\n\t\t\tconsole.log(list.textContent);\n\t\t}\n\t&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p><code>node.append(...nodes or strings)</code> – append nodes or strings at the end of node.</p>\n<pre><code class=\"language-jsx\">function clicked(word) {\n\tlet printWord = document.createTextNode(word);\n\tdocument.body.append(printWord);\n}\n\nlet button = document.createElement('button');\nbutton.setAttribute('onclick', 'clicked(&quot; Yes&quot;)');\nbutton.innerHTML = 'Click Me!'\ndocument.body.append(button)\n</code></pre>\n</li>\n<li>\n<p><code>node.prepend(...nodes or strings)</code> – insert nodes or strings at the beginning of node.</p>\n<pre><code class=\"language-jsx\">function clicked(word) {\n\tlet printWord = document.createTextNode(word);\n\tlet button = document.querySelector('button');\n\tbutton.prepend(printWord);\n}\n\nlet button = document.createElement('button');\nbutton.setAttribute('onclick', 'clicked(&quot;----&gt;&quot;)');\nbutton.innerHTML = 'Click Me!'\ndocument.body.append(button)\n</code></pre>\n</li>\n<li>\n<p><code>node.before()</code> &amp; <code>node.after()</code>–- insert nodes or strings before &amp; after node.</p>\n<pre><code class=\"language-html\">&lt;ol id=&quot;ol&quot;&gt;\n  &lt;li&gt;0&lt;/li&gt;\n  &lt;li&gt;1&lt;/li&gt;\n  &lt;li&gt;2&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;script&gt;\n\tol.before(&quot;&lt;p&gt;&quot;);\n\tol.after(&quot;&lt;/p&gt;&quot;);\n\tconsole.log(document.body.outerHTML);\n\t/*\n\t&amp;lt;p&amp;gt;&lt;ol id=&quot;ol&quot;&gt;\n  &lt;li&gt;0&lt;/li&gt;\n  &lt;li&gt;1&lt;/li&gt;\n  &lt;li&gt;2&lt;/li&gt;\n\t&lt;/ol&gt;&amp;lt;/p&amp;gt;\n  */\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>node.replaceWith(...nodes or strings)</code> –- replaces node with the given nodes or strings.</p>\n<pre><code class=\"language-html\">&lt;button onclick=&quot;clicked()&quot;&gt;ClickMe&lt;/button&gt;\n\n&lt;p&gt;&lt;b&gt;Hello World&lt;/b&gt;&lt;/p&gt;\n\n&lt;script&gt;\n\tlet b = document.querySelector('b');\n\tfunction clicked() {\n\t\tb.replaceWith(&quot;Bye World&quot;);\n\t}\n&lt;/script&gt;\n</code></pre>\n</li>\n</ul>\n<h1>ParentNode</h1>\n<ul>\n<li>\n<p>❓Show descendants in a tree.</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n  &lt;ul&gt;\n    &lt;li&gt;Animals\n      &lt;ul&gt;\n        &lt;li&gt;Mammals\n          &lt;ul&gt;\n            &lt;li&gt;Cows&lt;/li&gt;\n            &lt;li&gt;Donkeys&lt;/li&gt;\n            &lt;li&gt;Dogs&lt;/li&gt;\n            &lt;li&gt;Tigers&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li&gt;Other\n          &lt;ul&gt;\n            &lt;li&gt;Snakes&lt;/li&gt;\n            &lt;li&gt;Birds&lt;/li&gt;\n            &lt;li&gt;Lizards&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li&gt;Fishes\n      &lt;ul&gt;\n        &lt;li&gt;Aquarium\n          &lt;ul&gt;\n            &lt;li&gt;Guppy&lt;/li&gt;\n            &lt;li&gt;Angelfish&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li&gt;Sea\n          &lt;ul&gt;\n            &lt;li&gt;Sea trout&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n\n  &lt;script&gt;\n\t\tlet li = document.getElementsByTagName('li');\n\n\t\tfor ( let lis of li ) {\n\t\t\tlet lisLength = lis.getElementsByTagName('li').length;\n\n\t\t\tif(!lisLength) continue;\n\n\t\t\tlis.firstChild.data += `[${lisLength}]`;\n\t\t}\n\t&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p>❓ Colored clock with setInterval</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n  &lt;div id=&quot;clock&quot;&gt;\n  &lt;span class=&quot;hour&quot;&gt;hh&lt;/span&gt;:&lt;span class=&quot;min&quot;&gt;mm&lt;/span&gt;:&lt;span class=&quot;sec&quot;&gt;ss&lt;/span&gt;\n  &lt;/div&gt;\n\n  &lt;input type=&quot;button&quot; onclick=&quot;clockStart()&quot; value=&quot;Start&quot;&gt;\n  &lt;input type=&quot;button&quot; onclick=&quot;clockStop()&quot; value=&quot;Stop&quot;&gt;\n\n\t&lt;script&gt;\n\t\tfunction update() {\n\t  let clock = document.getElementById('clock');\n\t  let date = new Date();\n\t  let hours = date.getHours();\n\t  let minutes = date.getMinutes();\n\t  let seconds = date.getSeconds();\n\n\t  clock.children[0].innerHTML = hours;\n\t  clock.children[1].innerHTML = minutes;\n\t  clock.children[2].innerHTML = seconds;\n\t}\n\n\tlet timerId;\n\n\tfunction clockStart() { // run the clock\n\t  if (!timerId) { // only set a new interval if the clock is not running\n\t    timerId = setInterval(update, 1000);\n\t  }\n\t  update(); // (*)\n\t}\n\n\tfunction clockStop() {\n\t  clearInterval(timerId);\n\t  timerId = null; // (**)\n\t}\n\t&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p>Element-only navigation:- Navigation properties listed above refer to all nodes.</p>\n<ul>\n<li>\n<p><code>children</code> – only those children that are element nodes.</p>\n<pre><code class=\"language-html\">&lt;html&gt;\n&lt;body&gt;\n  &lt;div&gt;Begin&lt;/div&gt;\n\n  &lt;ul&gt;\n    &lt;li&gt;Information&lt;/li&gt;\n  &lt;/ul&gt;\n\n  &lt;div&gt;End&lt;/div&gt;\n\n  &lt;script&gt;\n    for (let elem of document.body.children) {\n      alert(elem); // DIV, UL, DIV, SCRIPT\n    }\n  &lt;/script&gt;\n  ...\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p><code>firstElementChild</code>, <code>lastElementChild</code> – first and last element children.</p>\n<pre><code class=\"language-jsx\">alert( document.documentElement.parentNode ); // document\n</code></pre>\n</li>\n<li>\n<p><code>previousElementSibling</code>, <code>nextElementSibling</code> – neighbor elements.</p>\n<pre><code class=\"language-html\">&lt;div id=&quot;div-01&quot;&gt;Here is div-01&lt;/div&gt;\n&lt;div id=&quot;div-02&quot;&gt;Here is div-02&lt;/div&gt;\n&lt;li&gt;This is a list item&lt;/li&gt;\n&lt;li&gt;This is another list item&lt;/li&gt;\n&lt;div id=&quot;div-03&quot;&gt;Here is div-03&lt;/div&gt;\n\n&lt;script&gt;\n  let el = document.getElementById('div-03').previousElementSibling;\n  document.write('&lt;p&gt;Siblings of div-03&lt;/p&gt;&lt;ol&gt;');\n  while (el) {\n    document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');\n    el = el.previousElementSibling;\n  }\n  document.write('&lt;/ol&gt;');\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>parentElement</code> – parent element.</p>\n<pre><code class=\"language-jsx\">console.log(document.head.parentElement);\n/*\n&lt;html lang=&quot;en&quot; class=&quot;working-hover&quot;&gt;\n&lt;head&gt;…&lt;/head&gt;\n&lt;body class&gt;…&lt;/body&gt;\n&lt;/html&gt;\n*/\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2>ChildNode</h2>\n<ul>\n<li>\n<p><code>ChildNode.remove()</code> method removes the object from the tree it belongs to.</p>\n<pre><code class=\"language-html\">&lt;button onclick=&quot;clicked()&quot;&gt;Destroy !!!&lt;/button&gt;\n\n&lt;p&gt;Hello World&lt;/p&gt;\n\n&lt;script&gt;\n\tlet button = document.querySelector('button'),\n\tp = document.querySelector('p');\n\n\tbutton.style.background = &quot;red&quot;;\n\tbutton.style.color = &quot;white&quot;;\n\n\tfunction clicked() {\n\t\tp.remove();\n\t}\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>❓ Clear the element</p>\n<pre><code class=\"language-html\">&lt;ol id=&quot;elem&quot;&gt;\n  &lt;li&gt;Hello&lt;/li&gt;\n  &lt;li&gt;World&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;script&gt;\n\tfunction clear(ele) {\n\t\twhile (ele.firstChild) {\n\t\t\tele.childNodes[1].remove();\n\t\t}\n\t}\n\n\tclear(document.querySelector(&quot;ol&quot;));\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>❓ Add a closing button</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/jOydryr\">https://codepen.io/fillyagioro/pen/jOydryr</a></p>\n</li>\n<li>\n<p>The most deeply nested element that caused the event is called a target element, accessible as <code>event.target</code>.</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/eYgxzBR\">https://codepen.io/fillyagioro/pen/eYgxzBR</a></p>\n</li>\n<li>\n<p>Stopping bubbling</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/eYgxzBR\">https://codepen.io/fillyagioro/pen/eYgxzBR</a></p>\n</li>\n<li>\n<p>❓ Hide messages with delegation</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/vYgPbVe\">https://codepen.io/fillyagioro/pen/vYgPbVe</a></p>\n</li>\n</ul>\n<h1>Element</h1>\n<ul>\n<li>\n<p>The <code>matches(css)</code> method checks to see if the Element would be selected by the provided selectorString.</p>\n<pre><code class=\"language-html\">&lt;ul id=&quot;birds&quot;&gt;\n  &lt;li&gt;Orange-winged parrot&lt;/li&gt;\n  &lt;li class=&quot;endangered&quot;&gt;Philippine eagle&lt;/li&gt;\n  &lt;li&gt;Great white pelican&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;script&gt;\n\tlet list = document.getElementsByTagName('li');\n  for(let elem of list) {\n    if(elem.matches('.endangered')) {\n      console.log(elem.innerHTML);\n    }\n  }\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>The <code>closest()</code> method traverses the Element and its parents  until it finds a node that matches the provided selector string.</p>\n<pre><code class=\"language-html\">&lt;h1&gt;Contents&lt;/h1&gt;\n\n&lt;div class=&quot;contents&quot;&gt;\n  &lt;ul class=&quot;book&quot;&gt;\n    &lt;li class=&quot;chapter&quot;&gt;Chapter 1&lt;/li&gt;\n    &lt;li class=&quot;chapter&quot;&gt;Chapter 1&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n\tlet chapter = document.querySelector('.chapter');\n\tconsole.log(chapter.closest('.book').innerHTML);\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>Element.tagName</code> to show the element name.</p>\n<pre><code class=\"language-jsx\">&lt;p id=&quot;word&quot;&gt;Hello World&lt;/p&gt;\n&lt;script&gt;\n\tlet elem = document.getElementById('word');\n\tconsole.log(elem.tagName); // P\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>The <code>innerHTML</code> property allows to get the HTML inside the element as a string.</p>\n<pre><code class=\"language-jsx\">&lt;body&gt;\n  &lt;p&gt;A paragraph&lt;/p&gt;\n  &lt;div&gt;A div&lt;/div&gt;\n\n  &lt;script&gt;\n    alert( document.body.innerHTML ); // read the current contents\n    document.body.innerHTML = 'The new BODY!'; // replace it\n  &lt;/script&gt;\n\n&lt;/body&gt;\n</code></pre>\n</li>\n<li>\n<p>The <code>outerHTML</code> property contains the full HTML of the element. That’s like innerHTML plus the element itself.</p>\n<pre><code class=\"language-jsx\">&lt;div id=&quot;elem&quot;&gt;Hello &lt;b&gt;World&lt;/b&gt;&lt;/div&gt;\n\n&lt;script&gt;\n  console.log(elem.outerHTML); // &lt;div id=&quot;elem&quot;&gt;Hello &lt;b&gt;World&lt;/b&gt;&lt;/div&gt;\n\tconsole.log(elem.innerHTML); // Hello &lt;b&gt;World&lt;/b&gt;\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>getAttribute()</code> returns the elements attribute which is called.</p>\n<pre><code class=\"language-html\">&lt;div id=&quot;elem&quot; something-data=&quot;yes&quot;&gt;&lt;/div&gt;\n\n&lt;script&gt;\n\tconsole.log(elem.getAttribute('something-data'));\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>setAttribute()</code> sets the attribute value.</p>\n<pre><code class=\"language-html\">&lt;input&gt;\n\n&lt;script&gt;\n\tlet input = document.querySelector('input');\n\tinput.setAttribute('id', 'into')\n\tconsole.log(input.outerHTML);\n\tconsole.log(input.id)\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>Get attribute and there value with <code>attribute</code>.</p>\n<pre><code class=\"language-html\">&lt;input id=&quot;hello&quot; something=&quot;yes&quot;&gt;\n\n&lt;script&gt;\n\tlet link = document.querySelector('input');\n\n\tfor ( let links of link.attributes ) {\n\t\tconsole.log(links.name + ' ' + links.value);\n\t}\n\t// id hello\n\t// something yes\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>Element.insertAdjacent*</code></p>\n<ul>\n<li>\n<p><code>Element.insertAdjacentHTML()</code> method inserts a text as HTML, into a specified position.</p>\n<pre><code class=\"language-jsx\">let ulist = document.createElement('ul');\ndocument.body.append(ulist);\n\nlet list = document.createElement('li');\n\nwhile(true) {\n\tlet ans = String(prompt(&quot;What you wnat inside the list?&quot;));\n\n\tif (!ans) {\n\t\tbreak;\n\t}\n\tlist.innerHTML = ans;\n\tulist.insertAdjacentHTML(&quot;afterBegin&quot;, `&lt;li&gt;${ans}&lt;/li&gt;`);\n}\n</code></pre>\n<pre><code class=\"language-jsx\">let li = document.createElement(&quot;li&quot;);\nlet ul = document.querySelector(&quot;ul&quot;)\nfunction getListContent() {\n\tfor (let i = 5; i &gt;= 1; i--) {\n\tul.insertAdjacentHTML(&quot;afterBegin&quot;, `&lt;li&gt;${i}&lt;/li&gt;`);\n\t}\n}\n\ngetListContent();\n</code></pre>\n</li>\n<li>\n<p><code>Element.insertAdjacentText()</code> – the same syntax, but a string of text is inserted “as text” instead of HTML.</p>\n<pre><code class=\"language-html\">&lt;button onclick=&quot;clicked()&quot;&gt;ClickMe&lt;/button&gt;\n\n&lt;p&gt;Hello World&lt;/p&gt;\n\n&lt;script&gt;\n\tlet p = document.querySelector('p');\n\tfunction clicked() {\n\t\tp.insertAdjacentText(&quot;beforeend&quot;, &quot;Bye World&quot;);\n\t}\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>Element.insertAdjacentElement()</code> – the same syntax, but inserts an element.</p>\n<pre><code class=\"language-html\">&lt;button onclick=&quot;clicked()&quot;&gt;ClickMe&lt;/button&gt;\n\n&lt;p&gt;&lt;b&gt;Hello World&lt;/b&gt;&lt;/p&gt;\n\n&lt;script&gt;\n\tlet p = document.querySelector('p');\n\tlet i = document.createElement('i')\n\tfunction clicked() {\n\t\tp.insertAdjacentElement(&quot;afterEnd&quot;, i);\n\t}\n\ti.innerHTML = &quot;Bye World&quot;;\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p><code>&quot;beforebegin&quot;</code> – insert <code>html</code> immediately before <code>elem</code>,</p>\n</li>\n<li>\n<p><code>&quot;afterbegin&quot;</code> – insert <code>html</code> into <code>elem</code>, at the beginning,</p>\n</li>\n<li>\n<p><code>&quot;beforeend&quot;</code> – insert <code>html</code> into <code>elem</code>, at the end,</p>\n</li>\n<li>\n<p><code>&quot;afterend&quot;</code> – insert <code>html</code> immediately after <code>elem</code>.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>❓ Insert the HTML in the list</p>\n<pre><code class=\"language-html\">&lt;ul id=&quot;ul&quot;&gt;\n  &lt;li id=&quot;one&quot;&gt;1&lt;/li&gt;\n  &lt;li id=&quot;two&quot;&gt;4&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;script&gt;\n\tone.insertAdjacentHTML(&quot;afterend&quot;, &quot;&lt;li&gt;2&lt;/li&gt;&lt;li&gt;3&lt;/li&gt;&quot;);\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>The <code>className</code> property of the Element interface gets and sets the value of the class attribute of the specified element.</p>\n<pre><code class=\"language-jsx\">let div = document.createElement('div');\ndiv.className = &quot;hello&quot;;\ndiv.innerHTML = div.className;\n\ndocument.body.append(div);\n</code></pre>\n</li>\n<li>\n<p>Window sizes</p>\n<ul>\n<li>\n<p><code>clientWidth</code> / <code>clientHeight</code> Width/height of the window.</p>\n<pre><code class=\"language-jsx\">console.log(document.documentElement.clientWidth);\nconsole.log(document.documentElement.clientHeight);\n</code></pre>\n</li>\n<li>\n<p><code>document.documentElement.scrollWidth/scrollHeight</code> Width/height of the document.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>If there are no paddings, then <code>clientWidth/Height</code> is exactly the content area, inside the borders and the scrollbar (if any).</p>\n<pre><code class=\"language-jsx\">let h1 = document.body.querySelector('h1');\nh1.clientHeight;\n</code></pre>\n</li>\n<li>\n<p><code>Element.scrollIntoView()</code>scroll into the view of line.</p>\n<pre><code class=\"language-jsx\">let h1 = document.body.querySelector('h1');\n\nh1.scrollIntoView()\n</code></pre>\n</li>\n<li>\n<p><code>Element.getBoundingClientRect()</code> returns information about left, top, right, bottom, x, y, width, and height.</p>\n</li>\n<li>\n<p><code>onmouseover</code> change element when you hover over element &amp; <code>onmouseout</code> change element when hover out over element.</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/RwKzzxg\">https://codepen.io/fillyagioro/pen/RwKzzxg</a></p>\n</li>\n<li>\n<p><code>onmousedown</code> change element when you click over element &amp; <code>onmouseup</code> change element when click done.</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/JjEQgRJ\">https://codepen.io/fillyagioro/pen/JjEQgRJ</a></p>\n</li>\n<li>\n<p>❓ Catch links in the element</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/PoWrMeg\">https://codepen.io/fillyagioro/pen/PoWrMeg</a></p>\n</li>\n</ul>\n<h1>Event</h1>\n<ul>\n<li>\n<p>The <code>preventDefault()</code> method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur.</p>\n<p><a href=\"https://codepen.io/fillyagioro/pen/GRrbVBe\">https://codepen.io/fillyagioro/pen/GRrbVBe</a></p>\n</li>\n</ul>\n<h1>EventTarget</h1>\n<ul>\n<li>\n<p>The <code>addEventListener()</code> method attaches an event handler to the specified element.</p>\n<pre><code class=\"language-html\">&lt;table id=&quot;outside&quot;&gt;\n  &lt;tr&gt;&lt;td id=&quot;t1&quot;&gt;one&lt;/td&gt;&lt;/tr&gt;\n  &lt;tr&gt;&lt;td id=&quot;t2&quot;&gt;two&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;\n&lt;script&gt;\n\tlet elem = document.querySelector('table');\n\n\tfunction change() {\n\t\tlet td = document.getElementsByTagName('td');\n\t\tif (td[1].innerHTML == &quot;two&quot;) {\n\t\t\ttd[1].innerHTML = &quot;three&quot;;\n\t\t} else {\n\t\t\ttd[1].innerHTML = &quot;two&quot;\n\t\t}\n\t}\n\n\telem.addEventListener('click', change, false)\n&lt;/script&gt;\n</code></pre>\n</li>\n</ul>\n<h1>Window</h1>\n<ul>\n<li>\n<p>The method <code>scrollBy(x,y)</code> scrolls the page relative to its current position. For instance, scrollBy(0,10) scrolls the page 10px down.</p>\n<pre><code class=\"language-jsx\">window.scrollBy(0,10)\n</code></pre>\n</li>\n<li>\n<p><code>Window.scrollTo()</code> scrolls to a particular set of coordinates in the document.</p>\n<pre><code class=\"language-jsx\">window.scrollTo()\n</code></pre>\n</li>\n</ul>\n<h1>CSSStyleDeclaration.cssText</h1>\n<ul>\n<li>\n<p>The <code>cssText</code> property of the CSSStyleDeclaration interface returns or sets the text of the element’s inline style declaration only.</p>\n<pre><code class=\"language-jsx\">let message = document.createElement('div');\n\nmessage.style.cssText = &quot;background: red; color: white&quot;;\n\nmessage.innerHTML = &quot;Hello, World&quot;;\n\ndocument.body.append(message);\n</code></pre>\n</li>\n</ul>\n<h1>HTMLElement</h1>\n<ul>\n<li>\n<p>Hide the element with <code>HTMLElement.hidden</code>.</p>\n<pre><code class=\"language-jsx\">&lt;div id=&quot;elem&quot;&gt;Hello &lt;b&gt;World&lt;/b&gt;&lt;/div&gt;\n&lt;script&gt;\n\tlet bold = elem.getElementsByTagName('b')[0];\n\tsetInterval(() =&gt; bold.hidden = !bold.hidden, 500);\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>❓ Hide on click</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;input type=&quot;button&quot; id=&quot;hider&quot; value=&quot;Click to hide the text&quot; /&gt;\n\n  &lt;div id=&quot;text&quot;&gt;Text&lt;/div&gt;\n\n  &lt;script&gt;\n    hider.onclick = () =&gt; {\n      let text = document.getElementById('text');\n      text.hidden = true;\n    }\n  &lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</li>\n<li>\n<p>The style attribute is a string, but the style property is an object.</p>\n<pre><code class=\"language-html\">&lt;div id=&quot;div&quot; style=&quot;color:red;font-size:120%,al&quot;&gt;Hello&lt;/div&gt;\n\n&lt;script&gt;\n\tconsole.log(div.style.color);\n\t// red\n\tdiv.style.background = &quot;green&quot;;\n\n\tconsole.log(div.style);\n\t// empty\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>The <code>HTMLElement.offsetWidth/Height</code> read-only property returns the layout width of an element as an integer.</p>\n<pre><code class=\"language-jsx\">h1 = document.body.querySelector('h1');\n// h1.offsetHeight\n</code></pre>\n</li>\n</ul>\n<h1>HTMLInputElement</h1>\n<ul>\n<li>\n<p>DOM elements also have additional properties, in particular those that depend on the class.</p>\n<pre><code class=\"language-jsx\">&lt;input type=&quot;text&quot; id=&quot;elem&quot; value=&quot;value&quot;&gt;\n\n&lt;script&gt;\n\tlet elem = document.getElementById('elem');\n\tconsole.log(elem.value);\n\tconsole.log(elem.type);\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>\n<p>Accessing the element: this</p>\n<pre><code class=\"language-html\">&lt;button onclick=&quot;alert(this.innerHTML)&quot;&gt;Click me&lt;/button&gt;\n</code></pre>\n</li>\n</ul>\n<h1>HTMLOrForeignElement</h1>\n<ul>\n<li>\n<p>Non-standard attributes are used to pass custom data from HTML to JavaScript, or to “mark” HTML-elements for JavaScript.</p>\n<pre><code class=\"language-html\">&lt;!-- mark the div to show &quot;name&quot; here --&gt;\n&lt;div show-info=&quot;name&quot;&gt;&lt;/div&gt;\n&lt;!-- and age here --&gt;\n&lt;div show-info=&quot;age&quot;&gt;&lt;/div&gt;\n\n&lt;script&gt;\n\tlet user = {\n\t\tname: &quot;Pete&quot;,\n\t\tage: 25\n\t};\n\n\t for(let div of document.querySelectorAll('[show-info]')) {\n\t \tlet text = div.getAttribute('show-info');\n\t\tdiv.innerHTML = user[text];\n\t}\n&lt;/script&gt;\n\n</code></pre>\n</li>\n<li>\n<p>All attributes starting with “data-” are reserved for programmers’ use. They are available in the dataset property.</p>\n<pre><code class=\"language-html\">&lt;style&gt;\n  .order[data-order-state=&quot;new&quot;] {\n    color: green;\n  }\n\n  .order[data-order-state=&quot;pending&quot;] {\n    color: blue;\n  }\n\n  .order[data-order-state=&quot;canceled&quot;] {\n    color: red;\n  }\n&lt;/style&gt;\n\n&lt;div id=&quot;order&quot; class=&quot;order&quot; data-order-state=&quot;new&quot;&gt;\n  A new order.\n&lt;/div&gt;\n\n&lt;script&gt;\n\torder.dataset.orderState = 'padding';\n\n\tconsole.log(order.outerHTML);\n\t// &lt;div id=&quot;order&quot; class=&quot;order&quot; data-order-state=&quot;padding&quot;&gt;A new order.&lt;/div&gt;\n&lt;/script&gt;\n</code></pre>\n</li>\n</ul>\n<h1>GlobalEventHandlers.onclick</h1>\n<ul>\n<li>\n<p>The <code>onclick</code> event occurs when the user clicks on an element.</p>\n<pre><code class=\"language-html\">&lt;button&gt;Click Me&lt;/button&gt;\n\n&lt;script&gt;\n  let button = document.querySelector('button');\n\n  button.onclick = () =&gt; alert(&quot;Hello World&quot;)\n&lt;/script&gt;\n</code></pre>\n</li>\n</ul>\n<h1>Location</h1>\n<ul>\n<li><code>location</code> interface represents the location (URL) of the object it is linked to.\n<ul>\n<li>\n<p><code>location.href</code> shows URL.</p>\n<pre><code class=\"language-jsx\">alert(location.href); // shows current URL\nif (confirm(&quot;Go to Wikipedia?&quot;)) {\n  location.href = &quot;https://wikipedia.org&quot;; // redirect the browser to another URL\n}\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Web Console Helpers</h1>\n<ul>\n<li><code>$0</code> The currently-inspected element in the page. <code>$0.style.background = 'red'</code></li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Browser&description=Browser:%20Document,%20Events,%20Interfaces%20Document%20document.documentElement%20document.body%20%20%20You%20can%20only%20but%20document.body%20in%20%20%20tag.%20%20&lt;html&gt;%20%20&lt;head&gt;%20%20%20&lt;script&gt;%20%20%20%20%20alert(%20&quot;From%20HEAD:%20&quot;%20+%20document.body%20);%20//%20null,%20there's%20no%20&lt;body&gt;%20yet%20%20%20&lt;/script&g&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/javascript/nodejs.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/javascript/nodejs.html",
      "title": "NodeJS",
      "content_html": "<h1>NodeJS</h1>\n<p>From <a href=\"https://trainings.internshala.com/nodejs-training\">Internshala Training NodeJS Course</a></p>\n<h1>Require</h1>\n<ul>\n<li>\n<p>Import node module</p>\n<pre><code class=\"language-jsx\">const { readFs } = require(&quot;fs&quot;);\nconst { readHttps } = require(&quot;https&quot;);\n</code></pre>\n</li>\n<li>\n<p>Input the string in <code>console.log</code>.</p>\n<pre><code class=\"language-jsx\">st readLine = require(&quot;readline&quot;).createInterface({\n  output: process.stdout,\n  input: process.stdin,\n});\n\nreadLine.question(&quot;What is your name?\\n&quot;, (name) =&gt; {\n  console.log(`Welcome ${name}`);\n  readLine.close();\n});\n\n// What is your name?\n// Jimmin &lt;= Ask to input here\n// Welcome Jimmin\n</code></pre>\n</li>\n</ul>\n<h1>Module</h1>\n<ul>\n<li>\n<p>Process</p>\n<p>The <code>process</code> object in Node.js is a global object that can be accessed inside any module without requiring it.</p>\n<ul>\n<li>\n<p><code>process.on</code></p>\n<pre><code class=\"language-jsx\">process.on('beforeExit', (code) =&gt; {\nconsole.log('Process beforeExit event with code: ', code);\n});\n// Process beforeExit event with code:  0                                                                                             /0.3s\n</code></pre>\n</li>\n<li>\n<p>Process expressions</p>\n<pre><code class=\"language-jsx\">console.log(process.ppid);\n// 21321\nconsole.log(process.argv);\n// [\n//  '/snap/node/5148/bin/node',\n//  '/home/kurama/Documents/Projects/Node JS/app.js'\n//]\nconsole.log(`Reports are compact? ${process.report.compact}`);\n// Reports are compact? false                                                                                                         /0.3s\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Module</p>\n<p>The <code>module</code> is same as process but you can only access within the file information.</p>\n</li>\n<li>\n<p>Event</p>\n<ul>\n<li>\n<p>EventEmitter</p>\n<pre><code class=\"language-jsx\">const events = require(&quot;events&quot;);\nconst eEmitter = new events.EventEmitter();\n\nconst getParty = function () {\n  console.log(&quot;Time to party&quot;);\n  const ran = Math.ceil(Math.random() * 10);\n  console.log(`Party starts in ${ran}`);\n  tester(ran);\n};\n\neEmitter.on(&quot;music&quot;, getParty);\n\ntester(2);\n\nfunction tester(val) {\n  setTimeout((e) =&gt; {\n    eEmitter.emit(&quot;music&quot;);\n  }, val * 1000);\n}\n\n// Time to party\n// Party starts in 5\n// Time to party\n// Party starts in 8\n// Time to party\n// Party starts in 3\n// Time to party\n// Party starts in 9\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=NodeJS&description=NodeJS%20From%20Internshala%20Training%20NodeJS%20Course%20Require%20%20%20Import%20node%20module%20const%20{%20readFs%20}%20=%20require(&quot;fs&quot;);%20const%20{%20readHttps%20}%20=%20require(&quot;https&quot;);%20%20%20%20Input%20the%20string%20in%20console.log.%20st%20readLine%20=%20require(&quot;readline&quot;).createInterface({%20%20%20output:%20pr&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/javascript/react.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/javascript/react.html",
      "title": "React",
      "content_html": "<h1>React</h1>\n<ul>\n<li>Function VS Class Component\n<ul>\n<li>A functional component is just a plain JavaScript function that accepts props as an argument and returns a React element.</li>\n<li>A class component requires you to extend from React. Component and create a render function which returns a React element.</li>\n</ul>\n</li>\n<li></li>\n</ul>",
      "date_published": "2022-12-26T21:33:15.322Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=React&description=React%20%20Function%20VS%20Class%20Component%20%20A%20functional%20component%20is%20just%20a%20plain%20JavaScript%20function%20that%20accepts%20props%20as%20an%20argument%20and%20returns%20a%20React%20element.%20A%20class%20component%20requires%20you%20to%20extend%20from%20React.%20Component%20and%20create%20a%20render%20function%20which%20returns%20a%20React%20element.&right_meta=AK%23Notes&background_color=%23bd8bf2"
    }
  ]
}