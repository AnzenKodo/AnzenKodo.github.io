{
  "version": "https://jsonfeed.org/version/1",
  "title": "AK#Notes",
  "home_page_url": "https://anzenkodo.github.io/notes",
  "feed_url": "https://anzenkodo.github.io/notes/feed.json",
  "description": "This my personal website where I post my notes about thing that I have learn.",
  "favicon": "https://anzenkodo.github.io/notes/favicon.png",
  "icon": "https://anzenkodo.github.io/notes/favicon.png",
  "author": {
    "name": "Axel",
    "url": "https://AnzenKodo.github.io/"
  },
  "items": [
    {
      "id": "https://anzenkodo.github.io/notes/",
      "url": "https://anzenkodo.github.io/notes/",
      "title": "Home",
      "content_html": "<p>This my personal website where I post my notes about thing that I have learn.</p>\n<h2>Features</h2>\n<ul>\n<li>Easy to:\n<ul>\n<li>Setup</li>\n<li>Configure</li>\n<li>Write</li>\n</ul>\n</li>\n<li>Supports:\n<ul>\n<li>Tags</li>\n<li>Search (Power by <a href=\"https://duckduckgo.com/\">DuckDuckGo</a>)</li>\n<li>Canonical</li>\n<li><a href=\"https://ogp.me/\">Open Graph</a></li>\n<li>Analytics</li>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a></li>\n</ul>\n</li>\n<li>Auto generate:\n<ul>\n<li>GitHub Pages Actions file</li>\n<li>Favicon</li>\n<li>Sitemap</li>\n<li>404 page</li>\n<li>CSS</li>\n<li><code>mainfest.json</code> file</li>\n<li>Feeds\n<ul>\n<li>RSS</li>\n<li>JSON</li>\n<li>Atom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>No Client side JavaScript</li>\n<li>Minified HTML &amp; Inline CSS</li>\n<li>Lightweight</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<ul>\n<li>Download deno from <a href=\"https://deno.land/\">https://deno.land/</a> and install it.</li>\n<li>After installing deno run following commands.</li>\n</ul>\n<pre><code class=\"language-sh\"># Install the dblog\ndeno run https://deno.land/x/dblog/install.js # Add deno to path, if you didn't already.\n\n# See all the options that are available\ndblog --help\n\n# Setup the your blog (Skip this if already your blog setup)\ndblog --setup\n\n# Make your blog and Run on localhost\ndblog --serve\n</code></pre>\n<h3>Update</h3>\n<p>To update dblog, rerun the installation command.</p>\n<pre><code class=\"language-sh\">deno run https://deno.land/x/dblog/install.js\n</code></pre>\n<h3>Run dblog without installing dblog</h3>\n<pre><code class=\"language-sh\">deno run -A https://deno.land/x/dblog/mod.js --help\n</code></pre>\n<h2>Live Demo &amp; Folder</h2>\n<ul>\n<li><a href=\"https://anzenkodo.github.io/dblog\">Live Demo</a></li>\n<li><a href=\"https://github.com/AnzenKodo/dblog/tree/gh-pages\">Generated Files</a></li>\n</ul>\n<h2>Configuration</h2>\n<p>Place <code>config.json</code> in root folder to edit default configuration. The\n<code>config.json</code> is optional.</p>\n<p><strong>The <code>config.json</code> with default configuration:</strong></p>\n<pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;dblog&quot;,\n  &quot;start_url&quot;: &quot;https://AnzenKodo.github.io/dblog/&quot;,\n  &quot;description&quot;: &quot;dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.&quot;,\n  &quot;email&quot;: &quot;&quot;,\n  &quot;author&quot;: &quot;AnzenKodo&quot;,\n  &quot;posts&quot;: &quot;./posts&quot;,\n  &quot;output&quot;: &quot;./site&quot;,\n  &quot;favicon&quot;: &quot;favicon.svg&quot;,\n  &quot;lang&quot;: &quot;en-US&quot;,\n  &quot;port&quot;: 8000,\n  &quot;background&quot;: &quot;#ffffff&quot;,\n  &quot;foreground&quot;: &quot;#000000&quot;,\n  &quot;theme&quot;: &quot;#01a252&quot;,\n  &quot;footer&quot;: &quot;&lt;p&gt;Made by &lt;a href=\\&quot;https://AnzenKodo.github.io/AnzenKodo\\&quot;&gt;AnzenKodo&lt;/a&gt; under &lt;a href=\\&quot;https://anzenkodo.github.io/dblog/LICENSE\\&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;\\n&quot;,\n  &quot;page404&quot;: &quot;404 Page Not Found, Sorry :(&quot;,\n  &quot;backup&quot;: false,\n  &quot;exclude&quot;: [\n    &quot;config.json&quot;,\n    &quot;backup.json&quot;\n  ],\n  &quot;nav&quot;: {},\n  &quot;head&quot;: &quot;&quot;\n}\n</code></pre>\n<p><strong>Note:</strong> Every option is optional.</p>\n<ul>\n<li><strong>name</strong> - Name of your blog.</li>\n<li><strong>start_url</strong> - Start URL of your site. <em>Example:</em> ‘<a href=\"https://example.com/\">https://example.com/</a>’,\n‘<a href=\"https://blog.example.com/\">https://blog.example.com/</a>’, ‘<a href=\"https://example.com/blog/\">https://example.com/blog/</a>’</li>\n<li><strong>email</strong> - Your email address. This will enable ‘Reply with Email’ button in\nposts.</li>\n<li><strong>author</strong> - Your name or username.</li>\n<li><strong>posts</strong> - Path of posts.</li>\n<li><strong>output</strong> - Folder where your blog build will be placed. <em>Example:</em> ‘./blog’,\n‘…/site/blog’, ‘site/blog’.</li>\n<li><strong>favicon</strong> - <em><strong>Recommended 500x500px</strong></em>. Favicon location. <em>If empty,\ngenerated favicon will be used</em>. <em>Example:</em> ‘./favicon.png’,\n‘./static/favicon.icon’, ‘…/favicon.jpg’.</li>\n<li><strong>lang</strong> - Blog language in ‘RFC 5646’ format. Example: ‘ja’ for Japanese,\n‘sv’ for Swedish, ‘it’ for Italian. See\n<a href=\"https://wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags\">List of common primary language subtags in Wikipedia</a></li>\n<li><strong>footer</strong> - Footer of your website. <em>Supports CommonMark Markdown format</em>.\n<em>Example:</em>\n<code>Made by [AnzenKodo](https://AnzenKodo.github.io/AnzenKodo) uder [MIT License](https://anzenkodo.github.io/dblog/LICENSE.html)</code>.</li>\n<li><strong>port</strong> - Port of your blog on localhost. <em>Example</em>: ‘8080’, ‘8300’, ‘8400’.</li>\n<li><strong>background</strong> - Background color in light mode. Becomes foreground color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>foreground</strong> - Foreground color in light mode. Becomes background color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>theme</strong> - Blog theme color. <em>Example:</em> ‘#0583f2’, ‘#f20544’, ‘#f2b705’.</li>\n<li><strong>page404</strong> - 404 page message. <em>Example:</em> ‘Sorry, page not found :(’.</li>\n<li><strong>backup</strong> - Backup file location. <em>Example:</em> <code>false</code> to don’t generate\n<code>backup.json</code> file, ‘./backup.json’, ‘./site/backup.json’, ‘…/backup.json’.</li>\n<li><strong>exclude</strong> - Exclude files or folder. <em>Example:</em><pre><code class=\"language-json\">&quot;exclude&quot;: [ &quot;.env&quot;, &quot;todo.md&quot;, &quot;drafts&quot; ],\n</code></pre>\n</li>\n<li><strong>nav</strong> - Nav bar item list. Example:<pre><code class=\"language-json\">&quot;nav&quot;: {\n  &quot;about&quot;: &quot;./about.md&quot;,\n  &quot;stie&quot;: &quot;https://anzenkodo.github.io/AnzenKodo&quot;\n}\n</code></pre>\n</li>\n<li><strong>head</strong> - If you analytics or any other tags you want to put on head tag.\n<em>Example:</em>\n<code>&lt;link rel=&quot;preconnect&quot; href=&quot;//www.google-analytics.com&quot; crossorigin=&quot;&quot;&gt;</code>.</li>\n</ul>\n<h2>CLI Options</h2>\n<pre><code class=\"language-sh\">dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.\n\nWebsite: https://anzenkodo.github.io/dblog\nPackage: https://deno.land/x/dblog\nRepo: https://github.com/AnzenKodo/dblog\nDocs: https://anzenkodo.github.io/dblog/posts/dblog-Docs.html\n\nUSAGE:\n  dblog [OPTIONS]\n\nOPTIONS:\n  --serve   Build blog and Start localhost.\n    --noopen  Don't open browser, when starting localhost.\n  --build   Build blog without starting localhost.\n  --setup   Setup new blog.\n  --backup  Restore blog if 'backup.json' file available.\n  --readme  Generate 'README.md' file.\n  --help    Print help information.\n</code></pre>\n<h2>File Options</h2>\n<pre><code>---\ntitle: If empty the file name will be used\ndescription: If empty the first paragraph will be used.\ntags: [ &quot;tag1&quot;, &quot;tag2&quot; ]\ndate: 20/08/2020\ncanonical:\n---\n</code></pre>\n<ul>\n<li><strong>date</strong> - If empty, the file date will be used. <em>Note:</em> The file <code>date</code> might\nnot always right. So always give you own date.</li>\n<li><strong>canonical</strong> - Share content between multiple sites without impacting SEO.\nJust put canonical URL. Know more about\n<a href=\"https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls\">canonical url</a>.</li>\n</ul>\n<h3>If file name start with underscore “_” it will be consider as draft.</h3>\n<p><strong>Example:</strong> <code>posts/_This is draft.md</code></p>\n<h2>Markdown Guide</h2>\n<h3><a href=\"https://commonmark.org/help/\">CommonMark</a> Syntex</h3>\n<h4>Heading</h4>\n<pre><code class=\"language-md\"># H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n</code></pre>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h4>Inline style</h4>\n<pre><code class=\"language-md\">**Bold** _Italic_ ~~Strikethrough~~\n</code></pre>\n<p><strong>Bold</strong> <em>Italic</em> <s>Strikethrough</s></p>\n<h4>Link and Image</h4>\n<pre><code class=\"language-md\">[website](https://anzenkodo.github.io/dblog)\n![Jurassic Deno by Samip Poudel](https://deno.land/images/artwork/jurassicDeno.jpg)\n</code></pre>\n<p><a href=\"https://anzenkodo.github.io/dblog\">website</a>\n<img src=\"https://deno.land/images/artwork/jurassicDeno.jpg\" alt=\"Jurassic Deno by Samip Poudel\"></p>\n<h4>Blockquote</h4>\n<pre><code class=\"language-md\">&gt; 'The road to hell is paved with good intentions' by Abbot Bernard\n</code></pre>\n<blockquote>\n<p>‘The road to hell is paved with good intentions’ by Abbot Bernard</p>\n</blockquote>\n<h4>List</h4>\n<pre><code class=\"language-md\">- List\n  - List\n- List\n\n1. One\n2. Two\n3. Three\n</code></pre>\n<ul>\n<li>List\n<ul>\n<li>List</li>\n</ul>\n</li>\n<li>List</li>\n</ul>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<h4>Horizontal rule</h4>\n<pre><code class=\"language-md\">---\n</code></pre>\n<hr>\n<h4>Code block</h4>\n<div class=\"highlight highlight-source-lisp notranslate position-relative overflow-auto\">\n<pre>\n`Inline code` with backticks\n```js\n  console.log(\"Code Blog in JavaScript\");\n```\n</pre>\n</div>\n<p><code>Inline code</code> with backticks</p>\n<pre><code class=\"language-js\">console.log(&quot;Code Blog in JavaScript&quot;);\n</code></pre>\n<h3>Additional Markdown syntax</h3>\n<h4>Checkbox</h4>\n<pre><code class=\"language-md\">- [ ] Checkbox\n- [x] Checkbox with tick\n</code></pre>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> Checkbox</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> Checkbox with tick</label></li>\n</ul>\n<h4>Image with caption</h4>\n<pre><code class=\"language-md\">![Deno](https://deno.land/images/artwork/deno_matrix.png &quot;Matrix by bramaudi&quot;)\n</code></pre>\n<figure data-type=\"image\"><img src=\"https://deno.land/images/artwork/deno_matrix.png\" alt=\"Deno\" loading=\"lazy\" decoding=\"async\"><figcaption>Matrix by bramaudi</figcaption></figure>\n<h4>Footer</h4>\n<pre><code class=\"language-md\">Here is a footnote reference[^1]. [^1]: Here is the footnote.\n</code></pre>\n<p>Here is a footnote reference[^1]. [^1]: Here is the footnote.</p>\n<h4>Additional inline syntax</h4>\n<pre><code class=\"language-md\">~sub~ ^sup^ ==mark== [[kbd]] _underline_ ++insert++ ~~delete~~\n</code></pre>\n<p><sub>sub</sub>\n<sup>sup</sup>\n<mark>mark</mark>\n<kbd>kbd</kbd>\n<u>underline</u>\n<ins>insert</ins>\n<del>delete</del></p>\n<h4>Description list</h4>\n<pre><code class=\"language-md\">: Definition 1 Term 2 with _inline markup_ : Definition 2 Third paragraph of\ndefinition 2.\n</code></pre>\n<dl>\n  <dt>Definition 1</dt>\n  <dd>Term 2 with inline.</dd>\n  <dt>Definition 2</dt>\n  <dd>Third paragraph of definition 2.</dd>\n</dl>\n<h4>Abbreviation</h4>\n<pre><code class=\"language-md\">*[abbr]: Abbreviation\n</code></pre>\n<p><abbr title=\"Abbreviation\">abbr</abbr></p>\n<h4>Table</h4>\n<h5>Normal</h5>\n<pre><code class=\"language-md\">| Syntax    | Description |\n| --------- | ----------- |\n| Header    | Title       |\n| Paragraph | Text        |\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Header</td>\n<td>Title</td>\n</tr>\n<tr>\n<td>Paragraph</td>\n<td>Text</td>\n</tr>\n</tbody>\n</table>\n<h5>Multiline</h5>\n<pre><code class=\"language-md\">| Markdown  | Rendered HTML |\n| --------- | ------------- |\n| _Italic_  | _Italic_      |\n|           |               |\n| - Item 1  | - Item 1      |\n| - Item 2  | - Item 2      |\n| ```python | ```python \\   |\n| .1 + .2   | .1 + .2       |\n</code></pre>\n<table><thead><tr><th>Markdown</th><th>Rendered HTML</th></tr></thead> <tbody>\n  <tr> <td> <pre><code>*Italic* </code></pre> </td> <td> <p><em>Italic</em></p>\n  </td> </tr> <tr> <td> <pre><code>- Item 1 - Item 2</code></pre> </td> <td>\n  <ul> <li>Item 1</li> <li>Item 2</li> </ul> </td> </tr> <tr> <td>\n<pre><code>\n```python\n.1 + .2\n```\n</code></pre> </td> <td> <pre><code class=\"language-python\">.1 + .2\n  </code></pre> </td> </tr> </tbody> </table>\n<h5>Rowspan</h5>\n<pre><code class=\"language-md\">|                       Stage | Direct Products | ATP Yields |\n| --------------------------: | --------------: | ---------: |\n|                  Glycolysis |           2 ATP |            |\n|                          ^^ |          2 NADH |   3--5 ATP |\n|          Pyruvaye oxidation |          2 NADH |      5 ATP |\n|           Citric acid cycle |           2 ATP |            |\n|                          ^^ |          6 NADH |     15 ATP |\n|                          ^^ |         2 FADH2 |      3 ATP |\n|              **30--32** ATP |                 |            |\n| [Net ATP yields per hexose] |                 |            |\n</code></pre>\n<table> <caption id=\"netatpyieldsperhexose\">Net ATP yields per hexose</caption>\n  <thead> <tr> <th align=\"right\">Stage</th> <th align=\"right\">Direct\nProducts</th> <th align=\"right\">ATP Yields</th> </tr> </thead> <tbody> <tr> <td\nalign=\"right\" rowspan=\"2\">Glycolysis</td> <td align=\"right\" colspan=\"2\">2\nATP</td> </tr> <tr> <td align=\"right\">2 NADH</td> <td align=\"right\">3–5\nATP</td> </tr> <tr> <td align=\"right\">Pyruvaye oxidation</td> <td\nalign=\"right\">2 NADH</td> <td align=\"right\">5 ATP</td> </tr> <tr> <td\nalign=\"right\" rowspan=\"3\">Citric acid cycle</td> <td align=\"right\"\ncolspan=\"2\">2 ATP</td> </tr> <tr> <td align=\"right\">6 NADH</td> <td\nalign=\"right\">15 ATP</td> </tr> <tr> <td align=\"right\">2 FADH2</td> <td\nalign=\"right\">3 ATP</td> </tr> <tr> <td align=\"right\"\ncolspan=\"3\"><strong>30–32</strong> ATP</td> </tr> </tbody> </table>\n<h4>Headerless</h4>\n<pre><code class=\"language-md\">|--|--|--|--|--|--|--|--| |♜| |♝|♛|♚|♝|♞|♜| | |♟|♟|♟| |♟|♟|♟| |♟| |♞| | | | | |\n| |♗| | |♟| | | | | | | | |♙| | | | | | | | | |♘| | | |♙|♙|♙|♙| |♙|♙|♙|\n|♖|♘|♗|♕|♔| | |♖|\n</code></pre>\n<table> <tbody> <tr> <td>♜</td> <td></td> <td>♝</td> <td>♛</td> <td>♚</td>\n  <td>♝</td> <td>♞</td> <td>♜</td> </tr> <tr> <td></td> <td>♟</td> <td>♟</td>\n  <td>♟</td> <td></td> <td>♟</td> <td>♟</td> <td>♟</td> </tr> <tr> <td>♟</td>\n  <td></td> <td>♞</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>\n  <tr> <td></td> <td>♗</td> <td></td> <td></td> <td>♟</td> <td></td> <td></td>\n  <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> <td>♙</td>\n  <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td>\n  <td></td> <td></td> <td>♘</td> <td></td> <td></td> </tr> <tr> <td>♙</td>\n  <td>♙</td> <td>♙</td> <td>♙</td> <td></td> <td>♙</td> <td>♙</td> <td>♙</td>\n  </tr> <tr> <td>♖</td> <td>♘</td> <td>♗</td> <td>♕</td> <td>♔</td> <td></td>\n  <td></td> <td>♖</td> </tr> </tbody> </table>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=AK%23Notes&description=This%20my%20personal%20website%20where%20I%20post%20my%20notes%20about%20thing%20that%20I%20have%20learn.%20Features%20%20Easy%20to:%20%20Setup%20Configure%20Write%20%20%20Supports:%20%20Tags%20Search%20(Power%20by%20DuckDuckGo)%20Canonical%20Open%20Graph%20Analytics%20GitHub%20Pages%20%20%20Auto%20generate:%20%20GitHub%20Pages%20Actions%20file%20Favicon%20Sitemap%20404%20page%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/study/grammmar.html",
      "url": "https://anzenkodo.github.io/notes/study/grammmar.html",
      "title": "Grammmar",
      "content_html": "<h1>Grammar in English</h1>\n<h2>Part of Speech</h2>\n<p>Words are divided into different kinds of classes called <strong>Parts of Speech</strong>.\nThe parts of speech are eight in number:</p>\n<ol>\n<li><a href=\"#noun\">Noun</a></li>\n<li><a href=\"#adjective\">Adjective</a></li>\n<li><a href=\"#pronoun\">Pronoun</a></li>\n<li><a href=\"#verb\">Verb</a></li>\n<li><a href=\"#adverb\">Adverb</a></li>\n<li><a href=\"#preposition\">Preposition</a></li>\n<li><a href=\"#conjunction\">Conjunction</a></li>\n<li><a href=\"#interjection\">Interjection</a></li>\n<li><a href=\"#determiners\">Determiners</a> (In some modern grammars)</li>\n</ol>\n<h3>Noun</h3>\n<p>A <strong>Noun</strong> is a word used as the name of the person, place, or things as,</p>\n<ol>\n<li>That <em>Mountain</em> look so beautiful from here.</li>\n<li>That <em>tree</em> was so small when we came last year.</li>\n<li>I don’t like <em>rain</em>.</li>\n</ol>\n<p><em><strong>Note</strong></em>\nThe word <em>Things</em> includes:</p>\n<ol>\n<li>All the objects that we can see, hear, taste, touch, or smell.</li>\n<li>Something that we can <em>think of</em>, but can’t perceive by the senses.</li>\n</ol>\n<h3>Adjective</h3>\n<p>An <strong>Adjective</strong> is a word used to add something to the meaning of a noun; as,</p>\n<ol>\n<li>He is <em>playing game</em>.</li>\n<li>She look <strong>beautiful</strong> tonight.</li>\n<li>Sun <strong>set early</strong> today.</li>\n</ol>\n<h3>Pronoun</h3>\n<p>A <strong>Pronoun</strong> is a word used instead of noun; as,</p>\n<ol>\n<li>He is was playing football, but <em>he’s</em> broke his leg.</li>\n<li>The books are where you left <em>them</em>.</li>\n</ol>\n<h3>Verb</h3>\n<p>A <strong>Verb</strong> is a word used to express an action or state; as,</p>\n<ol>\n<li>He is <em>sleeping</em>.</li>\n<li>That boy is very <em>playful</em>.</li>\n<li>India is a very <em>diverse</em> country.</li>\n</ol>\n<h3>Adverb</h3>\n<p>An <strong>Adverb</strong> is a word used to <em>add something</em> to the meaning of the verb, an\nadjective, or another adverb; as,</p>\n<ol>\n<li>He is working <em>very</em> hard today.</li>\n<li>That horse is running <em>so</em> fast today.</li>\n<li>New York look <em>so</em> beautiful in the night.</li>\n</ol>\n<h3>Preposition</h3>\n<p>A <strong>Preposition</strong> is a word used with a noun or pronoun to show how the person\nor thing denoted by the noun or pronoun stands in relation to something else; as</p>\n<ol>\n<li><em>Before</em> the dog got the hat.</li>\n<li>The Ice cream is <em>under</em> the fridge.</li>\n<li>He is <em>going</em> to Goa trip.</li>\n</ol>\n<h3>Conjunction</h3>\n<p>A <strong>Conjunction</strong> is a word used to <em>join</em> words or sentences; as,</p>\n<ol>\n<li>He <em>and</em> she are cousins.</li>\n<li>Three <em>and</em> two make five.</li>\n<li>Happy <em>but</em> sad inside.</li>\n</ol>\n<p>Conjunction have <strong>FANBOYS</strong> a which to remember coordinating conjunctions:</p>\n<ul>\n<li><strong>For</strong> - since, because\n<ul>\n<li>I don’t eat buttons <em>for</em> they are not food.</li>\n</ul>\n</li>\n<li><strong>And</strong> - combines things\n<ul>\n<li>The kangaroo robbed the band <em>and</em> torched the saloon.</li>\n</ul>\n</li>\n<li><strong>Nor</strong> - combines untrue things\n<ul>\n<li>She won’t leave her tree <em>nor</em> will she speak with humans.</li>\n</ul>\n</li>\n<li><strong>But</strong> - express exceptions\n<ul>\n<li>We used every building material <em>but</em> chewing gum.</li>\n</ul>\n</li>\n<li><strong>Or</strong> - choosing between options\n<ul>\n<li>Would you rather have pet bear <em>or</em> a pet giraffe?</li>\n</ul>\n</li>\n<li><strong>Yet</strong> - to the contrary\n<ul>\n<li>I want to leave, <em>yet</em> I cannot.</li>\n</ul>\n</li>\n<li><strong>So</strong> - shows consequences\n<ul>\n<li>He is allergic to sheep, <em>so</em> he skipped the wool festival.</li>\n</ul>\n</li>\n</ul>\n<h3>Interjection</h3>\n<p>An <strong>Interjection</strong> is a word which expresses some sudden feeling; as,</p>\n<ol>\n<li><em>Oh my god</em> ! What have you done.</li>\n<li><em>What</em> ! She is dead.</li>\n<li>Hurrah ! We have won the game.</li>\n</ol>\n<h3>Determiners</h3>\n<p><strong>Determiners</strong> are words that comes at the beginning of the noun, introduces\nnoun, determines noun that is whether none is specific or general.\nThere’s are divided into four types which are:</p>\n<h4>Articles</h4>\n<ul>\n<li><strong>Indefinite articles</strong> - <em>a, an</em> - general version of noun\n<ul>\n<li><em>A</em> book is man’s best friend</li>\n</ul>\n</li>\n<li><strong>Definite articles</strong> - <em>the</em> - specific version of noun\n<ul>\n<li><em>The</em> city Mumbai was called Bombay.</li>\n</ul>\n</li>\n</ul>\n<h4>Demonstratives</h4>\n<blockquote>\n<p><em>this, that, these, those</em></p>\n</blockquote>\n<ul>\n<li><strong>Demonstratives</strong> pronouns are also used as determiners. They are used to\npoint something specific within a sentence. They focus attention on the nouns\nthat they are replacing.\n<ul>\n<li>I want go to <em>that</em> movie.</li>\n<li>He wanted <em>those</em> boys to go away.</li>\n</ul>\n</li>\n</ul>\n<h4>Possessives</h4>\n<blockquote>\n<p><em>my, your, his, her, your their</em></p>\n</blockquote>\n<ul>\n<li><strong>Possessive</strong> pronouns are words that are used to show ownership.\n<ul>\n<li>Where is <em>your</em> bike?</li>\n<li>It’s <em>our</em> secret recipe.</li>\n</ul>\n</li>\n</ul>\n<h4>Quantifiers</h4>\n<blockquote>\n<p><em>some, few little many, much, any</em></p>\n</blockquote>\n<ul>\n<li>They indicate how much or how little of the noun is being discussed.\n<ul>\n<li>He took <em>some</em> books of mine.</li>\n<li>He has few apples in the refrigerator.</li>\n</ul>\n</li>\n</ul>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Grammmar&description=Grammar%20in%20English%20Part%20of%20Speech%20Words%20are%20divided%20into%20different%20kinds%20of%20classes%20called%20Parts%20of%20Speech.%20The%20parts%20of%20speech%20are%20eight%20in%20number:%20%20Noun%20Adjective%20Pronoun%20Verb%20Adverb%20Preposition%20Conjunction%20Interjection%20Determiners%20(In%20some%20modern%20grammars)%20%20Noun%20A%20Noun%20is%20a%20wo&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/study/mgt.html",
      "url": "https://anzenkodo.github.io/notes/study/mgt.html",
      "title": "MGT",
      "content_html": "<h1>MGT</h1>\n<ol>\n<li>Who said “Management is the function of executive leadership anywhere”:</li>\n</ol>\n<ul>\n<li>a) Ralph C. Devis</li>\n</ul>\n<ol start=\"2\">\n<li>Universal, goal oriented, multidimensional, continuous process are some\ncharacteristics of:</li>\n</ol>\n<ul>\n<li>a) Management</li>\n</ul>\n<ol start=\"3\">\n<li>Optimum utilization of resources can be ensured by:</li>\n</ol>\n<ul>\n<li>c) Management</li>\n</ul>\n<ol start=\"4\">\n<li>Motivating the people and building the team spirit to improve the life\nstandard of worker is possible due to:</li>\n</ol>\n<ul>\n<li>b) Management</li>\n</ul>\n<ol start=\"5\">\n<li><strong>Management</strong> is the art of getting work done through people</li>\n<li>Management is a creative and <strong>Continuous</strong> process.</li>\n<li>Management is _______</li>\n</ol>\n<ul>\n<li>\n<ol>\n<li>Art of getting things done through people</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Art of knowing what you want to do in best and cheaper way.</li>\n</ol>\n<ul>\n<li><strong>a) 1&amp;2</strong></li>\n</ul>\n</li>\n</ul>\n<ol start=\"8\">\n<li><strong>Administration</strong> concerned with decision making, policy making.</li>\n<li>The difference between administration and management is that:</li>\n</ol>\n<ul>\n<li>a) Administration is largely determinative while management is essentially\nexecutive.</li>\n</ul>\n<ol start=\"10\">\n<li>A tool manufacturing firm want to improve its performance from good to best\nsuggest the steps they should follow:</li>\n</ol>\n<ul>\n<li>a) 1. Optimum utilisation of resources and reduce wastage. 2. Building team\nspirit to achieve goal.</li>\n</ul>\n<ol start=\"11\">\n<li></li>\n</ol>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=MGT&description=MGT%20%20Who%20said%20“Management%20is%20the%20function%20of%20executive%20leadership%20anywhere”:%20%20%20a)%20Ralph%20C.%20Devis%20%20%20Universal,%20goal%20oriented,%20multidimensional,%20continuous%20process%20are%20some%20characteristics%20of:%20%20%20a)%20Management%20%20%20Optimum%20utilization%20of%20resources%20can%20be%20ensured%20by:%20%20%20c)%20Management%20%20%20M&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/ut2-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/ut2-6s.html",
      "title": "UT2 6S",
      "content_html": "<h1>Python QB UT 2</h1>\n<h2>1. Explain scope of a variable in Python.</h2>\n<ul>\n<li>A variable is only available from inside the region it is created.</li>\n<li>This is called scope.</li>\n<li>There are two types of scopes in Python:</li>\n</ul>\n<h3>Local scope</h3>\n<ul>\n<li>A variable created inside a function belongs to the local scope, and can only\nbe used inside that function.</li>\n<li>Example<pre><code class=\"language-python\">def fun()\n  x=10 # X is local variable\n  print(x)\n\nfun()\n</code></pre>\nO/P<pre><code>10\n</code></pre>\n</li>\n</ul>\n<h3>Global scope</h3>\n<ul>\n<li>A variable created in the main body of the code is a global variable and\nbelongs to the global scope.</li>\n<li>Global variables are available from within any scope global and local.</li>\n<li>Example:<pre><code class=\"language-python\">a = 50 # a is global variable\ndef fun()\n  print(a)\n\nfun()\nprint(a)\n</code></pre>\nO/P<pre><code>50\n50\n</code></pre>\n</li>\n</ul>\n<h2>2. Define class, data hiding, method overloading, inheritance, data abstraction, numpy, pandas.</h2>\n<h3>i) <code>class</code></h3>\n<ul>\n<li>Class is a blueprint for the object.</li>\n<li>We define a class by using the keyword class.</li>\n<li>Class objects are used to access different attributes.</li>\n</ul>\n<h3>ii) Data Hiding</h3>\n<ul>\n<li>Data hiding is one of the important features of Object Oriented Programming\nwhich allows preventing the functions of a program to access directly the\ninternal representation of a class type.</li>\n</ul>\n<h3>iii) Method Overloading</h3>\n<ul>\n<li>Overloading is the ability of a function or an operator to behave in different\nways based on the parameters that are passed to the function, or the operands\nthat the operator acts on.</li>\n</ul>\n<h3>iv) Inheritance</h3>\n<ul>\n<li>Inheritance refers to defining a new class with little or no modification to\nan existing class.</li>\n<li>The new class is called as derived or child class and the old class is called\nas base or parent class.</li>\n</ul>\n<h3>v) Data Abstraction</h3>\n<ul>\n<li>Data abstraction refers to providing only essential information about the data\nto the outside world and hiding the background details.</li>\n</ul>\n<h3>vi) Numpy</h3>\n<ul>\n<li>Numpy is a python package which stands for “Numerical Python”.</li>\n</ul>\n<h3>vii) Pandas</h3>\n<ul>\n<li>Pandas is an open source library that allows to perform data manipulation.</li>\n<li>Pandas library is built on the top of Numpy.</li>\n</ul>\n<h2>3. Explain Composition classes with program.</h2>\n<ul>\n<li>Composition class is composed of one of or more instance of other classes.</li>\n<li>In simple words, one class is container and other class is content, if we\ndelete the container objects then all of its contents objects are also\ndeleted.<pre><code class=\"language-python\">class test:\n  def __init__(self, name, marks):\n    self.name = name\n    self.marks = marks\n\nclass addr:\n  def __init__(self, ad, name, marks):\n    self.ad = ad\n    self.ob = test(name, marks)\n\n  def disp(self):\n    print(self.ad, self.ob.name, self.ob.marks)\n\nt = addr(&quot;Virar&quot;, &quot;ABC&quot;, 99)\nt.disp()\n</code></pre>\nO/P<pre><code>Virar ABC 99\n</code></pre>\n</li>\n</ul>\n<h2>4. WAP to create a file, write some contents in it and read the content from file.</h2>\n<pre><code class=\"language-python\">o = open(&quot;name.txt&quot;, &quot;w&quot;)\no.write(&quot;I am a programmer&quot;)\no.close()\no = open(&quot;name.txt&quot;, &quot;r&quot;)\nprint(o.read())\no.close()\n</code></pre>\n<p>O/P</p>\n<pre><code>I am a programmer\n</code></pre>\n<h2>5. WAP to check <code>ZeroDivisionError</code> Exception.</h2>\n<pre><code class=\"language-python\">x = int (input(&quot;x:&quot;))\ny = int(input(&quot;y:&quot;))\n\ntry:\n  x/y\nexcept ZeroDivisionError:\n  print(&quot;Error: Division by Zero&quot;)\nelse:\n  print(x/y)\n</code></pre>\n<p>O/P</p>\n<pre><code>x: 0\ny: 0\n\nError: Divison by Zero\n</code></pre>\n<h2>6. WAP to throw an exception if age&lt;18 (using raise).</h2>\n<pre><code class=\"language-python\">age = int(input(&quot;Age:&quot;))\ntry:\n  if age &lt; 18:\n    raise Exception\nexcept Exception:\n  print(&quot;Too small to vote!!&quot;)\nelse:\n  print(&quot;You can vote!!&quot;)\n</code></pre>\n<h2>7. List different modes of opening file.</h2>\n<p>Following are the different modes of opening file:</p>\n<ul>\n<li><code>r</code></li>\n<li><code>rb</code></li>\n<li><code>r+</code></li>\n<li><code>rb+</code></li>\n<li><code>w</code></li>\n<li><code>wb</code></li>\n<li><code>wb</code></li>\n<li><code>w+</code></li>\n<li><code>wb+</code></li>\n</ul>\n<h2>8. WAP to create class animal having method feed that prints ‘I eat food’. It has a sub class herbivorous having method feed that prints “I eat only plants”. Call the method by creating an object of each of the classes.</h2>\n<pre><code class=\"language-python\">class animal:\n  def feed(self):\n    print(&quot;I eat food&quot;)\n\nclass herbivorous(animal):\n  def feed(self):\n    print(&quot;I eat only plants&quot;)\n\na = animal()\na.feed()\nh = herbivorous()\nh.feed()\n</code></pre>\n<h2>9. WAP to create base classes namely add, mul having method addition and multiplication that prints addition and multiplication respectively. Derive a class derived from add and mul that has method divide and returns division. Create object and call methods.</h2>\n<pre><code class=\"language-python\">class add:\n  def addition(self, a, b):\n    self.a = a\n    self.b = b\n    print(self.a + self.b)\n\nclass mul:\n  def multiplication(self, a, b):\n    self.a = a\n    self.b = b\n    print(self.a * self.b)\n\nclass derived(add, mul):\n  def divide(self, a, b)\n    self.a = a\n    self.b = b\n    return self.a / self.b\n\nd = derived()\nprint(d.divide(28, 4))\nd.multiplication(2, 4)\nd.addition(5, 6)\n</code></pre>\n<p>O/P</p>\n<pre><code>7.0\n8\n11\n</code></pre>\n<h2>10. WAP to implement multilevel inheritance.</h2>\n<pre><code class=\"language-python\">class Student:\n  def accept(self):\n    self.roll = 10\n\nclass Test(Student):\n  def getdata(self):\n    self.name = &quot;ABC&quot;\n\nclass Result(Test):\n  def info(self):\n    self.marks = 99\n  def disp(self):\n    print(self.roll, self.name, self.marks)\n\nr = result()\nr.accept()\nr.getdata()\nr.info()\nr.disp()\n</code></pre>\n<p>O/P</p>\n<pre><code>10 ABC 99\n</code></pre>\n<h2>11. Create a 3x4 matrix of random values using numpy and perform following:</h2>\n<ol>\n<li>print type of array</li>\n<li>print dimension</li>\n<li>print shape</li>\n<li>print size</li>\n<li>print type of elements</li>\n<li>sort row wise</li>\n<li>print min, max, sum, flatten</li>\n</ol>\n<pre><code class=\"language-python\">import numpy as n\n\np = n.random.randint(30, size = (3, 3))\nprint(p)\nprint(type(p))\nprint(p.ndim)\nprint(p.shape)\nprint(p.size)\nprint(n.dtype)\nprint(n.sort(p))\npritt(p.min())\nprint(p.max())\nprint(sum(p))\nprint(p.flatten())\n</code></pre>\n<p>O/P</p>\n<pre><code>[[10, 20, 21]\n [14, 15, 13]\n [23, 24, 29]]\n&lt;class 'numpy.ndarray'&gt;\n2\n(3, 3)\n9\nint64\n[[10, 20, 21]\n [13, 14, 15]\n [23, 24, 29]]\n10\n29\n[51 42 76]\n[10 20 21 14 15 13 23 24 29]\n</code></pre>\n<h2>12. WAP that accepts a string and calculate the number of upper and lower case letters (string=&quot;Viva College)</h2>\n<pre><code class=\"language-python\">c = input(&quot;Enter string.&quot;)\nu = 0\ni = 0\n\nfor i in c:\n  if (i.isupper()):\n    u += 1\n  if (i.islower()):\n    i += 1\n\nprint(&quot;Upper case letters are&quot;, u)\nprint(&quot;Lower case letters are&quot;, i)\n</code></pre>\n<h2>13. WAP to generate a random float where the value is between 5 and 50</h2>\n<pre><code class=\"language-python\">import random\na = random.uiform(5, 50)\nprint(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>20.80854522266047\n</code></pre>\n<h2>14. Plot a line from position (10, 33) to position (80, 65) with following:</h2>\n<ol>\n<li>marker - 0</li>\n<li>line-dotted, line color-red</li>\n<li>x-label: student, y-label marks.</li>\n<li>Add grid lines</li>\n</ol>\n<pre><code class=\"language-python\">import matplotlib.pylot as p\nimport numpy as n\n\nx = n.array([10, 33])\ny = n.array([80, 64])\n\np.xlabel(&quot;Student&quot;)\np.ylable(&quot;Marks&quot;)\np.plot(x, y, marker = 'o', linestyle = 'dotted', color = 'r')\np.grid()\np.show()\n</code></pre>\n<h2>15. WAP to print 3x3 matrix with o at border and I inside.</h2>\n<pre><code class=\"language-python\">import numpy as n\na = n.zeros((3, 3))\na[1:-1, 1:-1] = 1\nprint(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>[[0. 0. 0.]\n [0. 1. 0.]\n [0. 0. 0.]]\n</code></pre>\n<h2>16. WAP to create matrix with values 2-10.</h2>\n<pre><code class=\"language-python\">import numbpy as n\na = n.arange(2, 11).reshape(3, 3)\nprint(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>[[2 3 4]\n [5 6 7]\n [8 9 10]]\n</code></pre>\n<h2>17. Explain Exception Handling in python.</h2>\n<ul>\n<li>When we executes a Python program, there may be a few uncertain conditions\nwhich occur, known as errors. Errors also referred to as bugs that are\nincorrect or inaccurate action that may cause the problems in the running of\nthe program of program or may interrupt the execution of program.</li>\n<li>There are three types of error:\n<ul>\n<li>i) Compile Time Errors.</li>\n<li>ii) Run Time Errors.</li>\n<li>iii) Logical Errors.</li>\n</ul>\n</li>\n<li>Errors occured at runtime are known as exception. Exception handling is a\nfeature that is used for handling any unreported errors in program.</li>\n<li>By handling the exceptions, we can provide a meaningful message to the user\nabout the problem rather than system generated error message, which may not be\nunderstandable to the user.</li>\n<li>Exception can be either built-in exception or user defined exceptions.</li>\n</ul>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT2 6S&description=Python%20QB%20UT%202%201.%20Explain%20scope%20of%20a%20variable%20in%20Python.%20%20A%20variable%20is%20only%20available%20from%20inside%20the%20region%20it%20is%20created.%20This%20is%20called%20scope.%20There%20are%20two%20types%20of%20scopes%20in%20Python:%20%20Local%20scope%20%20A%20variable%20created%20inside%20a%20function%20belongs%20to%20the%20local%20scope,%20and%20can%20only%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/ut1-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/ut1-6s.html",
      "title": "UT1 6S",
      "content_html": "<p><strong>Note: WAP (write a program)</strong></p>\n<h2>WAP to print Fibonacci Series</h2>\n<pre><code class=\"language-python\">term = int(input(&quot;Enter the term: &quot;))\n\nn1, n2 = 0, 1\n\nif term &lt; 0:\n    print(&quot;Invalid term&quot;)\nelse:\n    for i in range(term):\n        print(n1)\n        nth = n1 + n2\n        n1 = n2\n        n2 = nth\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter the term: 7\n0\n1\n1\n2\n3\n5\n8\n</code></pre>\n<h2>Factorial of a number</h2>\n<pre><code class=\"language-python\">n = int(input(&quot;Enter the number: &quot;))\nf = 1\n\nfor i in range(1, n + 1):\n    f = f * i\n\nprint(f)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter the number: 6\n720\n</code></pre>\n<h2>Perform <code>intersection()</code>, <code>union()</code>, <code>difference()</code>, <code>symmetric_difference()</code> on <code>set</code></h2>\n<pre><code class=\"language-python\">set1 = {1, 5, 8, &quot;Google&quot;, 9, 6}\nset2 = {1, &quot;Google&quot;, 6, 3, 2, 11}\n\ni = set1.intersection(set2)\nu = set1.union(set2);\nd = set1.difference(set2)\ns = set1.symmetric_difference(set2)\n\nset1.clear()\n\nprint(&quot;Intersection =&quot;, i);\nprint(&quot;Union =&quot;, u);\nprint(&quot;Set Difference =&quot;, d);\nprint(&quot;Symmetric Difference =&quot;, s);\nprint(&quot;Clear Set =&quot;, set1);\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Intersection =  {1, 'Google', 6}\nUnion =  {1, 2, 3, 5, 6, 8, 9, 11, 'Google'}\nSet Difference =  {8, 9, 5}\nSymmetric Difference =  {2, 3, 5, 8, 9, 11}\nClear Set =  set()\n</code></pre>\n<h2>WAP that takes the marks of 5 Subjects and displays the grade</h2>\n<pre><code class=\"language-python\">sub1 = int(input(&quot;Enter marks of subject 1: &quot;))\nsub2 = int(input(&quot;Enter marks of subject 2: &quot;))\nsub3 = int(input(&quot;Enter marks of subject 3: &quot;))\nsub4 = int(input(&quot;Enter marks of subject 4: &quot;))\nsub5 = int(input(&quot;Enter marks of subject 5: &quot;))\n\ntotal = ((sub1 + sub2 + sub3 + sub4 + sub5) / 5)\nprint(&quot;\\nPercentage is&quot;, total)\n\nif total &gt; 75:\n    print(&quot;Distinction&quot;)\nelif total &gt;= 65 and total &lt; 75:\n    print(&quot;First Class&quot;)\nelif total &gt;= 50 and total &lt; 60:\n    print(&quot;Second Class&quot;)\nelif total &gt;=35 and total &lt; 50:\n    print(&quot;Third Class&quot;);\nelse:\n    print(&quot;Fail&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter marks of subject 1: 57\nEnter marks of subject 2: 78\nEnter marks of subject 3: 87\nEnter marks of subject 4: 50\nEnter marks of subject 5: 70\n\nPercentage is 68.4\nFirst Class\n</code></pre>\n<h2>Explain features of python</h2>\n<ol>\n<li>Python is easy to use and a high level programming language.</li>\n<li>Python is interpreted language</li>\n<li>Interactive mode</li>\n<li>Free and Open Source</li>\n<li>Platform independence</li>\n<li>Portable</li>\n<li>Object oriented language</li>\n</ol>\n<h2>WAP to check whether entered character is vowel or not</h2>\n<pre><code class=\"language-python\">ch = input(&quot;Enter the character: &quot;).lower()\n\nif(ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u'):\n    print(&quot;Entered character is vowel.&quot;)\nelse:\n    print(&quot;Entered character is not a vowel.&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter character: a\nEntered character is a vowel.\n</code></pre>\n<h2>WAP to check number is prime or not</h2>\n<pre><code class=\"language-python\">num = int(input(&quot;Enter a number: &quot;));\n\nif num &gt; 1:\n    for i in range(2, num):\n        if (num % i) == 0:\n            print(num, &quot;is not a prime number.&quot;)\n            break;\n    else:\n        print(num, &quot;is prime number.&quot;)\nelse:\n    print(num, &quot;is not a prime number.&quot;);\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter the number: 11\n11 is a prime number.\n</code></pre>\n<h2>WAP checks whether the number is palindrome or not.</h2>\n<pre><code class=\"language-python\">n = input(&quot;Enter number: &quot;)\nrev = n[ : :-1]\n\nif rev == n:\n    print(n, &quot;is a palindrome.&quot;)\nelse:\n    print(n, &quot;is not a palindrome.&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter number: 33\n33 is a palindrome.\n</code></pre>\n<h2>WAP to perform following operation on list</h2>\n<ol>\n<li><strong>max()</strong> - Find largest number</li>\n<li><strong>reverse()</strong> - Find  Reverse of the list</li>\n<li><strong>i % 2</strong> - Select even item of the list</li>\n<li><strong>sum()</strong> - Sum of all item in a list</li>\n</ol>\n<h3>Find largest number</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\nprint(&quot;Largest number&quot;, max(a))\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Largest number 11\n</code></pre>\n<h3>Reverse list</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\na.reverse()\nprint(&quot;Reverse list&quot;, a)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Reverse list [11, 6, 4, 2, 1, 5, 2, 8]\n</code></pre>\n<h3>Even items</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\n\nfor i in a:\n  if (i % 2) == 0:\n    print(i)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>8\n2\n2\n6\n4\n</code></pre>\n<h3>Sum of all items</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\nprint(&quot;Sumof all items:&quot;, sum(a))\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Sum of all items: 39\n</code></pre>\n<h2>Compare list and sets</h2>\n<table>\n<thead>\n<tr>\n<th>Lists</th>\n<th>Sets</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lists are Ordered.</td>\n<td>Sets are Unordered.</td>\n</tr>\n<tr>\n<td>Lists are Mutable.</td>\n<td>Sets are mutable but only stored immutable elements.</td>\n</tr>\n<tr>\n<td>Elements can be changed or replaced in Lists.</td>\n<td>Elements cannot be changed or replaced.</td>\n</tr>\n</tbody>\n</table>\n<h2>Describe various list functions</h2>\n<ol>\n<li><strong>extend()</strong> - add  all elements of of list to the another list</li>\n<li><strong>insert()</strong> - insert and item from the list</li>\n<li><strong>clear()</strong> - removes all elements from the list</li>\n<li><strong>copy()</strong> - returns a copy of the list</li>\n<li><strong>reverse()</strong> - reverse the order of element in the list</li>\n<li><strong>sort()</strong> - sort the element list</li>\n</ol>\n<p><strong>Note:</strong> <strong>Given below example will not come in exam. This is only for reference.</strong></p>\n<h3>extend()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\nlist2 = [1, 6, 3, 2, 11]\n\nlist1.extend(list2)\nprint(&quot;Extend:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Extend: [1, 5, 8, 9, 6, 1, 6, 3, 2, 11]\n</code></pre>\n<h3>insert()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.insert(3, 100)\nprint(&quot;Insert:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Insert: [1, 5, 8, 100, 9, 6]\n</code></pre>\n<h3>clear()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.clear()\nprint(&quot;Clear:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Clear: []\n</code></pre>\n<h3>reverse()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.reverse()\nprint(&quot;Reverse:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Reverse: [6, 9, 8, 5, 1]\n</code></pre>\n<h3>sort()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.sort()\nprint(&quot;Sort:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Sort: [1, 5, 6, 8, 9]\n</code></pre>\n<h2>Write a program convert US Dollars to Indian Rupees.</h2>\n<pre><code class=\"language-python\">usd = float(input(&quot;Enter currency in USD: &quot;))\ninr = usd * 75\nprint(&quot;The currency in INR is&quot;, inr)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter currency in USD: 2\nThe currency in INR: 150.0\n</code></pre>\n<h2>Explain operator in python</h2>\n<p>An operator is Single set of special symbols that performs predefined\noperations  on operators. Python provides a variety of operators, which are\ndescribed as follows.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Operators</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Arithmetic operators</td>\n<td>+, -, *, /, %, **, //</td>\n</tr>\n<tr>\n<td>Assignment Operators</td>\n<td>+=, =, -=, /=, //=</td>\n</tr>\n<tr>\n<td>Logical Operators</td>\n<td>and, or, not</td>\n</tr>\n<tr>\n<td>Bitwise Operators</td>\n<td>&amp;, &gt;&gt;, &lt;&lt;, ^</td>\n</tr>\n<tr>\n<td>Membership Operators</td>\n<td>in, not in</td>\n</tr>\n<tr>\n<td>Identity Operators</td>\n<td>is, is not</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note:</strong> <strong>Given below example will not come in exam. This is only for reference.</strong></p>\n<h3>Arithmetic operators</h3>\n<pre><code class=\"language-python\">num1 = int(input(&quot;Enter first number: &quot;))\nnum2 = int(input(&quot;Enter second number: &quot;))\n\nprint(num1, &quot;+&quot;, num2, &quot;=&quot;, num1 + num2)\nprint(num1, &quot;-&quot;, num2, &quot;=&quot;, num1 - num2)\nprint(num1, &quot;*&quot;, num2, &quot;=&quot;, num1 * num2)\nprint(num1, &quot;/&quot;, num2, &quot;=&quot;, num1 / num2)\nprint(num1, &quot;%&quot;, num2, &quot;=&quot;, num1 % num2)\nprint(num1, &quot;**&quot;, num2, &quot;=&quot;, num1 ** num2)\nprint(num1, &quot;//&quot;, num2, &quot;=&quot;, num1 // num2)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Enter first number: 10\nEnter second number: 10\n10 + 10 = 20\n10 - 10 = 0\n10 * 10 = 100\n10 / 10 = 1.0\n10 % 10 = 0\n10 ** 10 = 10000000000\n10 // 10 = 1\n</code></pre>\n<h3>Assignment Operators</h3>\n<pre><code class=\"language-python\">a = 3\nb = 5\n\na += b\n\nprint(a)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>8\n</code></pre>\n<h3>Logical Operators</h3>\n<pre><code class=\"language-python\">num1 = int(input(&quot;Enter first number: &quot;))\nnum2 = int(input(&quot;Enter second number: &quot;))\n\nif (num1 &lt; num2 and num1 &lt;= num2):\n    print(num1, &quot;&lt;&quot;, num2, &quot;and&quot;, num1, &quot;&lt;=&quot;, num2)\nelif (num1 &gt; num2 or num1 &gt;= num2):\n    print(num1, &quot;&gt;&quot;, num2, &quot;or&quot;, num1, &quot;&gt;=&quot;, num2)\nelif not(num1 &lt; num2 and num1 &lt;=num2):\n    print(&quot;Not:&quot;, num1, &quot;&lt;&quot;, num2, &quot;and&quot;, num1, &quot;&lt;=&quot;, num2)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Enter first number: 10\nEnter second number: 1\n10 &gt; 1 or 10 &gt;= 1\n</code></pre>\n<h3>Bitwise Operators</h3>\n<pre><code class=\"language-python\">num1 = int(input(&quot;Enter first number: &quot;))\nnum2 = int(input(&quot;Enter second number: &quot;))\n\nprint(num1, &quot;&amp;&quot;, num2, &quot;=&quot;, num1 &amp; num2)\nprint(num1, &quot;|&quot;, num2, &quot;=&quot;, num1 | num2)\nprint(num1, &quot;^&quot;, num2, &quot;=&quot;, num1 ^ num2)\nprint(num1, &quot;&gt;&gt;&quot;, num2, &quot;=&quot;, num1 &gt;&gt; num2)\nprint(num1, &quot;&lt;&lt;&quot;, num2, &quot;=&quot;, num1 &lt;&lt; num2)\nprint(&quot;~&quot;,num1, &quot;=&quot;, ~num1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Enter first number: 10\nEnter second number: 10\n10 &amp; 10 = 10\n10 | 10 = 10\n10 ^ 10 = 0\n10 &gt;&gt; 10 = 0\n10 &lt;&lt; 10 = 10240\n~ 10 = -11\n</code></pre>\n<h3>Membership Operators</h3>\n<pre><code class=\"language-python\">x = [&quot;apple&quot;, &quot;banana&quot;]\ny = [&quot;pineapple&quot;, &quot;orange&quot;]\n\nprint(&quot;apple in x:&quot;, &quot;apple&quot; in x)\nprint(&quot;pineapple not in x:&quot;, &quot;pineapple&quot; not in x)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>apple in x: True\npineapple not in x: True\n</code></pre>\n<h3>Identity Operators</h3>\n<pre><code class=\"language-python\">x = [&quot;apple&quot;, &quot;banana&quot;]\ny = [&quot;pineapple&quot;, &quot;orange&quot;]\n\nprint(&quot;x is y:&quot;, x is y)\nprint(&quot;x is not y:&quot;, x is not y)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>x is y: False\nx is not y: True\n</code></pre>\n<h2>Explain <code>continue</code>, <code>pass</code>, <code>break</code>, <code>else</code> with example.</h2>\n<h3>continue</h3>\n<p>The **continue **statement skips the code that comes after it, and the control\nis passed back to the next iteration.</p>\n<p><strong>Example</strong>:</p>\n<pre><code>for i in range(6):\n    if i == 7:\n        continue\n    print(&quot;The Number is:&quot; , i)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>The number is: 0\nThe number is: 1\nThe number is: 2\nThe number is: 3\nThe number is: 4\nThe number is: 5\nThe number is: 6\n</code></pre>\n<h3>pass</h3>\n<p>Python pass statement is used as a placeholder inside loops, functions, class,\nif-statement that is meant to be implemented later.</p>\n<p><strong>Example</strong>:</p>\n<pre><code>a = 10\nb = 20\nif a &lt; b:\n  pass\nelse:\n  print(&quot;b &lt; a&quot;)\n</code></pre>\n<p><strong>Output</strong>:\nNo output</p>\n<h3>break</h3>\n<p>The <strong>break</strong> statement takes care of terminating the loop in which it is used.\nIf the break statement is used inside nested loops, the current loop is\nterminated, and the flow will continue with the code followed that comes after\nthe loop.</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-python\">for i in range(4):\n    for j in range(4):\n        if j==2:\n            break\n        print(&quot;The number is&quot;, i, j)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>This number is 0 0\nThis number is 0 1\nThis number is 1 0\nThis number is 1 1\nThis number is 2 0\nThis number is 2 1\nThis number is 3 0\nThis number is 3 1\n</code></pre>\n<h3>else</h3>\n<p>**else **statement can be combined with an if statement. An else statement\ncontains the block of code that executes if the conditional expression in the\nif statement resolves to 0 or a FALSE value.</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-python\">num = 3\nif num &gt;= 0:\n    print(&quot;Positive or Zero&quot;)\nelse:\n    print(&quot;Negative number&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Positive or Zero\n</code></pre>\n<h2>Define dictionary explain <code>access</code>, <code>delete</code>, <code>update()</code> dictionary</h2>\n<p>Dictionary in Python is an unordered collection of data values, used to store\ndata values like a map, which, unlike other Data Types that hold only a single\nvalue as an element, Dictionary holds key:value pair.</p>\n<h3>acces</h3>\n<p>You can access the items of a dictionary by referring to its key name</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-python\">di = {&quot;Name&quot;: &quot;VIVA&quot;,&quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;:123}\nx = di[&quot;Name&quot;]\nprint(x)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>VIVA\n</code></pre>\n<h3>update()</h3>\n<p>Updates the dictionary with the specified key-value pairs</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-python\">di = {&quot;Name&quot;: &quot;VIVA&quot;,&quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;: 123}\ndi.update({&quot;No&quot;:456})\nprint(di)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>{'Name': 'VIVA', 'Dept': 'TYCO', 'add': 'Virar', 'No': 456}\n</code></pre>\n<h3>del</h3>\n<p>The del keyword is used delete the dictionary completely</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-python\">di = {&quot;Name&quot;: &quot;VIVA&quot;, &quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;: 123}\ndel di\nprint(di)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>NameError: name 'di' is not defined\n</code></pre>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT1 6S&description=Note:%20WAP%20(write%20a%20program)%20WAP%20to%20print%20Fibonacci%20Series%20term%20=%20int(input(&quot;Enter%20the%20term:%20&quot;))%20%20n1,%20n2%20=%200,%201%20%20if%20term%20&lt;%200:%20%20%20%20%20print(&quot;Invalid%20term&quot;)%20else:%20%20%20%20%20for%20i%20in%20range(term):%20%20%20%20%20%20%20%20%20print(n1)%20%20%20%20%20%20%20%20%20nth%20=%20n1%20+%20n2%20%20%20%20%20%20%20%20%20n1%20=%20n2%20%20%20%20%20%20%20%20%20n2%20=%20nth%20%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/finals.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/finals.html",
      "title": "Finals",
      "content_html": "<h1>Python</h1>\n<h2>a) Name different modes of Python.</h2>\n<p>Python has two basic modes:</p>\n<ol>\n<li>Script mode (or Normal mode)</li>\n</ol>\n<ul>\n<li>The mode where the scripted and finished .py files are in the Python\nInterpreter.</li>\n</ul>\n<ol start=\"2\">\n<li>Interactive mode</li>\n</ol>\n<ul>\n<li>A command line shell which gives immediate feedback for each statement,\nwhile running previously fed statements in active memory.</li>\n</ul>\n<h2>b) List identity Operators</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>Returns <code>True</code> if both variables are sames object</td>\n<td>x is y</td>\n</tr>\n<tr>\n<td>is not</td>\n<td>Returns <code>False</code> if both variables are sames object</td>\n<td>x is not y</td>\n</tr>\n</tbody>\n</table>\n<h2>c) Give two differences between list and tuple.</h2>\n<h3>List</h3>\n<ul>\n<li>Lists are mutable.</li>\n<li>The list is better for performing operations.</li>\n<li>Lists consume more memory.</li>\n<li>More likely error will occur.</li>\n</ul>\n<h3>Tuple</h3>\n<ul>\n<li>Tuples are immutable.</li>\n<li>The implication of iterations is faster.</li>\n<li>Tuple consume less memory.</li>\n<li>Less likely error will occur.</li>\n</ul>\n<h2>d) Explain Local and Global variable.</h2>\n<table>\n<thead>\n<tr>\n<th>Local</th>\n<th>Global</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>It is declare  inside a function</td>\n<td>It is declared outside the function</td>\n</tr>\n<tr>\n<td>It is created when the function starts execution and lost when the function terminate.</td>\n<td>It is created before the program’s global execution starts and lost when the program terminates.</td>\n</tr>\n<tr>\n<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>\n<td>You can access global variables by any statement in the program.</td>\n</tr>\n<tr>\n<td>Parameters passing is required for local variables to access the value in other function.</td>\n<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>\n</tr>\n</tbody>\n</table>\n<h2>e) Define class and object in python.</h2>\n<h3>Class</h3>\n<ul>\n<li>Class is a blueprint for the object.</li>\n<li>We define a class by using the keyword class.</li>\n<li>Class objects are used to access different attributes.</li>\n</ul>\n<h3>Object</h3>\n<ul>\n<li>Classes are the user-defined blueprints that help us create an “object”.</li>\n<li>Objects are the instances of a particular class.</li>\n<li>Every other element in Python will be an object of some class, such as the string, dictionary, number(10,40), etc.</li>\n</ul>\n<h2>f) How to give single and multiline comment in python.</h2>\n<h3>Single-Line</h3>\n<ul>\n<li>Add the hash (#) symbol before the comment:</li>\n</ul>\n<pre><code class=\"language-python\"># This is your comment\n</code></pre>\n<h3>Multiline</h3>\n<p>-Python will ignore string literals that are not assigned to a variable, you can add a multiline string (triple quotes) in your code, and place your comment inside it:</p>\n<pre><code class=\"language-python\">&quot;&quot;&quot;\nThis is a comment\nwritten in\nmore than just one line\n&quot;&quot;&quot;\n</code></pre>\n<h2>g) List different modes of opening file in python.</h2>\n<p>There are four different methods modes for opening a file:</p>\n<ul>\n<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>\n<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not\nexist.</li>\n<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>\n<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not\nexist.</li>\n</ul>\n<p>In addition, the file should be handled as binary or text mode:</p>\n<ul>\n<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>\n<li>b - Binary - Binary mode (e.g. images).</li>\n</ul>\n<h2>a) Write a program to print following:</h2>\n<pre><code class=\"language-python\">rows = int(input(&quot;Enter number of rows: &quot;))\n\nfor i in range(rows):\n    for j in range(i+1):\n        print(j+1, end=&quot; &quot;)\n    print(&quot;\\n&quot;)\n</code></pre>\n<h2>b) Explain four Buit-in tuple functions python with example.</h2>\n<ul>\n<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>\n<li><code>max()</code> - Highest value will returned.</li>\n<li><code>min()</code> - Lowest value be returned.</li>\n<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>\n</ul>\n<h2>Explain how to use user defined function in python with example.</h2>\n<p>In Python, a user-defined function’s declaration begins with the keyword def and followed by the function name.</p>\n<pre><code class=\"language-python\">def printt():\n    print(&quot;This is Python 3.2 Tutorial&quot;)\n    print(&quot;This is Python 3.2 Tutorial&quot;)\n    print(&quot;This is Python 3.2 Tutorial&quot;)\nprintt()\n</code></pre>\n<p>Output:</p>\n<pre><code>This is Python 3.2 Tutorial\nThis is Python 3.2 Tutorial\nThis is Python 3.2 Tutorial\n</code></pre>\n<h2>d) Write a program to create class EMPLOYEE with ID and NAME and display its contents.</h2>\n<pre><code class=\"language-python\">class Employee:\n\tname = &quot;&quot;\n\tdepartment = &quot;&quot;\n\tsalary = 0\n\n\tdef setData(self):\n\t\tself.name = input(&quot;Enter Name: &quot;)\n\t\tself.department = input(&quot;Enter Department: &quot;)\n\t\tself.salary = int(input(&quot;Enter Salary: &quot;))\n\n\tdef showData(self):\n\t\tprint(&quot;Name:&quot;, self.name)\n\t\tprint(&quot;Department:&quot;, self.department)\n\t\tprint(&quot;Salary:&quot;, self.salary)\n\ne = Employee()\ne.setData()\ne.showData()\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter Name: Jonney\nEnter Department: Testing\nEnter Salary: 20000\nName: Jonney\nDepartment: Testing\nSalary: 20000\n</code></pre>\n<h2>List Data types used in python. Explain any two with example.</h2>\n<p>Thare are three data type in python numbers, string &amp; boolean.</p>\n<h3>String</h3>\n<ul>\n<li>String is a collection of group of characters.</li>\n<li>String are identified as a contiguous set of characters enclosed in single quotes(’ ') or double quotes(&quot; &quot;).</li>\n<li>String can also can be define with str() function.</li>\n</ul>\n<h3>Boolean</h3>\n<ul>\n<li>Boolean represents the two values namely False and True.</li>\n<li>The true value is represented true as 1 and false as 0.</li>\n</ul>\n<h2>b) Explain membership and assignment operators with example.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>True if value in list or in sequence</td>\n<td>(‘H’ in x) is True</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>False if value not in list or in sequence</td>\n<td>(‘H’ in x) is False</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th style=\"text-align:center\">Description</th>\n<th>Syntax</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td style=\"text-align:center\">Assign value of right side of expression to left side operand</td>\n<td>x = y + z</td>\n</tr>\n<tr>\n<td>+=</td>\n<td style=\"text-align:center\">Add and Assign: Add right side operand with left side operand and then assign to left operand</td>\n<td>a += b</td>\n</tr>\n<tr>\n<td>-=</td>\n<td style=\"text-align:center\">Subtract AND: Subtract right operand from left operand and then assign to left operand: True if both operands are equal</td>\n<td>a -= b</td>\n</tr>\n<tr>\n<td>*=</td>\n<td style=\"text-align:center\">Multiply AND: Multiply right operand with left operand and then assign to left operand</td>\n<td>a *= b</td>\n</tr>\n</tbody>\n</table>\n<h2>c) Explain indexing and slicing in list with example.</h2>\n<ul>\n<li>“Indexing” means referring to an element of an iterable by its position within the iterable.</li>\n<li>“Slicing” means getting a subset of elements from an iterable based on their indices.</li>\n</ul>\n<h2>d) Write a program for importing module for addition and substraction of two numbers.</h2>\n<pre><code class=\"language-python\">a = int(input(&quot;Enter first number: &quot;))\nb = int( input(&quot;Enter second number: &quot;))\nSum = a+b; #Add two numbers\nDifference = a-b; #Subtract two numbers\n# To print the result\nprint(&quot;Addition of two numbers = &quot;,Sum)\nprint(&quot;Subtraction of two numbers = &quot;,Difference)\n</code></pre>\n<p>Output:</p>\n<pre><code>Output:\nEnter first number: 30\nEnter second number: 20\nAddition of two numbers = 50\nSubtraction of two numbers = 10\n</code></pre>\n<h2>a) Write a program to create dictionary of students that includes their ROLL NO. and NAME:</h2>\n<p>i) Add three students in above dictionary\nii) Update name= ‘Shreyas’ of ROLL NO = 2\niii) Delete information of ROLL NO = 1</p>\n<pre><code class=\"language-python\">students = {\n  1: &quot;ronney&quot;,\n  2: &quot;jay&quot;\n}\n\nstudents[2] = &quot;Shreyas&quot;\ndel students[1]\nprint(students)\n</code></pre>\n<p>Output:</p>\n<pre><code>{ 2: &quot;Shreyas&quot; }\n</code></pre>\n<h2>b) Explain decision making statements If-else, if-elif-else with example.</h2>\n<p>The if…elif…else statement is used in Python for decision making.</p>\n<pre><code class=\"language-python\">num = 3.4\n\nif num &gt; 0:\n    print(&quot;Positive number&quot;)\nelif num == 0:\n    print(&quot;Zero&quot;)\nelse:\n    print(&quot;Negative number&quot;)\n</code></pre>\n<h2>c) Explain use of format () method with example.</h2>\n<p>Python format() function has been introduced for handling complex string formatting more efficiently.</p>\n<pre><code class=\"language-python\">txt = &quot;I have {an:.2f} Ruppes!&quot;\nprint(txt.format(an = 4))\n</code></pre>\n<p>Output:</p>\n<pre><code>I have 4.00 Ruppes!\n</code></pre>\n<h2>d) Explain building blocks of python.</h2>\n<ul>\n<li>The core data structures to learn in Python are List (list), Dictionary (dict), Tuple (tuple), and Set (set).</li>\n<li>To indicate a block of code in Python, you must indent each line of the block by the same amount.</li>\n</ul>\n<h2>e) Write a program illustrating use of user defined package in python.</h2>\n<p>Packages are a way of structuring many packages and modules which helps in a well-organized hierarchy of data set, making the directories and modules easy to access.</p>\n<p><a href=\"http://file1.py/\">file1.py</a>:</p>\n<pre><code class=\"language-python\">class Bmw:\n    # First we create a constructor for this class\n    # and add members to it, here models\n    def __init__(self):\n        self.models = ['i8', 'x1', 'x5', 'x6']\n\n    # A normal print function\n    def outModels(self):\n        print('These are the available models for BMW')\n        for model in self.models:\n            print('\\t%s ' % model)\n</code></pre>\n<p><a href=\"http://file2.py/\">file2.py</a></p>\n<pre><code class=\"language-python\">from Bmw import Bmw\n</code></pre>\n<h2>Write the output of the following:</h2>\n<pre><code>&gt;&gt;&gt; a = [2, 5, 1, 3, 6, 9, 7]\n&gt;&gt;&gt; a[2:6] = [2, 4, 9, 0]\n&gt;&gt;&gt; print (a)\n</code></pre>\n<p>Ans:</p>\n<pre><code>[2, 5, 2, 4, 9, 0, 7]\n</code></pre>\n<pre><code>b = [&quot;Hello&quot;, &quot;Good&quot;]\nb.append(&quot;python&quot;)\nprint (b)\n</code></pre>\n<p>Ans:</p>\n<pre><code>['Hello', 'Good', 'python']\n</code></pre>\n<pre><code>t1 = [3, 5, 6, 7]\nprint (t1[2])\nprint (t1[-1])\nprint (t1[2:])\nprint(t1[:])\n</code></pre>\n<p>Ans:</p>\n<pre><code>6\n7\n[6, 7]\n[3, 5, 6, 7]\n</code></pre>\n<h2>Explain method overloading in python with example.</h2>\n<ul>\n<li>overloading is the ability of a function or an operator to behave in different ways based on the parameters that are passed to the function, or the operands that the operator acts on.</li>\n</ul>\n<pre><code class=\"language-python\">class A:\n    def __init__(self, a):\n        self.a = a\n\n    # adding two objects\n    def __add__(self, o):\n        return self.a + o.a\nob1 = A(1)\nob2 = A(2)\nob3 = A(&quot;Geeks&quot;)\nob4 = A(&quot;For&quot;)\n\nprint(ob1 + ob2)\nprint(ob3 + ob4)\n</code></pre>\n<h2>Write a program to open a file in write mode and some contents at the end of file.</h2>\n<pre><code class=\"language-python\">o = open(&quot;name.txt&quot;, &quot;w&quot;)\no.write(&quot;I am a programmer&quot;)\no.close()\no = open(&quot;name.txt&quot;, &quot;r&quot;)\nprint(o.read())\no.close()\n</code></pre>\n<p>O/P</p>\n<pre><code>I am a programmer\n</code></pre>\n<h2>a) Explain package Numpy with example.</h2>\n<ul>\n<li>Numpy is a python package which stands for “Numerical Python”.</li>\n</ul>\n<pre><code class=\"language-python\">import numpy as n\na=n.ones((3, 3))\na[1:-1,1:-1]=0\nprint(a)\n</code></pre>\n<p>Output:</p>\n<pre><code>[[1. 1. 1.]\n [1. 0. 1.]\n [1. 1. 1.]]\n</code></pre>\n<h2>6) Write a program to implement the concept of inheritance in python.</h2>\n<pre><code class=\"language-python\">class Parent:\n\tparentname = &quot;&quot;\n\tchildname = &quot;&quot;\n\tdef show_parent(self):\n\t\tprint(self.parentname)\n\nclass Child(Parent):\n\tdef show_child(self):\n\t\tprint(self.childname)\n\nc = Child()\nc.parentname = &quot;Arati&quot;\nc.childname = &quot;Purva&quot;\nc.show_parent()\nc.show_child()\n</code></pre>\n<h2>c) Explain Try-except block used in exception handling in python with example.</h2>\n<ul>\n<li>When an exception occurs, Python will normally stop and generate an error message.</li>\n<li>These exceptions can be handled using the try statement.</li>\n<li>The except block lets you handle the error.</li>\n</ul>\n<pre><code class=\"language-python\">try:\n  print(x)\nexcept NameError:\n  print(&quot;Variable x is not defined&quot;)\n</code></pre>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Finals&description=Python%20a)%20Name%20different%20modes%20of%20Python.%20Python%20has%20two%20basic%20modes:%20%20Script%20mode%20(or%20Normal%20mode)%20%20%20The%20mode%20where%20the%20scripted%20and%20finished%20.py%20files%20are%20in%20the%20Python%20Interpreter.%20%20%20Interactive%20mode%20%20%20A%20command%20line%20shell%20which%20gives%20immediate%20feedback%20for%20each%20statement,%20whi&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/notes.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/notes.html",
      "title": "Notes",
      "content_html": "<h1>1. Introduction and Syntax of Python Program</h1>\n<h2>3. Enlist applications for Python programming.</h2>\n<p>Python is often used as a support language for software developers, for build\ncontrol and management, testing, and in many other ways.</p>\n<h2>4. What are the features of Python?</h2>\n<ul>\n<li>Easy to learn and use</li>\n<li>Interpreted Language</li>\n<li>Interactive Mode</li>\n<li>Free and Open Source</li>\n<li>Cross Platform/Portable</li>\n<li>OOP Language</li>\n</ul>\n<h2>5. List any four editors used for Python programming.</h2>\n<ul>\n<li>IDEA</li>\n<li>Sublime Text</li>\n<li>Vim</li>\n<li>Notepad++</li>\n</ul>\n<h2>6. ‘Python programming language is interpreted an interactive’ comment this sentence.</h2>\n<p>Python has two basic modes:</p>\n<ul>\n<li>Script mode</li>\n<li>Interactive mode</li>\n</ul>\n<h3>Script mode</h3>\n<p>The normal script mode is the mode where the scripted and finished <code>.py</code> files\nare run in the Python interpreter.</p>\n<h3>Interactive mode</h3>\n<p>The interactive mode is a command line shell which gives immediate feedback for\neach statement while running previously fed statements in active memory.</p>\n<h2>7. How to run python scripts? Explain in detail.</h2>\n<p>Open a command line and type the word python followed by the path to your script\nfile, like this: python <code>first_script.py</code> Hello World! Then you hit the ENTER\nbutton from the keyboard and that’s it.</p>\n<h2>8. What is interpreter? How it works? 9. Explain the following features of Python programming:</h2>\n<h3>(i) Simple</h3>\n<p>Python is considered one of the easiest programming languages to learn.</p>\n<h3>(ii) Platform independent</h3>\n<p>Python is a binary platform-independent programming language. The same Python\ncode can run on virtually all operating systems and platforms.</p>\n<h3>(iii) Interactive</h3>\n<p>Interactive mode is a command line shell which gives immediate feedback for each\nstatement, while running previously fed statements in active memory.</p>\n<h3>(iv) Object Oriented.</h3>\n<p>Object-oriented Programming is a programming paradigm that uses objects\nand classes in programming. It aims to implement real-world entities like\ninheritance, polymorphisms, encapsulation, etc. in the programming.</p>\n<h2>12. Write in brief about characters set of Python.</h2>\n<p>The character set is a set of alphabets, letters, symbols and some special\ncharacters that are valid in Python programming language.</p>\n<h3>Keywords</h3>\n<ul>\n<li>Python keywords are reserved word with that have special meaning and\nfunction.</li>\n<li>Keywords should not be used as variable name, constant, function name, or\nidentifier in the program code.</li>\n<li>Example: <code>and</code>, <code>as</code>, <code>assert</code>, <code>break</code> and many more.</li>\n</ul>\n<h2>13. Write in brief about any five keywords in Python.</h2>\n<ol>\n<li><code>True</code> - is used as the Boolean true value in Python code.</li>\n<li><code>False</code> - is used as the Boolean false value in Python code.</li>\n<li><code>break</code> - is used to break the loop.</li>\n<li><code>def</code> - is used to define the function in Python.</li>\n<li><code>while</code> - is used to make while loop in Python.</li>\n</ol>\n<h2>15. What is the role of indentation in Python?</h2>\n<ul>\n<li>A code block starts with indentation and ends with first unindented line.</li>\n<li>The amount of indention is up to us, but it must be consistent throughout\nthat block.</li>\n</ul>\n<h2>16. How to comment specific line(s) in Python program?</h2>\n<ul>\n<li>Comments are created by beginning a line with hash (#) character.</li>\n</ul>\n<h2>17. What is variable? What are the rules and conventions for declaring a variables?</h2>\n<ul>\n<li>A variable is like a container that stores values that we can access or\nchange.</li>\n<li>Example:<pre><code class=\"language-python\">name = &quot;Jone Nuts&quot;\n</code></pre>\n</li>\n<li>Basic rules to declare variables:\n<ul>\n<li>A variable name must start with a letter or the underscore character</li>\n<li>A variable name cannot start with a number</li>\n<li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li>\n<li>Variable names are case-sensitive (age, Age and AGE are three different variables)</li>\n</ul>\n</li>\n</ul>\n<h2>18. What are the various data types available in Python programming.</h2>\n<h3>Numbers</h3>\n<ul>\n<li>Number data types store numeric values.</li>\n<li>Python 3 types of number category:\n<ul>\n<li>Integers</li>\n<li>Floating Point Numbers</li>\n<li>Complex Numbers</li>\n</ul>\n</li>\n</ul>\n<h4>Integers(int)</h4>\n<ul>\n<li>An int data type represents an integer number.</li>\n<li>An integer number is number without any decimal or fractional point.</li>\n</ul>\n<h4>Floating Point Numbers</h4>\n<ul>\n<li>The float data types represents that floating point number.</li>\n<li>The floating point number is number that contains a decimal point.</li>\n<li>Example: 0.1, -3.443</li>\n</ul>\n<h4>Complex Number</h4>\n<ul>\n<li>A complex number is a number that is written in the form of <code>a+bj</code>.</li>\n</ul>\n<h3>Boolean</h3>\n<ul>\n<li>Boolean represents the two values namely <code>False</code> and <code>True</code>.</li>\n<li>The true value is represented true as 1 and false as 0.</li>\n</ul>\n<h3>String</h3>\n<ul>\n<li>String is a collection of group of characters.</li>\n<li>String are identified as a contiguous set of characters enclosed in single\nquotes(’ ') or double quotes(&quot; &quot;).</li>\n<li>String can also can be define with <code>str()</code> function.</li>\n</ul>\n<h2>19. What are four built-in numeric data types in Python? Explain.</h2>\n<p>The built-in numeric data types are Numbers, Integers, Float and Complex\nNumber.</p>\n<h3>Numbers</h3>\n<ul>\n<li>Number data types store numeric values.</li>\n<li>Python 3 types of number category:\n<ul>\n<li>Integers</li>\n<li>Floating Point Numbers</li>\n<li>Complex Numbers</li>\n</ul>\n</li>\n</ul>\n<h3>Integers(int)</h3>\n<ul>\n<li>An int data type represents an integer number.</li>\n<li>An integer number is number without any decimal or fractional point.</li>\n</ul>\n<h3>Floating Point Numbers</h3>\n<ul>\n<li>The float data types represents that floating point number.</li>\n<li>The floating point number is number that contains a decimal point.</li>\n<li>Example: 0.1, -3.443</li>\n</ul>\n<h3>Complex Number</h3>\n<ul>\n<li>A complex number is a number that is written in the form of <code>a+bj</code>.</li>\n</ul>\n<h2>20. What is the difference between interactive mode and script mode of Python.</h2>\n<p>Python has two basic modes:</p>\n<ul>\n<li>Script mode</li>\n<li>Interactive mode</li>\n</ul>\n<h3>Script mode</h3>\n<p>The normal script mode is the mode where the scripted and finished <code>.py</code> files\nare run in the Python interpreter.</p>\n<h3>Interactive mode</h3>\n<p>The interactive mode is a command line shell which gives immediate feedback for\neach statement while running previously fed statements in active memory.</p>\n<h2>22. Define the following terms:</h2>\n<h3>(i) Identifier</h3>\n<ul>\n<li>A Python identifier is a name given to a function, class variable, module or\nother objects that is used in Python program.</li>\n<li>An identifier can a combination of uppercase letters, lowercase letters,\nunderscores, and digits.</li>\n<li>Example: <code>Name</code>, <code>myClass</code>, <code>Emp_Salary</code>, <code>var_1</code>, <code>_Address</code></li>\n</ul>\n<h3>(ii) Literal</h3>\n<ul>\n<li>A literal refers to the fixed value that directly appears in the program.</li>\n</ul>\n<h3>(iii) Data type</h3>\n<p>Data types are the classification or categorization of data items. It represents\nthe kind of value that tells what operations can be performed on a particular\ndata.</p>\n<h3>(iv) Tuple</h3>\n<ul>\n<li>Tuple is an ordered sequence of items same as list.</li>\n<li>Tuple is immutable cannot be modified unlike list.</li>\n<li>It is defined within parentheses () where items are separated by commas (,).</li>\n<li>Example:<pre><code class=\"language-python\">a = (10, 'abc', 32)\n</code></pre>\n</li>\n</ul>\n<h3>(v) List.</h3>\n<ul>\n<li>List is an ordered sequence of items.</li>\n<li>In list items separated by commas (,) are enclosed within brackets [].</li>\n<li>List are mutable which means that value of element of a list can be altered by\nusing index.</li>\n<li>Example:<pre><code class=\"language-python\">first = [10, 20, 30]\n</code></pre>\n</li>\n</ul>\n<h2>23. Explain dictionary data tune in detail</h2>\n<ul>\n<li>Dictionary is an unordered collection of key-value pairs.</li>\n<li>Dictionary is collection which is ordered*, changeable and do not allow\nduplicates.</li>\n<li>Dictionary are written with curly brackets, and have keys and values.</li>\n<li>Example:<pre><code class=\"language-python\">car = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }\n</code></pre>\n</li>\n</ul>\n<h2>Sets</h2>\n<ul>\n<li>Set items are unordered, unchangeable, and do not allow duplicate values.</li>\n<li>Set is defined by values separated by comma inside braces {}.</li>\n<li>Example:<pre><code class=\"language-python\">a = {5, 2, 3, 1, 4}\n</code></pre>\n</li>\n</ul>\n<h2>Difference between List, Set, Tuple, and Dictionary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>List</th>\n<th>Set</th>\n<th>Tuple</th>\n<th>Dictionary</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Mutable</td>\n<td>Mutable</td>\n<td>Mutable</td>\n<td>Immutable</td>\n<td>Mutable</td>\n</tr>\n<tr>\n<td>Order</td>\n<td>Ordered</td>\n<td>Unordered</td>\n<td>Ordered</td>\n<td>Ordered</td>\n</tr>\n<tr>\n<td>Can item be</td>\n<td>Replaced or Changed</td>\n<td>Can’t Replaced or Changed</td>\n<td>Can’t be Replaced or Changed</td>\n<td>Replace or Changed</td>\n</tr>\n</tbody>\n</table>\n<h2>String methods</h2>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>Explanation</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>upper</td>\n<td>Converts to uppercase</td>\n<td><code>x.upper()</code></td>\n</tr>\n<tr>\n<td>lower</td>\n<td>Converts to lowercase</td>\n<td><code>x.lower()</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>Capitalize the first letter of each word in a string</td>\n<td><code>x.title()</code></td>\n</tr>\n<tr>\n<td>find, index</td>\n<td>Search for the target in a string.</td>\n<td><code>x.find(&quot;hello&quot;)</code>, <code>index(&quot;hello&quot;)</code></td>\n</tr>\n<tr>\n<td>rfind, rindex</td>\n<td>Search for the target in a string</td>\n<td><code>x.xfind(&quot;hello&quot;)</code>, <code>x.xfind(&quot;hello&quot;)</code></td>\n</tr>\n<tr>\n<td>replace</td>\n<td>Replaces the target with new string</td>\n<td><code>r.replace(&quot;hello&quot;, &quot;word&quot;)</code></td>\n</tr>\n<tr>\n<td>strip, rstrip, lstrip</td>\n<td>Removes whitespace or other characters from the ends of a string.</td>\n<td><code>x.strip()</code></td>\n</tr>\n<tr>\n<td>encode</td>\n<td>Converts a Unicode string to a bytes object.</td>\n<td><code>x.encode(&quot;utf_8&quot;)</code></td>\n</tr>\n</tbody>\n</table>\n<h1>2. Python Operators and Control Flow Statements</h1>\n<h2>1. What is operator? Which operators used in Python?</h2>\n<ul>\n<li>An operator is a symbol which specifies a specifies a specific action.</li>\n<li>Operators are used to perform operations on variables and values.</li>\n<li>In python the operators can be unary operators or binary operator.</li>\n</ul>\n<h3>Unary Operators</h3>\n<ul>\n<li>Unary operators perform mathematical operation only on one operand.</li>\n<li>The example of unary operators are <code>+</code>, <code>-</code>, <code>~</code>.</li>\n</ul>\n<h3>Binary Operators</h3>\n<ul>\n<li>Binary operators are operators that require two operands to perform any\nmathematical operation.</li>\n<li>Example of Binary operators are <code>**</code>, <code>/</code>, <code>%</code>, <code>+</code>, <code>-</code>.</li>\n</ul>\n<h2>2. What is meant by control flow of a program?</h2>\n<ul>\n<li>A program’s control flow is the order in which the program’s code executes.</li>\n<li>The control flow of a Python program is regulated by conditional statements,\nloops, and function calls.</li>\n</ul>\n<h2>3. Define the terms:</h2>\n<h3>(i) Loop</h3>\n<p>A loop statement allows us to execute a statement or group of statements\nmultiple times, this is called loop.</p>\n<h3>(ii) Program</h3>\n<p>A program is a sequence of statements that have been crafted to do something.</p>\n<h3>(iii) Operator</h3>\n<p>Unary operators perform mathematical operation only on one operand.</p>\n<h3>(iv) Control flow.</h3>\n<p>A program’s control flow is the order in which the program’s code executes.</p>\n<h2>4. What are the different loops available in Python?</h2>\n<ul>\n<li>There are 4 types of loops available in Python:\n<ul>\n<li><code>while</code> loop</li>\n<li><code>for</code> loop</li>\n<li>Nested <code>for</code> and <code>while</code> loop</li>\n<li><code>do..while</code> loop</li>\n</ul>\n</li>\n</ul>\n<h2>5. What happens if a semicolon (;) is placed at the end of a Python statement?</h2>\n<p>In Python a semicolon works as a separated between statements and not as a\nterminator of statements.</p>\n<h2>6. Explain about different logical operators in Python with appropriate examples.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AND</td>\n<td>If both the values are true then condition becomes true</td>\n<td>(a and b) is False</td>\n</tr>\n<tr>\n<td>Or</td>\n<td>If any of two values are true then condition becomes true</td>\n<td>(a or b) is True</td>\n</tr>\n<tr>\n<td>Not</td>\n<td>Used to reverse the local state of its value</td>\n<td>not(a and b) is True</td>\n</tr>\n</tbody>\n</table>\n<h2>7. Explain about different relational operators in Python with examples.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>Equal</td>\n<td>x == y</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>Not equal</td>\n<td>x != y</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>Greater than</td>\n<td>x &gt; y</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>Less than</td>\n<td>x &lt; y</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>Greater than or equal to</td>\n<td>x &gt;= y</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>Less than or equal to</td>\n<td>x &lt;= y</td>\n</tr>\n</tbody>\n</table>\n<h2>8. Explain about membership operators in Python.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>True if value in list or in sequence</td>\n<td>(‘H’ in x) is True</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>False if value not in list or in sequence</td>\n<td>(‘H’ in x) is False</td>\n</tr>\n</tbody>\n</table>\n<h2>9. Explain about Identity operators in Python with appropriate examples.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>True if the variable on either side points to the same object</td>\n<td>(a is b) is False</td>\n</tr>\n<tr>\n<td>is not</td>\n<td>False if the variable on either side points to the same object</td>\n<td>(a is not b) is False</td>\n</tr>\n</tbody>\n</table>\n<h2>10. Explain about arithmetic operators in Python.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+</td>\n<td>Addition</td>\n<td>x + y</td>\n</tr>\n<tr>\n<td>-</td>\n<td>Subtraction</td>\n<td>x - y</td>\n</tr>\n<tr>\n<td>*</td>\n<td>Multiplication</td>\n<td>x * y</td>\n</tr>\n<tr>\n<td>/</td>\n<td>Division</td>\n<td>x / y</td>\n</tr>\n<tr>\n<td>%</td>\n<td>Modulus</td>\n<td>x % y</td>\n</tr>\n<tr>\n<td>**</td>\n<td>Exponentiation</td>\n<td>x ** y</td>\n</tr>\n<tr>\n<td>//</td>\n<td>Floor division</td>\n<td>x // y</td>\n</tr>\n</tbody>\n</table>\n<h2>11. List different conditional statements in Python.</h2>\n<p>Python conditional statements includes:</p>\n<ul>\n<li><code>if</code></li>\n<li><code>if-else</code></li>\n<li><code>nested-if</code></li>\n<li><code>if-elif-else</code></li>\n</ul>\n<h2>12. What are the different nested loops available in Python?</h2>\n<ul>\n<li>There are two types of nested loop <code>while</code> and <code>for</code> loop.</li>\n</ul>\n<pre><code class=\"language-python\"># for loop\nfor i in range(1, 5):\n  for j in range(1, (i+1)):\n    print(j, end=' ')\n  print()\n\n# while loop\ni = 1\nwhile i &lt; 5:\n  j = 1\n  while j &lt; (i+1):\n    print(j, end=' ')\n    j = j + 1\n  i = i + 1\n  print()\n</code></pre>\n<h2>13. What are the different loop control (manipulation) statements available in Python? Explain with suitable examples.</h2>\n<p>There three loop control statements available in Python:</p>\n<ul>\n<li><code>break</code></li>\n<li><code>continue</code></li>\n<li><code>pass</code></li>\n</ul>\n<pre><code class=\"language-python\">for i in range(1, 11):\n  if i%2 == 0:\n    pass\n  if i%3 == 0;\n    continue\n  if i%4 == 0;\n    break\n</code></pre>\n<h2>14. Explain if-else statement with an example.</h2>\n<ul>\n<li><code>if</code> statements executes when the conditions following if is true and it does\nnoting when the conedition is <code>false</code>.</li>\n<li>The <code>if-else</code> statement takes care of a <code>true</code> as well as <code>false</code> condition.</li>\n</ul>\n<pre><code class=\"language-python\">i = 20\nif (i &lt; 15):\n  print(&quot;i is less then 15&quot;)\nelse:\n  print(&quot;i is greater then 15&quot;)\n</code></pre>\n<h2>15. Explain continue statement with an example.</h2>\n<p>The continue statement in Python returns the control to the beginning of the\nwhile loop.</p>\n<pre><code class=\"language-python\">i = 0\nwhile i &lt; 10:\n  i = i + 1\n  if i == 5:\n    continue\n</code></pre>\n<h2>16. Explain use of break statement in a loop with example.</h2>\n<p>The <code>break</code> statement in Python terminates the current loop and resumes\nececution at next statement.</p>\n<pre><code class=\"language-python\">i = 0\nwhile i&lt;10:\n  i=i+1\n  if i == 5:\n    break\n  print(&quot;i = &quot;, i)\n</code></pre>\n<h2>17. Predict output and justify your answer:</h2>\n<h3>(i) -11 % 9</h3>\n<pre><code>&gt;&gt;&gt; print(-11 % 9)\n-2\n</code></pre>\n<h3>(ii) 7.7 // 7</h3>\n<pre><code>&gt;&gt;&gt; print(7.7 // 7)\n1.0\n</code></pre>\n<h3>(iii) (200 - 70) * 10 / 5</h3>\n<pre><code>&gt;&gt;&gt; print((200 - 70) * 10 / 5)\n260.0\n\n</code></pre>\n<h3>(iv) 5 * 1 ** 2</h3>\n<pre><code>&gt;&gt;&gt; print(5 * 1 ** 2)\n5\n</code></pre>\n<h2>18. What the difference is between == and is operator in Python?</h2>\n<ul>\n<li><code>=</code> - if the values of operands are equal, then the condition becomes true.</li>\n<li><code>is</code> - return true, if the variables on either side of  the operator point to\nsame object.</li>\n</ul>\n<h2>19. List different operators in Python, in the order of their precedence.</h2>\n<table>\n<thead>\n<tr>\n<th>Operators</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Arithmetic Operators</td>\n<td>a + b</td>\n</tr>\n<tr>\n<td>Assignment Operators</td>\n<td>c = a + b</td>\n</tr>\n<tr>\n<td>Comparison Operators</td>\n<td>a == b</td>\n</tr>\n<tr>\n<td>Logical Operators</td>\n<td>a and b</td>\n</tr>\n<tr>\n<td>Bitwise Operators</td>\n<td>a &amp; b</td>\n</tr>\n<tr>\n<td>Identity Operators</td>\n<td>a = 3</td>\n</tr>\n<tr>\n<td>Membership Operators</td>\n<td>a in b</td>\n</tr>\n</tbody>\n</table>\n<h2>20. Write a Python program to print factorial of a number. Take input from user.</h2>\n<h2>21. Write a Python program to calculate area of triangle and circle and print the result.</h2>\n<h2>22. Write a Python program to check whether a string is palindrome.</h2>\n<h2>23. Write a Python program to print Fibonacci series up to n terms.</h2>\n<pre><code class=\"language-python\">num = int(input(&quot;Enter a num: &quot;))\nx = 0\ny = 1\n\nif num &lt; 0:\n  print(&quot;Invalid term&quot;)\nelse:\n  for i in range(num):\n    print(x)\n    z = x + y\n    x = y\n    y = z\n</code></pre>\n<p>O/P</p>\n<pre><code>Enter a num: 3\n0\n1\n1\n</code></pre>\n<h2>24. Write a Python program to print all prime numbers less than 256.</h2>\n<pre><code class=\"language-python\">num = int(input(&quot;Enter number: &quot;)\nfor n in range(2, num):\n  if n % 1 == 0:\n    break\n  else:\n    print(n)\n</code></pre>\n<h2>25. Write a Python program to find the best of two test average marks out of three test’s mark accepted from the user.</h2>\n<h2>Assignment Operator</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Example</th>\n<th>Same As</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td>x = 5</td>\n<td>x = 5</td>\n</tr>\n<tr>\n<td>+=</td>\n<td>x += 3</td>\n<td>x = x + 3</td>\n</tr>\n<tr>\n<td>-=</td>\n<td>x -= 3</td>\n<td>x = x - 3</td>\n</tr>\n<tr>\n<td>*=</td>\n<td>x *= 3</td>\n<td>x = x * 3</td>\n</tr>\n<tr>\n<td>/=</td>\n<td>x /= 3</td>\n<td>x = x / 3</td>\n</tr>\n<tr>\n<td>%=</td>\n<td>x %= 3</td>\n<td>x = x % 3</td>\n</tr>\n<tr>\n<td>//=</td>\n<td>x //= 3</td>\n<td>x = x // 3</td>\n</tr>\n<tr>\n<td>**=</td>\n<td>x **= 3</td>\n<td>x = x ** 3</td>\n</tr>\n<tr>\n<td>&amp;=</td>\n<td>x &amp;= 3</td>\n<td>x = x &amp; 3</td>\n</tr>\n<tr>\n<td>|=</td>\n<td>x |= 3</td>\n<td>x = x | 3</td>\n</tr>\n<tr>\n<td>^=</td>\n<td>x ^= 3</td>\n<td>x = x ^ 3</td>\n</tr>\n<tr>\n<td>&gt;&gt;=</td>\n<td>x &gt;&gt;= 3</td>\n<td>x = x &gt;&gt; 3</td>\n</tr>\n<tr>\n<td>&lt;&lt;=</td>\n<td>x &lt;&lt;= 3</td>\n<td>x = x &lt;&lt; 3</td>\n</tr>\n</tbody>\n</table>\n<h2>Relational or Comparison Operators</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>Equal</td>\n<td>x == y</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>Not equal</td>\n<td>x != y</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>Greater than</td>\n<td>x &gt; y</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>Less than</td>\n<td>x &lt; y</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>Greater than or equal to</td>\n<td>x &gt;= y</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>Less than or equal to</td>\n<td>x &lt;= y</td>\n</tr>\n</tbody>\n</table>\n<h2>Bitwise Operators</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&amp;</td>\n<td>AND</td>\n<td>Sets each bit to 1 if both bits are 1</td>\n</tr>\n<tr>\n<td>|</td>\n<td>OR</td>\n<td>Sets each bit to 1 if one of two bits is 1</td>\n</tr>\n<tr>\n<td>^</td>\n<td>XOR</td>\n<td>Sets each bit to 1 if only one of two bits is 1</td>\n</tr>\n<tr>\n<td>~</td>\n<td>NOT</td>\n<td>Inverts all the bits</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>Zero fill left shift</td>\n<td>Shift left by pushing zeros in from the right and let the leftmost bits fall off</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>Signed right shift</td>\n<td>Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off</td>\n</tr>\n</tbody>\n</table>\n<h1>3. Data Structures in Python</h1>\n<h2>1. What is data structure? Which data structure used by Python?</h2>\n<ul>\n<li>A data structure is specialized format for organizing and storing data, so\nthat various operations can be performed on it easily.</li>\n<li>Python use data structure like list, tuple, dictionary.</li>\n</ul>\n<h2>2. How to define and access the elements of list?</h2>\n<ul>\n<li>A list is created by placing all the items inside a square brackets [],\nseparated by commas.</li>\n<li>Example of define the list:<pre><code class=\"language-python\">li = [&quot;Hello&quot;, 50]\n</code></pre>\n</li>\n<li>To access values in lists, use the square brackets for slicing along with the\nindex or indices to obtain value available at that index.<pre><code class=\"language-python\">li = [&quot;Hello&quot;, 50]\nprint(li[1])\n</code></pre>\nO/P<pre><code>50\n</code></pre>\n</li>\n</ul>\n<h2>3. What is list? How to create list?</h2>\n<ul>\n<li>List are used to store multiple items in single variable.</li>\n<li>List are created using square brackets.</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;Hello&quot; , 50]\n</code></pre>\n</li>\n</ul>\n<h2>4. What are the different operation that can be performed on a list? Explain with examples</h2>\n<ul>\n<li><code>append()</code> - is used to add elements at the end of the list.</li>\n<li><code>extend()</code> - is used to add more then one element at the end of the list.</li>\n<li><code>insert()</code> - can add an element at a given position in the list.</li>\n<li><code>remove()</code> - is used to remove an element form the list.</li>\n<li><code>pop()</code> - can remove an element from any position in the list.</li>\n<li><code>reverse()</code> - is used to reverse the element of the list.</li>\n<li><code>len()</code> - returns the length of the list.</li>\n<li><code>min()</code> - returns the minimum value in the list.</li>\n<li><code>max()</code> - returns the maximum value in the list.</li>\n<li><code>count()</code> - returns the number of occurrence of given element in the list.</li>\n<li><code>index()</code> - returns the position of the first occurrence.</li>\n<li><code>sort()</code> - sorts the list.</li>\n<li><code>clear()</code> - erases all the elements.</li>\n<li><strong>slice</strong> - is used to print a section of the list.</li>\n<li><strong>concatenate</strong> - is used to merge two lists and return a single list.</li>\n<li><strong>multiply</strong> - the list <em>n</em> times.\nExample:</li>\n</ul>\n<pre><code class=\"language-python\">li = [&quot;Hello&quot;, &quot;World&quot;]\nli.append(&quot;Bye&quot;)\nli.extend([&quot;World&quot;, &quot;Forever&quot;])\nli.insert(0, &quot;Bye&quot;)\nli.remove(&quot;World&quot;)\nli.pop(0)\nli.reverse()\nlen(li)\nmax(li)\nli.count(&quot;o&quot;)\nli.index(&quot;Forever&quot;)\nli.sort()\nli.clear()\n</code></pre>\n<p>O/P</p>\n<pre><code>['Hello', 'World']\n['Hello', 'World', 'Bye']\n['Hello', 'World', 'Bye', 'World', 'Forever']\n['Bye', 'Hello', 'World', 'Bye', 'World', 'Forever']\n['Bye', 'Hello', 'Bye', 'World', 'Forever']\n['Hello', 'Bye', 'World', 'Forever']\n['Forever', 'World', 'Bye', 'Hello']\n4\nWorld\n0\n0\n['Bye', 'Forever', 'Hello', 'World']\n[]\n</code></pre>\n<h2>5. Explain any two methods under lists in Python with examples.</h2>\n<h3><code>append()</code></h3>\n<ul>\n<li>Is used to add elements at the end of the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.append(item)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;Hello&quot;, 30]\nli.append(&quot;World&quot;)\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;Hello&quot;, 30, &quot;World&quot;]\n</code></pre>\n</li>\n</ul>\n<h3><code>extend()</code></h3>\n<ul>\n<li>Is used to add more then one element at the end of the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.extend(list2)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;Hello&quot;, &quot;World&quot;]\nli2 = [&quot;What's&quot;, &quot;Up&quot;]\nli.extend(li2)\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;Hello&quot;, &quot;World&quot;, &quot;What's&quot;, &quot;Up&quot;]\n</code></pre>\n</li>\n</ul>\n<h2>6. Write a python program to describe different ways of deleting an element form the given List.</h2>\n<p><code>remove()</code> - is used to remove an element form the list.</p>\n<pre><code class=\"language-python\">li = [&quot;Hello&quot;, &quot;World&quot;]\nli.remove(&quot;Hello&quot;)\nprint(li)\n</code></pre>\n<p>O/P</p>\n<pre><code>World\n</code></pre>\n<h2>7. What is tuple in Python? How to create and access it?</h2>\n<ul>\n<li>Tuple is an ordered sequence of items same as list.</li>\n<li>Tuple is immutable cannot be modified unlike list.</li>\n<li>It is defined within parentheses () where items are separated by commas (,).</li>\n<li>To access values in tuple, use the square brackets[].</li>\n<li>Example:<pre><code class=\"language-python\">a = (10, 'abc', 32)\nprint(a[0])\n</code></pre>\nO/P<pre><code>10\n</code></pre>\n</li>\n</ul>\n<h2>8. What are mutable and immutable types?</h2>\n<ul>\n<li><strong>Mutable</strong> - is when something is changeable or has the ability to change.</li>\n<li><strong>Immutable</strong> - when no change is possible over time.</li>\n</ul>\n<h2>9. Is tuple mutable? Demonstrate any two methods of tuple.</h2>\n<ul>\n<li>Tuple is immutable that means it can’t be changed or replace.</li>\n<li><code>max()</code> - Returns item from the tuple with max value.</li>\n<li><code>min()</code> Return item from the tuple with min value.</li>\n</ul>\n<pre><code class=\"language-python\">a = (10, 32, 3)\nmax(a)\nmin(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>10\n3\n</code></pre>\n<h2>10. Write in brief about Tuple in Python. Write operations with suitable examples</h2>\n<ul>\n<li>Tuple is an ordered sequence of items same as list.</li>\n<li>Tuple is immutable cannot be modified unlike list.</li>\n<li>It is defined within parentheses () where items are separated by commas (,).</li>\n<li>To access values in tuple, use the square brackets[].</li>\n</ul>\n<h3>Tuple Operations</h3>\n<ul>\n<li>We can use + operator to combine two tuples.</li>\n<li>We can also repeat elements by using the * operator.</li>\n<li>We can test if an item exist in tuple or not.</li>\n<li>Iteration over a tuple specifies the way.</li>\n</ul>\n<pre><code class=\"language-python\">t1 = (1, 2)\nt2 = (3, 4)\n\nprint(t1 + t2)\nprint(t1 * 2)\nprint(1 in t1)\n\nfor t in t1:\n  print(t)\n</code></pre>\n<p>O/P</p>\n<pre><code>(1, 2, 3, 4)\n(1, 2, 1, 2)\nTrue\n1\n2\n</code></pre>\n<h2>11. Write in brief about Set in Python. Write operations with suitable example.</h2>\n<ul>\n<li>Set items are unordered, unchangeable, and do not allow duplicate values.</li>\n<li>Set is defined by values separated by comma inside braces {}.</li>\n<li>To access values in set, use the square brackets[].</li>\n</ul>\n<pre><code class=\"language-python\">a = {5, 2, 3, 1, 4}\na[1]\n</code></pre>\n<h2>12. Explain the properties of dictionary keys.</h2>\n<ul>\n<li>Dictionary values have no restrictions.</li>\n<li>They can be any arbitrary Python object, either standard objects or\nuser-defined objects.</li>\n<li>However, same is not true for the keys, more then one entry per key not\nallowed.</li>\n</ul>\n<h2>13. Explain directory methods in Python.</h2>\n<ul>\n<li><code>clear()</code> - removes all the elements from the dictionary.</li>\n<li><code>copy()</code> - returns a copy of the dictionary.</li>\n<li><code>fromkeys()</code> - the <code>fromkeys()</code> method creates a new dictionary with default\nvalue or all specified keys.</li>\n<li><code>gets()</code> - returns the value of the specified key.</li>\n<li><code>item()</code> - returns a list containing a tuple for each key value pair.</li>\n<li><code>keys()</code> - returns a list containing the dictionary’s keys.</li>\n<li><code>pop()</code> - removes the element with the specified key.</li>\n<li><code>popitem()</code> - removes the last inserted key-value pair.</li>\n<li><code>setdefault()</code> - returns the value of the specified key.</li>\n<li><code>update()</code> - Updates the dictionary with the specified key.</li>\n<li><code>values()</code> - returns a list of all the values in the dictionary.</li>\n</ul>\n<h2>14. How to create directory in Python? Give example.</h2>\n<ul>\n<li>Dictionary are written with curly brackets, and have keys and values.</li>\n</ul>\n<pre><code class=\"language-python\">d = { &quot;name&quot;: &quot;Jone&quot;, &quot;age&quot;: 30 }\nprint(d)\n</code></pre>\n<p>O/P</p>\n<pre><code>{ &quot;name&quot;: &quot;Jone&quot;, &quot;age&quot;: 30 }\n</code></pre>\n<h2>15. Write in brief about Dictionary in Python. Write operation with suitable examples.</h2>\n<ul>\n<li>Dictionary is an unordered collection of key-value pairs.</li>\n<li>Dictionary is collection which is ordered*, changeable and do not allow\nduplicates.</li>\n<li>Dictionary are written with curly brackets, and have keys and values.</li>\n<li>Example:<pre><code class=\"language-python\">car = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }\n</code></pre>\n</li>\n</ul>\n<h3>Operation of Dictionary</h3>\n<pre><code class=\"language-python\">d = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }\nprint(&quot;brand&quot; in d)\n\nfor i in d:\n  print(i, d[i])\n</code></pre>\n<p>O/P</p>\n<pre><code>True\nbrand Ford\nmodel Mustang\nyear 1264\n</code></pre>\n<h2>16. What is the significant difference between list and dictionary?</h2>\n<h3>List</h3>\n<ul>\n<li>List is collection of index values pairs.</li>\n<li>List is created by placing elements in [] separated by commas “,”.</li>\n<li>We can access the elements using the index value.</li>\n<li>List are mutable.</li>\n<li>List is created using <code>list()</code> function.</li>\n</ul>\n<h3>Dictionary</h3>\n<ul>\n<li>Dictionary is collection of key-value pairs.</li>\n<li>All key-value go inside brackets{} separated by a comma.</li>\n<li>The keys in dictionary are of any given data type.</li>\n<li>We can access the elements using the keys.</li>\n<li>Dictionaries are mutable, but keys don’t allow duplicates.</li>\n<li>Dictionary object is created using <code>dict()</code> function.</li>\n</ul>\n<h2>17. Compare List and Tuple.</h2>\n<h3>List</h3>\n<ul>\n<li>Lists are mutable.</li>\n<li>The list is better for performing operations.</li>\n<li>Lists consume more memory.</li>\n<li>More likely error will occur.</li>\n</ul>\n<h3>Tuple</h3>\n<ul>\n<li>Tuples are immutable.</li>\n<li>The implication of iterations is faster.</li>\n<li>Tuple consume less memory.</li>\n<li>Less likely error will occur.</li>\n</ul>\n<h2>19. How append() and extend() are different with reference to list in Python?</h2>\n<h3><code>append()</code></h3>\n<ul>\n<li>Append uses <code>.append()</code> to add element at end of the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.append(&quot;hello&quot;)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;hello&quot;, &quot;world&quot;]\nli.append(&quot;bye&quot;)\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;hello&quot;, &quot;world&quot;, &quot;bye&quot;]\n</code></pre>\n</li>\n</ul>\n<h3><code>extend()</code></h3>\n<ul>\n<li>Extend uses <code>.extend()</code> to add multiple elements to the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.extend([&quot;hello&quot;, &quot;world&quot;])\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;hello&quot;, &quot;world&quot;]\nli.extend([&quot;bye&quot;, &quot;world&quot;]\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;hello&quot;, &quot;world&quot;, &quot;bye&quot;, &quot;world&quot;]\n</code></pre>\n</li>\n</ul>\n<h2>20. Write a program to input any two tuples and interchange the tuple variable.</h2>\n<pre><code class=\"language-python\">a = 1\nb = 2\n(a, b) = (b, a)\nprint(&quot;a =&quot;, a, &quot;b =&quot;, b)\n</code></pre>\n<p>O/P</p>\n<pre><code>a = 2 b = 1\n</code></pre>\n<h2>21. Write a Python program to multiply two matrices</h2>\n<h2>22. Write a Python code to get the following dictionary as output: <code>{1:1, 3:9, 5:25, 7:49, 9:81}</code></h2>\n<pre><code class=\"language-python\">di = {1:1, 3:9, 5:25, 7:49, 9:81}\nprint(di)\n</code></pre>\n<p>O/P</p>\n<pre><code>{1:1, 3:9, 5:25, 7:49, 9:81}\n</code></pre>\n<h2>23. Write the output for the following:</h2>\n<pre><code>&gt;&gt;&gt;a=[1,2,3]\n&gt;&gt;&gt;b=[4,5,6]\n&gt;&gt;&gt;c=a+b\n[1, 2, 3, 4, 5, 6]\n&gt;&gt;&gt;[1,2,3]*3\n[1, 2, 3, 1, 2, 3, 1, 2, 3]\n&gt;&gt;&gt;t=['a', 'b', 'c', 'd', 'e', 'f']\n&gt;&gt;&gt;t[1:3]=['x', 'y']\n&gt;&gt;&gt;print(t)\n['a', 'x', 'y', 'd', 'e', 'f']\n</code></pre>\n<h2>24. Give the output of Python code:</h2>\n<pre><code>Str=&quot;Maharashtra State Board of Technical Education'\nprint(x[15::1])\nprint(x[-10:-1:2])\n</code></pre>\n<p>O/P</p>\n<pre><code>te Board of Technical Education\n dcto\n</code></pre>\n<h2>25. Give the output of following Python code:</h2>\n<pre><code>t=(1,2,3, (4,), [5,6])\nprint(t[3])\nt[4][0]=7\nprint(t)\n</code></pre>\n<p>O/P</p>\n<pre><code>(4,)\n(1, 2, 3, (4,), [7, 6])\n</code></pre>\n<h2>26. Write the output for the following if the variable fruit=“banana”:</h2>\n<pre><code>&gt;&gt;&gt;fruit[:3]    o/p='ban'\n&gt;&gt;&gt;fruit[3:]    o/p='ana'\n&gt;&gt;&gt;fruit[3:3]   o/p=' '\n&gt;&gt;&gt;fruit[:]     o/p='banana'\n</code></pre>\n<h2>27. What is string? How to create it? Enlist various operations on strings.</h2>\n<ul>\n<li>String is a collection of group of characters.</li>\n<li>String are identified as a contiguous set of characters enclosed in single\nquotes(’ ') or double quotes(&quot; &quot;).</li>\n<li>String can also can be define with <code>str()</code> function.</li>\n</ul>\n<pre><code class=\"language-python\">s1 = &quot;Hello World&quot;\n\nprint(s1[0])         # String indices and accessing string\nprint(&quot;Hello&quot; in s1) # 'in' and 'not in' operator\nprint(s1[1:])        # String slicing\nprint(s1&gt;&quot;Hello&quot;)    # String comparison\n</code></pre>\n<p>O/P</p>\n<pre><code>H\nTrue\nello World\nTrue\n</code></pre>\n<h1>5. Object Oriented Programming in Python</h1>\n<h2>1. What is OOP?</h2>\n<h2>2. List the features and explain about different Object Oriented features supported by Python.</h2>\n<h2>3. List and explain built in class attributes with example.</h2>\n<h2>4. Design a class that store the information of student and display the same.</h2>\n<h2>5. What are basic overloading methods?</h2>\n<h2>6. What is method overriding? Write an example.</h2>\n<h2>7. Explain class inheritance in Python with an example.</h2>\n<h2>8. How to declare a constructor method in python? Explain.</h2>\n<h2>9. How operator overloading can be implemented in Python? Give an example.</h2>\n<h2>10. Write a Python program to implement the concept of inheritance.</h2>\n<h2>11. Create a class employee with data members: name, department and salary. Create suitable methods for reading and printing employee information.</h2>\n<h2>12. What is data abstraction? Explain in detail. 13. Define the following terms:</h2>\n<h3>(1) Object</h3>\n<h3>(ii) Class</h3>\n<h3>(iii) Inheritance</h3>\n<h3>(iv) Data abstraction.</h3>\n<h2>14. Describe the term composition classes with example.</h2>\n<h2>15. Explain customization via inheritance specializing inherited methods.</h2>\n<h1>6. File I/O Handling and Exception Handling</h1>\n<h2>1. What is file? Enlist types of files in Python programming.</h2>\n<ul>\n<li>File is a named location on disk to store related information.</li>\n<li>It is used to permanently store data in a volatile memory.</li>\n<li>Files are divided into following two categories:\n<ol>\n<li>Text Files</li>\n<li>Binary files</li>\n</ol>\n</li>\n</ul>\n<h3>Text Files</h3>\n<ul>\n<li>Text files are simple texts in human readable format.</li>\n<li>A text file is structured as sequence of lines of text.</li>\n</ul>\n<h3>Binary Files</h3>\n<ul>\n<li>Binary files have binary data which is understood by the computer.</li>\n</ul>\n<h2>2. What is exception?</h2>\n<p>An exception is also called as runtime error that can halt the execution of the\nprogram.</p>\n<h2>3. Explain the term exception handling in detail.</h2>\n<ul>\n<li>Python provides a Exception handling for handling any unreported errors in\nprogram.</li>\n<li>By handling the exception, we can provide a meaning full message to the user\nabout the problem.</li>\n</ul>\n<h2>4. Explain different modes of opening a file.</h2>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>Opens a file for reading.</td>\n</tr>\n<tr>\n<td>w</td>\n<td>Opens a file for writing.</td>\n</tr>\n<tr>\n<td>x</td>\n<td>Opens a file for exclusive creation. If the file already exists, the operation fails.</td>\n</tr>\n<tr>\n<td>a</td>\n<td>Opens a file for appending at the end of the file without truncating it.  Creates a new file if it does not exist.</td>\n</tr>\n<tr>\n<td>t</td>\n<td>Opens in text mode.</td>\n</tr>\n<tr>\n<td>b</td>\n<td>Opens in binary mode.</td>\n</tr>\n<tr>\n<td>+</td>\n<td>Opens a file for updating (reading and writing)</td>\n</tr>\n</tbody>\n</table>\n<h2>5. Write the syntax of <code>fopen()</code> with example.</h2>\n<ul>\n<li>Syntax:<pre><code class=\"language-python\">f = open(&quot;filename&quot;, &quot;modes&quot;)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">o = open(&quot;text.txt&quot;, &quot;w&quot;)\no.write(&quot;Hello World&quot;)\no.close()\n\no = open(&quot;text.txt&quot;, &quot;r&quot;)\nprint(o.read())\no.close()\n</code></pre>\nO/P<pre><code>Hello World\n</code></pre>\n</li>\n</ul>\n<h2>6. What are various modes of file object? Explain any five as them.</h2>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>Opens a file for reading.</td>\n</tr>\n<tr>\n<td>w</td>\n<td>Opens a file for writing.</td>\n</tr>\n<tr>\n<td>x</td>\n<td>Opens a file for exclusive creation. If the file already exists, the operation fails.</td>\n</tr>\n</tbody>\n</table>\n<h2>7. Explain exception handling with example using try, except, raise keywords.</h2>\n<ul>\n<li>Exception handling for handling any unreported errors in program.</li>\n<li>By handling the exception, we can provide a meaningful message to the user\nabout the problem rather then system generated error message.</li>\n</ul>\n<pre><code class=\"language-python\">age = int(input(&quot;Enter your age: &quot;))\n\ntry:\n  if age &lt; 18:\n    raise Exception;\nexcept Exception:\n  print(&quot;You are not 18&quot;)\n\n</code></pre>\n<p>O/P</p>\n<pre><code>Enter your age: 16\nYou are not 18\n</code></pre>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Notes&description=1.%20Introduction%20and%20Syntax%20of%20Python%20Program%203.%20Enlist%20applications%20for%20Python%20programming.%20Python%20is%20often%20used%20as%20a%20support%20language%20for%20software%20developers,%20for%20build%20control%20and%20management,%20testing,%20and%20in%20many%20other%20ways.%204.%20What%20are%20the%20features%20of%20Python?%20%20Easy%20to%20learn%20an&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/practical-s6.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/practical-s6.html",
      "title": "Practical S6",
      "content_html": "<h1>Python practical question bank solved</h1>\n<h2>1) WAP to create 3x3 matrix with 1 at the border and zero inside.</h2>\n<pre><code class=\"language-python\">import numpy as n\na=n.ones((3, 3))\na[1:-1,1:-1]=0\nprint(a)\n</code></pre>\n<p>Output</p>\n<pre><code>[[1. 1. 1.]\n [1. 0. 1.]\n [1. 1. 1.]]\n</code></pre>\n<h2>2) WAP to calculate area of circle and area of rectangle using abstract class.</h2>\n<pre><code class=\"language-python\">from abc import ABC, abstractmethod\nclass test(ABC):\n    @abstractmethod\n    def area(self):\n        pass\nclass Rec(test):\n    def area(self):\n        self. l=4\n        self. b=2\n        print(self.l*self.b)\nclass Cir(test):\n    def area(self):\n        self.r=5\n        print(3.14*self.r*self.r)\nR=Rec()\nR. area()\nC=Cir()\nC. area()\n</code></pre>\n<p>Output</p>\n<pre><code>8\n78.5\n</code></pre>\n<h2>3) WAP to create dictionary where key is 1 to 10 and value is square of 1 to 10.</h2>\n<pre><code class=\"language-python\">a=dict()\nfor i in range(1,11):\n    a[i]=i**2\nprint(a)\n</code></pre>\n<p>Output\n<code>{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100}</code></p>\n<h2>4) WAP to display result using inheritance.</h2>\n<pre><code class=\"language-python\">class Student:\n    def accept(self):\n        self. name=input(&quot;Name:&quot;)\nclass Test:\n    def marks(self):\n        self. m1=int(input(&quot;M1:&quot;))\n        self. m2=int(input(&quot;M2:&quot;))\nclass Result(Student, Test):\n    def total(self):\n        self. t=self.m1+self.m2\n    def disp(self):\n        print(self.name)\n        print(self.t)\nr=Result()\nr. accept()\nr. marks()\nr. total()\nr. disp()\n</code></pre>\n<p>Output</p>\n<pre><code>Name:ramesh\nM1:80\nM2:70\nramesh\n150\n</code></pre>\n<h2>5) WAP to remove duplicates from dictionary.</h2>\n<pre><code class=\"language-python\">d={1:20, 1:20, 2:30}\nres={}\nfor x, y in d. items() :\n    if y not in d. items() :\n        res[x]=y\nprint(res)\n</code></pre>\n<p>Output\n<code>{1: 20, 2: 30}</code></p>\n<h2>6) WAP to print sum of entered no. using function with arbitrary argument arguments.</h2>\n<pre><code class=\"language-python\">def sum(*x):\n    n=0\n    for i in x:\n        n+=i\n    print(n)\nsum(1, 2,3,4,5)\n</code></pre>\n<p>Output\n<code>15</code></p>\n<p><code>fibonacci.py</code></p>\n<pre><code class=\"language-python\">def fib(n):\n  n1, n2= 0,1\n  for i in range(n):\n    print(n1)\n    nth=n1+n2\n    n1=n2\n    n2=nth\n</code></pre>\n<p><code>fib.py</code></p>\n<pre><code class=\"language-python\">import fibonacci\nprint(fibonacci.fib(5))\n</code></pre>\n<p>To run the code, run <code>fib.py</code> file.</p>\n<h2>8) WAP to print following pattern.</h2>\n<pre><code>***\n**\n*\n</code></pre>\n<pre><code class=\"language-python\">for i in range(4, 0, -1):\n    for j in range(0, i-1):\n        print(“*”, end= ‘ ’)\n    print(&quot; &quot;)\n</code></pre>\n<h2>9) WAP to print distinction, first class, second, third class and fail using if else.</h2>\n<pre><code class=\"language-python\">s1=int(input(&quot;English:&quot;))\ns2=int(input(&quot;Hindi:&quot;))\ns3=int(input(&quot;Marathi:&quot;))\ns4=int(input(&quot;Maths:&quot;))\ns5=int(input(&quot;Science:&quot;))\na=(s1+s2+s3+s4+s5)/5\nif a&gt;=90:\n    print(&quot;Distinction&quot;)\nelif a&gt;=75 and a&lt;90:\n    print(&quot;First class&quot;)\nelif a&gt;=45 and a&lt;75:\n    print(&quot;Second class&quot;)\nelif a&gt;=35 and a&lt;45:\n    print(&quot;Third class&quot;)\nelse:\n    print(&quot;Failed&quot;)\n</code></pre>\n<p>Output</p>\n<pre><code>English:70\nHindi:80\nMarathi:90\nMaths:80\nScience:70\nFirst class\n</code></pre>\n<h2>10) WAP to calculate area of circle and rectangle using method overriding.</h2>\n<pre><code class=\"language-python\">class Rec:\n    def area(self):\n        self. l=4\n        self. b=2\n        print(&quot;Area of rectangle=&quot;,self.l*self.b)\nclass Cir:\n    def area(self):\n        self. r=3.5\n        print(&quot;Area of circle=&quot;,3.14*self.r*self.r)\nr=Rec()\nr. area()\nc=Cir()\nc. area()\n</code></pre>\n<p>Output</p>\n<pre><code>Area of rectangle= 8\nArea of circle= 38.465\n</code></pre>\n<h2>11) Check entered password is correct or not using user defined exception.</h2>\n<pre><code class=\"language-python\">class WrongPasswordException(Exception):\n  pass\np=input(&quot;Enter password:&quot;)\ntry:\n  if p!='abc12':\n    raise WrongPasswordException\nexcept WrongPasswordException:\n  print(&quot;Incorrect password!&quot;)\nelse:\n  print(&quot;Correct password!&quot;)\n</code></pre>\n<p>Output</p>\n<pre><code>Enter password:abc12\nCorrect password!\n</code></pre>\n<h2>12) Create list and perform following operations.</h2>\n<ol>\n<li>print elements using for loop</li>\n<li>del elements 3,4</li>\n<li>del 4 and add ‘o’,‘n’ ‘a’</li>\n<li>acces element ‘d’ from orignal list</li>\n<li>find len of list</li>\n</ol>\n<h3>1.print elements using for loop</h3>\n<pre><code class=\"language-python=\">li = ['a','n','a','c',['o','n','d'],'a']\nfor i in li:\n    print(i)\n</code></pre>\n<p>Output</p>\n<pre><code>a\nn\na\nc\n['o', 'n', 'd']\na\n</code></pre>\n<h3>2. del elements 3,4</h3>\n<h3>3. del 4 and add ‘o’,‘n’ ‘a’</h3>\n<h3>4. acces element ‘d’ from orignal list</h3>\n<h3>5. find len of list</h3>\n<pre><code class=\"language-python=\">li = ['a','n','a','c',['o','n','d'],'a']\nprint(&quot;The length of list is: &quot;, len(li))\n</code></pre>\n<p>Output\n<code>The length of list is:  6</code></p>\n<h2>13) WAP using numpy to generate six random integers between 20-30.</h2>\n<pre><code class=\"language-python=\">import numpy as n\na=n.random.randint(20,30,6)\nprint(a)\n</code></pre>\n<p>Output\n<code>[24 27 29 25 22 22]</code></p>\n<h2>14) WAP to concatenate dictionaries to create new one.</h2>\n<pre><code class=\"language-python\">d1={1:10}\nd2={2:20}\nd3={3:30}\nd4={}\nfor i in d1, d2, d3:\n    d4. update(i)\nprint(d4)\n</code></pre>\n<p>Output\n<code>{1: 10, 2: 20, 3: 30}</code></p>\n<h2>15) WAP to print unique values of following dict.</h2>\n<pre><code class=\"language-python\">d={1:10, 2:20, 3:30, 4:30}\nd={1:10, 2:20, 3:30, 4:30}\nu=set()\nfor i in d:\n    for val in d.values() :\n        u. add(val)\nprint(u)\n</code></pre>\n<p>Output\n<code>{10, 20, 30}</code></p>\n<h2>16) Create 3x4 matrix filled with 10-21.</h2>\n<pre><code class=\"language-python\">import numpy as n\na=n.arange(10,22).reshape((3,4))\nprint(a)\n</code></pre>\n<p>Output</p>\n<pre><code>[[10 11 12 13]\n [14 15 16 17]\n [18 19 20 21]]\n</code></pre>\n<h2>17) WAP to create class Emp having data members name, salary use constructor to accept values and display information.</h2>\n<pre><code class=\"language-python\">class Emp:\n    def __init__(self, name, salary):\n        self. name=name\n        self. salary=salary\n    def disp(self):\n        print(&quot;Name:&quot;,self.name)\n        print(&quot;Salary:&quot;,self.salary)\ne=Emp(&quot;Abc&quot;,10000)\ne. disp()\n</code></pre>\n<p>Output</p>\n<pre><code>Name: Abc\nSalary: 10000\n</code></pre>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Practical S6&description=Python%20practical%20question%20bank%20solved%201)%20WAP%20to%20create%203x3%20matrix%20with%201%20at%20the%20border%20and%20zero%20inside.%20import%20numpy%20as%20n%20a=n.ones((3,%203))%20a[1:-1,1:-1]=0%20print(a)%20%20Output%20[[1.%201.%201.]%20%20[1.%200.%201.]%20%20[1.%201.%201.]]%20%202)%20WAP%20to%20calculate%20area%20of%20circle%20and%20area%20of%20rectangle%20using%20abstract&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/sample-paper-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/sample-paper-6s.html",
      "title": "Sample Paper 6S",
      "content_html": "<h2>Q1 Any FIVE</h2>\n<h3>a. Name different modes of Python.</h3>\n<p>Python has two basic modes:</p>\n<ol>\n<li>Script mode (or Normal mode)\n<ul>\n<li>The mode where the scripted and finished .py files are in the Python\nInterpreter.</li>\n</ul>\n</li>\n<li>Interactive mode\n<ul>\n<li>A command line shell which gives immediate feedback for each statement,\nwhile running previously fed statements in active memory.</li>\n</ul>\n</li>\n</ol>\n<h3>b. List identity Operators</h3>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>Returns <code>True</code> if both variables are sames object</td>\n<td>x is y</td>\n</tr>\n<tr>\n<td>is not</td>\n<td>Returns <code>False</code> if both variables are sames object</td>\n<td>x is not y</td>\n</tr>\n</tbody>\n</table>\n<h3>c. Describe Dictionary</h3>\n<ul>\n<li>A dictionary is collection which is unordered, changeable and indexed.</li>\n<li>Dictionaries are written with curl brackets, and they have keys and values.</li>\n<li>Example:<pre><code class=\"language-python\">company = {\n\t&quot;name&quot;: &quot;Apple&quot;,\n\t&quot;product&quot;: &quot;IPhone&quot;\n\t&quot;model&quot;: &quot;11&quot;\n}\n</code></pre>\n</li>\n</ul>\n<h3>d. State use of namespace in Python</h3>\n<ul>\n<li>A namespace is a simple system to control the names in a program.</li>\n<li>Python implements namespaces in the form of dictionaries.</li>\n<li>It maintains a name-to-object mapping where names act as keys and the objects\nas values.</li>\n</ul>\n<h3>e. List different object oriented features supported by Python.</h3>\n<ul>\n<li>Python OPP Concepts\n<ol>\n<li>Object</li>\n<li>Class</li>\n<li>Method</li>\n<li>Inheritance</li>\n<li>Polymorphism</li>\n<li>Data Abstraction</li>\n<li>Encapsulation</li>\n</ol>\n</li>\n</ul>\n<h3>f. Write steps involved in creation of a user defined exception?</h3>\n<ul>\n<li>Exception can be define by creating a new class.</li>\n<li>This exception class has to be derived, either directly or indirectly, from the built-in <code>Exception</code>.</li>\n<li>When the programmer suspects the possibility of exception, he should raise his\nown exception using <code>raise</code>.</li>\n<li>The programmer can insert the code inside a <code>try</code> block.</li>\n<li>Catch the exception using <code>except</code> block.</li>\n<li>Example:<pre><code class=\"language-python\">class Error(Exception):\n\tprint(&quot;Value can't be 0.&quot;)\n\nnumber = 0\n\ntry:\n\tif number == 0:\n\t\traise Error\n\telse:\n\t\tprint(&quot;Value is more then 0.&quot;)\nexcept Error:\n\tpass\n</code></pre>\n</li>\n<li>Output:<pre><code>Value can't be 0.\n</code></pre>\n</li>\n</ul>\n<h3>g. Describe Python Interpreter</h3>\n<ul>\n<li>Python interpreter converts the code written in Python language by users to\nlanguage which computer hardware or system can understand.</li>\n<li>Python interpreter is a bytecode interpreter, its input is instruction set\nsets called bytecode.</li>\n</ul>\n<h3>h. List features of Python</h3>\n<ul>\n<li>Easy to code</li>\n<li>High Level programming language</li>\n<li>Object-Oriented Language</li>\n<li>Portable language</li>\n<li>Use interpreter</li>\n<li>GUI Support</li>\n</ul>\n<h2>Q2 Any THREE</h2>\n<h3>a. Explain two Membership and two logical operators in python with appropriate examples.</h3>\n<h4>Membership Operators</h4>\n<ul>\n<li>Membership operators are used to test whether a value is found within a\nsequence.</li>\n<li>Example of <code>in</code>:<pre><code class=\"language-python\">x = 4\ny = 8\nlist = [1, 2, 3, 4, 5]\n\nif (x in list):\n\tprint(&quot;X is in list array&quot;)\nelse:\n\tprint(&quot;X is not in list array&quot;)\n</code></pre>\nOutput:<pre><code>X is in list array\n</code></pre>\n</li>\n<li>Example of <code>not in</code>:<pre><code class=\"language-python\">if (y not in list):\n\tprint(&quot;Y is not in list array&quot;)\nelse:\n\tprint(&quot;Y is in list array&quot;)\n</code></pre>\nOutput:<pre><code>Y is not in list array\n</code></pre>\n</li>\n</ul>\n<h4>Logical Operators</h4>\n<ul>\n<li>Logical operators are usedto perform locical operations on the values of\nvariables. The value is either <code>true</code> or <code>false</code></li>\n<li>Example of <code>and</code>, <code>or</code> and <code>not</code>.<pre><code class=\"language-python\">a = True\nb = False\nprint('a and b is', a and b)\nprint('a or b is', a or b)\nprint('not a is', not a)\n</code></pre>\n<pre><code>a and b is False\na or b is True\na not b is False\n</code></pre>\n</li>\n</ul>\n<h3>b. Describe any four methods of lists in Python</h3>\n<ul>\n<li><code>append()</code> - Adds an element at the end of the list.</li>\n<li><code>pop()</code> - Removes the element at the specified position.</li>\n<li><code>sort()</code> - Sorts the list</li>\n<li><code>clear()</code> - Removes all the elements from the list.\nExample:</li>\n</ul>\n<pre><code class=\"language-python\">fruits = ['apple', 'banana', 'cherry']\n\nfruits.append(&quot;orange&quot;)\nprint(fruits)\n\nfruits.pop(1)\nprint(fruits)\n\nfruits.sort()\nprint(fruits)\n\nfruits.clear()\nprint(fruits)\n</code></pre>\n<p>Output:</p>\n<pre><code>['apple', 'banana', 'cherry', 'orange']\n['apple', 'cherry', 'orange']\n['apple', 'cherry', 'orange']\n\n</code></pre>\n<h3>c. Comparing between local and global variable</h3>\n<table>\n<thead>\n<tr>\n<th>Local</th>\n<th>Global</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>It is declare  inside a function</td>\n<td>It is declared outside the function</td>\n</tr>\n<tr>\n<td>It is created when the function starts execution and lost when the function terminate.</td>\n<td>It is created before the program’s global execution starts and lost when the program terminates.</td>\n</tr>\n<tr>\n<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>\n<td>You can access global variables by any statement in the program.</td>\n</tr>\n<tr>\n<td>Parameters passing is required for local variables to access the value in other function.</td>\n<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>\n</tr>\n</tbody>\n</table>\n<h3>d. Write a Python program to print Fibonacci series up to n terms</h3>\n<p>Example:</p>\n<pre><code class=\"language-python\">term = int(input(&quot;Enter the term: &quot;))\n\nn1, n2 = 0, 1\n\nif term &lt; 0:\n\tprint(&quot;Invalid term&quot;)\nelse:\n\tfor i in range(term):\n\t\tprint(n1)\n\t\tnth = n1 + n2\n\t\tn1 = n2\n\t\tn2 = nth\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter the term: 7\n0\n1\n1\n2\n3\n5\n8\n</code></pre>\n<h2>Q3 Any THREE</h2>\n<h3>a. Write a program to input any two and interchange the tuple variable.</h3>\n<p>Example:</p>\n<pre><code>a = (1, 2, 3, 4, 5)\nb = (13, 23, 36, 47, 75)\n\na,b = b,a\n\nprint(a)\nprint(b)\n</code></pre>\n<p>Output:</p>\n<pre><code>(13, 23, 36, 47, 75)\n(1, 2, 3, 4, 5)\n</code></pre>\n<h3>b. Explain different loops available in python with suitable examples.</h3>\n<h4><code>while</code></h4>\n<p>A <code>while</code> loop executes a target statement as long as given condition is true.</p>\n<p>Syntax:</p>\n<pre><code>while expression: statement(s)\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">count = 0\n\nwhile(count &lt; 5):\n\tprint(count)\n\tcount += 1\n\nprint(&quot;over&quot;)\n</code></pre>\n<p>Output:</p>\n<pre><code>0\n1\n2\n3\n4\nover\n</code></pre>\n<h4><code>for loop</code></h4>\n<p>It has the ability to iterate over the items of any sequence, such as a list or\na string.</p>\n<p>Syntax:</p>\n<pre><code>for iterating in sequence: statements(s)\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">fruits = ['banana', 'apple', 'mango']\n\nfor fruit in fruits:\n\tprint(fruit)\n\nprint(&quot;over&quot;)\n</code></pre>\n<p>Output:</p>\n<pre><code>banana\napple\nmango\nover\n</code></pre>\n<h4>Nested loops</h4>\n<p>Python programming language allows to use one loop inside another loop.</p>\n<p>Syntax:</p>\n<pre><code>for iterating in sequence:\n\tfor iterating in sequence:\n\t\tstatements(s)\n\tstatements(s)\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">nums = [1, 2, 3]\nwords = [&quot;hello&quot;, &quot;hi&quot;, &quot;bye&quot;]\n\nfor num in nums:\n\tprint(num)\n\n\tfor word in words:\n\t\tprint(word)\n</code></pre>\n<p>Output:</p>\n<pre><code>1\nhello\nhi\nbye\n2\nhello\nhi\nbye\n3\nhello\nhi\nbye\n</code></pre>\n<h3>c. Describe various modes of file object? Explain any two in detail.</h3>\n<p>There are four different methods modes for opening a file:</p>\n<ul>\n<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>\n<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not\nexist.</li>\n<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>\n<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not\nexist.</li>\n</ul>\n<p>In addition, the file should be handled as binary or text mode:</p>\n<ul>\n<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>\n<li>b - Binary - Binary mode (e.g. images).</li>\n</ul>\n<h4>Read a file</h4>\n<p>The <code>read()</code> method and <strong>r</strong> mode is used to read files.\nBefore read a file, the file must open using <code>open()</code> function.</p>\n<p><code>text.txt</code> file content:</p>\n<pre><code class=\"language-txt\">Hello World\n</code></pre>\n<p>Program:</p>\n<pre><code class=\"language-python\">f = open(&quot;text.txt&quot;, &quot;r&quot;)\nprint(f.read())\n</code></pre>\n<p>Output:</p>\n<pre><code>Hello world\n</code></pre>\n<h4>Write a file</h4>\n<p>The <code>write()</code> method and <code>a</code> or <code>w</code> modes is used to write files.</p>\n<p>Program:</p>\n<pre><code class=\"language-python\">f = open(&quot;text.txt&quot;, &quot;w&quot;)\nf.write(&quot;Hello World&quot;)\nf.close()\n</code></pre>\n<p><code>text.txt</code> file content:</p>\n<pre><code>Hello World\n</code></pre>\n<h3>d. Illustrate the use of method overriding? Explain with example</h3>\n<p>If a class inherits a method from its superclass, then there is a chance to\noverride the method provided.\nExample:</p>\n<pre><code class=\"language-python\">class Parent:\n\tdef echo(self):\n\t\tprint('I am from Parent class.')\n\nclass Child(Parent):\n\tdef echo(self):\n\t\tprint('I am from Child class.')\n\np = Parent()\nc = Child()\n\np.echo()\nc.echo()\n</code></pre>\n<p>Output:</p>\n<pre><code>I am from Parent class.\nI am from Child class.\n</code></pre>\n<h2>Q4 Any THREE</h2>\n<h3>a. Use of any four methods of tuple in Python?</h3>\n<ul>\n<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>\n<li><code>max()</code> - Highest value will returned.</li>\n<li><code>min()</code> - Lowest value be returned.</li>\n<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-python\">t = (12, 45, 43, 8, 35, 12)\nprint(len(t))\nprint(max(t))\nprint(min(t))\nprint(t1.count(12))\n</code></pre>\n<p>Output:</p>\n<pre><code>6\n45\n8\n2\n</code></pre>\n<h3>b. Write a python Program to read contents of first.txt and write same content in second.txt file</h3>\n<p><code>first.txt</code> file content:</p>\n<pre><code>Hello World\n</code></pre>\n<p>Program:</p>\n<pre><code class=\"language-python\">with open('first.txt', 'r') as firstfile, open('second.txt', 'a') as secondfile:\n\n\tfor line in firstfile:\n\t\tsecondfile.write(line)\n</code></pre>\n<p><code>second.txt</code> file content:</p>\n<pre><code>Hello world\n</code></pre>\n<h3>c. Show how try…except block is used for exception handling in Python with example.</h3>\n<ul>\n<li>When an exception occurs, Python will normally stop and generate an error\nmessage.</li>\n<li>These exceptions can be handled using the <code>try</code> statement.</li>\n<li>The <code>except</code> block lets you handle the error.</li>\n<li>Syntax:<pre><code class=\"language-python\">try:\n\t# Code\nexcept:\n\t# Code\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">try:\n\tprint(x)\nexcept NameError:\n\tprint(&quot;Variable x is not defined&quot;)\n</code></pre>\n</li>\n<li>Output:<pre><code>Variable x is not defined.\n</code></pre>\n</li>\n</ul>\n<h3>d. Write the output for the following if the variable fruit = “banana”</h3>\n<pre><code>&gt;&gt;&gt; fruit[:3]\n&gt;&gt;&gt; fruit[3:]\n&gt;&gt;&gt; fruit[3:3]\n&gt;&gt;&gt; fruit[:]\n</code></pre>\n<p>Output:</p>\n<pre><code>&gt;&gt;&gt; fruit = &quot;banana&quot;\n&gt;&gt;&gt; fruit[:3]\n'ban'\n&gt;&gt;&gt; fruit[3:]\n'ana'\n&gt;&gt;&gt; fruit[3:3]\n''\n&gt;&gt;&gt; fruit[:]\n'banana'\n</code></pre>\n<h2>Q5 Any TWO</h2>\n<h3>a. Determine various data types available in Python with example.</h3>\n<h4>Numbers</h4>\n<ul>\n<li><code>int</code>, <code>float</code> and complex numbers fall under numbers category.</li>\n<li>Example:<pre><code class=\"language-python\">a = 5\na = 2.0\na = 1+2j\n</code></pre>\n</li>\n</ul>\n<h4>String</h4>\n<ul>\n<li>String is sequence of Unicode characters.</li>\n<li>We can use single quotes or double quotes to represent strings.</li>\n<li>Multi-line string can be denoted using triple quotes <code>'''</code> or <code>&quot;&quot;&quot;</code>.</li>\n<li>Example:<pre><code class=\"language-python\">s = &quot;This is string&quot;\ns = '''\n\tA multi line string\n'''\n</code></pre>\n</li>\n</ul>\n<h4>List</h4>\n<ul>\n<li>List is an ordered sequence of items.</li>\n<li>It is one of the most used datatype in Python.</li>\n<li>List is very flexible.</li>\n<li>All the items in a list don not need to be the same type.</li>\n<li>Example:<pre><code class=\"language-python\">a = [1, 2.2, 'python']\n</code></pre>\n</li>\n</ul>\n<h4>Tuple</h4>\n<ul>\n<li>Tuple is an ordered sequence of items same as a list.</li>\n<li>The only difference is that tuples are immutable.</li>\n<li>Tuples once created cannot be modified.</li>\n<li>Example:<pre><code class=\"language-python\">t = (5, 'program', 1+3j)\n</code></pre>\n</li>\n</ul>\n<h4>Set</h4>\n<ul>\n<li>Set is an unordered collection of unique items.</li>\n<li>Set is defined by values separated by comma inside braces { }.</li>\n<li>Items in a set are not ordered</li>\n<li>Example:<pre><code class=\"language-python\">a = {5,2,3,1,4}\n</code></pre>\n</li>\n</ul>\n<h4>Dictionary</h4>\n<ul>\n<li>Dictionary is an unordered collection of key-value pairs.</li>\n<li>It is generally used when we have a huge amount of data.</li>\n<li>Dictionaries are defined within braces <code>{}</code>.</li>\n<li>Example:<pre><code class=\"language-python\">d = {1:'value','key':2}\n</code></pre>\n</li>\n</ul>\n<h3>b. Write a python program to calculate factorial of given number using function.</h3>\n<p>Example:</p>\n<pre><code class=\"language-python\">n = int(input(&quot;Enter the number: &quot;))\nf = 1\n\nfor i in range(1, n + 1):\n\tf = f * 1\n\nprint(f)\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter the number: 6\n720\n</code></pre>\n<h3>c. Show the output for the following:</h3>\n<pre><code>&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; b = [4, 5, 6]\n&gt;&gt;&gt; c = a + b\n&gt;&gt;&gt; print(c)\n[1, 2, 3, 4, 5, 6]\n</code></pre>\n<pre><code>&gt;&gt;&gt; [1, 2, 3] * 3\n[1, 2, 3, 1, 2, 3, 1, 2, 3]\n</code></pre>\n<pre><code>&gt;&gt;&gt; t = ['a', 'b', 'c', 'd', 'e', 'f']\n&gt;&gt;&gt; t[1:3] = ['x', 'y']\n&gt;&gt;&gt; print(t)\n['a', 'x', 'y', 'd', 'e', 'f']\n</code></pre>\n<h2>Q6 Any TWO</h2>\n<h3>a. Describe Set in python with suitable examples.</h3>\n<h4>Creating a set</h4>\n<p>Set can be created using curly braces <code>{}</code> or using <code>set()</code> method.</p>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry'}\nfruits = set(['apple', 'banana', 'cherry'])\n</code></pre>\n<h4>Adding items to the set</h4>\n<p>Item can added using <code>add()</code> method.</p>\n<p>Example:</p>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry'}\nfruits.add('orange')\nprint(fruits)\n</code></pre>\n<p>Output:</p>\n<pre><code>{'apple', 'banana', 'cherry', 'orange'}\n</code></pre>\n<h4>Removing items from the set</h4>\n<p>There three methods to remove sets:</p>\n<ul>\n<li><code>discard()</code> - removes given items from set.</li>\n<li><code>remove()</code> - removes given item from set. If item is not avaliable it will\ngive error.</li>\n<li><code>pop()</code> - removes list item from the set.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry', 'orange'}\nfruits.discard(&quot;apple&quot;)\nfruits.remove(&quot;banana&quot;)\nfruits.pop()\nprint(fruits)\n</code></pre>\n<p>Output:</p>\n<pre><code>{'cherry'}\n</code></pre>\n<h4>Comparison of set</h4>\n<ul>\n<li><code>|</code> - shows the union of two set.</li>\n<li><code>&amp;</code> - shows the intersection of two set.</li>\n<li><code>-</code> - shows the difference of two set.</li>\n<li><code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code> - comparison operators can also be use in set.</li>\n</ul>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry'}\nfruits2 = {'orange', 'pineapple', 'apple'}\n\nprint(fruits|fruits2)\nprint(fruits&amp;fruits2)\nprint(fruits-fruits2)\nprint(fruits&gt;fruits2)\nprint(fruits&lt;fruits2)\nprint(fruits==fruits2)\n</code></pre>\n<p>Output:</p>\n<pre><code>{'apple', 'banana', 'cherry', 'orange', 'pineapple', 'apple'}\n{'apple'}\n{'banana', 'cherry', 'orange', 'pineapple'}\nFalse\nFalse\nTrue\n</code></pre>\n<h3>b. Illustrate class inheritance in Python with an example</h3>\n<h4>Simple Inheritance</h4>\n<p>In inheritance, the child class acquires the properties and access all the data\nmembers and function defined in the parent class.</p>\n<p>Illustration:</p>\n<pre><code> ┏━━━━━━━━━━┓\n ┃Base Class┃\n ┗━━━━━━━━━━┛\n      ⇑\n┏━━━━━━━━━━━━┓\n┃Deived Class┃\n┗━━━━━━━━━━━━┛\n</code></pre>\n<p>Syntax:</p>\n<pre><code class=\"language-python\">class Base:\n\t# Body of base class\nclass Derived(Base):\n\t# Body of derived class\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">class Parent:\n\tparentname = &quot;&quot;\n\tchildname = &quot;&quot;\n\tdef show_parent(self):\n\t\tprint(self.parentname)\n\nclass Child(Parent):\n\tdef show_child(self):\n\t\tprint(self.childname)\n\nc = Child()\nc.parentname = &quot;Arati&quot;\nc.childname = &quot;Purva&quot;\nc.show_parent()\nc.show_child()\n</code></pre>\n<p>Output:</p>\n<pre><code>Arati\nPurva\n</code></pre>\n<h4>Multiple inheritance</h4>\n<p>Multiple inheritace means that you’re inheriting the property of multiple\nclasses into one.</p>\n<p>Illustration:</p>\n<pre><code>┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓\n┃Base Class 1┃┃Base Class 2┃┃Base Class 3┃\n┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛\n     ┃              ┃             ┃\n     ┗━━━━━━━━━━━━━━╋━━━━━━━━━━━━━┛\n              ┏━━━━━━━━━━━━┓\n              ┃Deived Class┃\n              ┗━━━━━━━━━━━━┛\n</code></pre>\n<p>Syntax:</p>\n<pre><code class=\"language-python\">class A:\n\t# variable of class A\nclass B:\n\t# variable of class B\nclass C(A, B):\n\t# variable of class C\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">class Parent1:\n\tdef echo(self):\n\t\tprint(&quot;Parent class 1&quot;)\n\nclass Parent2:\n\tdef echo2(self):\n\t\tprint(&quot;Parent class 2&quot;)\n\nclass Child(Parent1, Parent2):\n\tdef show(self):\n\t\tprint(&quot;Child class&quot;)\n\nc = Child()\nc.echo()\nc.echo2()\nc.show()\n</code></pre>\n<p>Output:</p>\n<pre><code>Parent class 1\nParent class 2\nChild class\n</code></pre>\n<h3>c. Design a class Employee with data members: name, department and salary. Create suitable methods for reading and printing employee information</h3>\n<p>Example:</p>\n<pre><code class=\"language-python\">class Employee:\n\tname = &quot;&quot;\n\tdepartment = &quot;&quot;\n\tsalary = 0\n\n\tdef setData(self):\n\t\tself.name = input(&quot;Enter Name: &quot;)\n\t\tself.department = input(&quot;Enter Department: &quot;)\n\t\tself.salary = int(input(&quot;Enter Salary: &quot;))\n\n\tdef showData(self):\n\t\tprint(&quot;Name:&quot;, self.name)\n\t\tprint(&quot;Department:&quot;, self.department)\n\t\tprint(&quot;Salary:&quot;, self.salary)\n\ne = Employee()\ne.setData()\ne.showData()\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter Name: Jonney\nEnter Department: Testing\nEnter Salary: 20000\nName: Jonney\nDepartment: Testing\nSalary: 20000\n</code></pre>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Sample Paper 6S&description=Q1%20Any%20FIVE%20a.%20Name%20different%20modes%20of%20Python.%20Python%20has%20two%20basic%20modes:%20%20Script%20mode%20(or%20Normal%20mode)%20%20The%20mode%20where%20the%20scripted%20and%20finished%20.py%20files%20are%20in%20the%20Python%20Interpreter.%20%20%20Interactive%20mode%20%20A%20command%20line%20shell%20which%20gives%20immediate%20feedback%20for%20each%20statement,%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/android/notes.html",
      "url": "https://anzenkodo.github.io/notes/programming/android/notes.html",
      "title": "Notes",
      "content_html": "<h1>Android</h1>\n<h2>1. What is Mobile application?</h2>\n<ul>\n<li>A mobile application, most commonly referred to as an app, is a type of\napplication software deigned to run on a mobile device, such as a smart phone\nor tablet computer.</li>\n<li>Mobile app development is the process by which a mobile applications is\ndeveloped for mobile devices like Personal Digital Assistants (PDAs), tablet\ncomputer or mobile smart phones.</li>\n<li>Android is mobile operating system developed by Google, based on a modified\nversion of the Linux kernel and other open source software and designed\nprimarily for touchscreen mobile devices such as smart phones and tablets.</li>\n<li>Application developers, Android is an open platform that provides exciting\nopportunities for developing virtually app imaginable.</li>\n</ul>\n<h2>3. What is Android?</h2>\n<ul>\n<li>The android is a powerful Operating System(OS) and it supports large numbers\nof applications(apps) in smart phones.</li>\n<li>The hardware that supports android software is based on ARM architecture\nplatform.</li>\n<li>The android is an open source operating system means that it is free and any\none can use it.</li>\n<li>The android development supports with the full Java programming language.</li>\n</ul>\n<h2>4. Enlist features of Android OS?</h2>\n<ul>\n<li><strong>Storage</strong> - SQLite a lightweight relational database, is used for data\nstorage purpose.</li>\n<li><strong>Multitasking</strong> - Multitasking of application, with unique handling of\nmemory allocation, will be existing.</li>\n<li><strong>Web Browser</strong> - The web browser available in Android OS is based on the\nopen source WebKit layout engine, attached with Chrome’s V8 JavaScript engine.</li>\n<li><strong>Open Source</strong> - Android is open-source operating system.</li>\n<li><strong>Accessibility</strong> - Built in text to speech in Android OS is provided by Talk\nback for people with low or no vision.</li>\n<li><strong>Media Support</strong> - Android supports the many media formats like:\n<ul>\n<li>WenM</li>\n<li>H.263</li>\n<li>H.254</li>\n<li>AAC</li>\n<li>HE-AAC</li>\n<li>MPEG-4</li>\n</ul>\n</li>\n</ul>\n<h2>5. State Advantages and Disadvantages of Android OS?</h2>\n<h3>Advantages</h3>\n<ul>\n<li>Supports 2D and 3D Graphics</li>\n<li>Supports Multiple Languages</li>\n<li>Faster Web Browser</li>\n<li>Video Calling</li>\n<li>Open Source Framework</li>\n<li>Uses of Tools are Very Simple</li>\n<li>Availability of Apps</li>\n<li>Great Social Networking Integration</li>\n<li>Better Notification System</li>\n<li>Update User Interface Design</li>\n<li>At a Time Applications</li>\n<li>Low Chance of Crashing</li>\n<li>Stability</li>\n<li>Multitasking</li>\n</ul>\n<h3>Disadvantages</h3>\n<ul>\n<li>Need Internet Connection</li>\n<li>Advertising</li>\n<li>Wasteful Battery</li>\n<li>Many Applications</li>\n<li>Slow Response</li>\n<li>Heat</li>\n</ul>\n<h2>6. Describe Architecture of Android diagrammatically.</h2>\n<pre><code>┌──────────────────────────────────────────────────────────────────────────────┐\n│ Application                                                                  │\n│ ┌────┐ ┌────────┐ ┌─────┐ ┌───────┐ ┌───┐                                    │\n│ │Home│ │Contacts│ │Phone│ │Browser│ │***│                                    │\n│ └────┘ └────────┘ └─────┘ └───────┘ └───┘                                    │\n│                                                                              │\n│ ┌────┐ ┌──────┐ ┌─────┐ ┌────────┐ ┌───┐                                     │\n│ │SMS │ │E-Mail│ │Clock│ │Calander│ │***│                                     │\n│ └────┘ └──────┘ └─────┘ └────────┘ └───┘                                     │\n│                                                                              │\n├──────────────────────────────────────────────────────────────────────────────┤\n│                                                                              │\n│ Application Framework                                                        │\n│ ┌────────────────┐ ┌──────────────┐ ┌─────────────────┐ ┌───────────┐        │\n│ │Activity Manager│ │Window Manager│ │Content Providers│ │View System│        │\n│ └────────────────┘ └──────────────┘ └─────────────────┘ └───────────┘        │\n│                                                                              │\n│ ┌───────────────┐ ┌─────────────────┐ ┌────────────────┐ ┌────────────────┐  │\n│ │Package Manager│ │Telephony Manager│ │Resource Manager│ │Location Manager│  │\n│ └───────────────┘ └─────────────────┘ └────────────────┘ └────────────────┘  │\n│                                                                              │\n├──────────────────────────────────────────────┬───────────────────────────────┤\n│ Libraries                                    │ Android Runtime               │\n│ ┌───────────────┐ ┌───────────────┐ ┌──────┐ │ ┌──────────────┐              │\n│ │Surface Manager│ │Media Framework│ │SQLite│ │ │Core Libraries│              │\n│ └───────────────┘ └───────────────┘ └──────┘ │ └──────────────┘              │\n│                                              │                               │\n│ ┌─────────┐ ┌────────┐ ┌──────┐              │ ┌──────────────────────┐      │\n│ │OpenGL/ES│ │FreeType│ │WebKit│              │ │Dalvik Virtual Machine│      │\n│ └─────────┘ └────────┘ └──────┘              │ └──────────────────────┘      │\n│                                              │                               │\n│ ┌───┐ ┌───┐ ┌────┐                           │                               │\n│ │SGL│ │SSL│ │Libc│                           │                               │\n│ └───┘ └───┘ └────┘                           │                               │\n│                                              │                               │\n├──────────────────────────────────────────────┴───────────────────────────────┤\n│ Linux Kernel                                                                 │\n│ ┌──────────────┐ ┌─────────────┐ ┌───────────────────┐ ┌───────────────────┐ │\n│ │Display Driver│ │Camera Driver│ │Flash Memory Driver│ │Binder (IPC) Driver│ │\n│ └──────────────┘ └─────────────┘ └───────────────────┘ └───────────────────┘ │\n│                                                                              │\n│ ┌─────────────┐ ┌───────────┐ ┌────────────┐ ┌────────────────┐              │\n│ │Keypad Driver│ │WiFi Driver│ │Audio Driver│ │Power Management│              │\n│ └─────────────┘ └───────────┘ └────────────┘ └────────────────┘              │\n│                                                                              │\n└──────────────────────────────────────────────────────────────────────────────┘\n</code></pre>\n<h2>7. What is OHA?</h2>\n<ul>\n<li>The OHA stands for Open Hardware Alliance.</li>\n<li>Google formed OHA in order to develop an open source software platform for use\nin mobile devices.</li>\n<li>The OHA is the group that is in charge of the Android smart phones OS.</li>\n<li>The primary objective of these companies is to developed open standards for\nmobile devices.</li>\n<li>The members of OHA include handset manufactures, chip makers,\ncommercialization companies, software companies and mobile operators/users.</li>\n</ul>\n<h2>8. Explain the term Android ecosystem in detail.</h2>\n<ul>\n<li>The learn about Android Operating system and develop Android application, it\nis very important for to understand the entire ecosystem of Android and the\nstakeholders of Android ecosystem.</li>\n<li>The four parts of Android Ecosystem:\n<ul>\n<li><strong>Google</strong> - develops android.</li>\n<li><strong>OEMs</strong> (Original Equipment Manufactures) manufacture the hardware, and as\nwell the custom application components.</li>\n<li><strong>Application Development Companies</strong> - are the major contactors to the\necosystem and employ developers, and also contract out the product\ndevelopment to services companies.</li>\n<li><strong>Freelance Android Developers</strong> have the skill-set to contribute to the\necosystem for android development, they are who create their own\napplications and publish them on Google Play Store.</li>\n</ul>\n</li>\n</ul>\n<h2>9. What are the features of Android? Enlist any six of them.</h2>\n<ul>\n<li><strong>Storage</strong> - SQLite a lightweight relational database, is used for data\nstorage purpose.</li>\n<li><strong>Multitasking</strong> - Multitasking of application, with unique handling of\nmemory allocation, will be existing.</li>\n<li><strong>Web Browser</strong> - The web browser available in Android OS is based on the\nopen source WebKit layout engine, attached with Chrome’s V8 JavaScript engine.</li>\n<li><strong>Open Source</strong> - Android is open-source operating system.</li>\n<li><strong>Accessibility</strong> - Built in text to speech in Android OS is provided by Talk\nback for people with low or no vision.</li>\n<li><strong>Media Support</strong> - Android supports the many media formats like:\n<ul>\n<li>WenM</li>\n<li>H.263</li>\n<li>H.254</li>\n<li>AAC</li>\n<li>HE-AAC</li>\n<li>MPEG-4</li>\n</ul>\n</li>\n</ul>\n<h2>10. Explain the term Android ecosystem in detail.</h2>\n<ol>\n<li>Android 13</li>\n<li>Android 12</li>\n<li>Android 11</li>\n<li>Android 10</li>\n<li>Android Pie</li>\n<li>Android Oreo</li>\n<li>Android Nougat</li>\n<li>Android Marshmallow</li>\n<li>Android Lollipop</li>\n<li>Android KitKat</li>\n<li>Android Jelly Bean</li>\n<li>Android Sandwich</li>\n<li>Android Honeycomb</li>\n<li>Android Gingerbread</li>\n<li>Android Froyo</li>\n<li>Android Eclair</li>\n<li>Android Donut</li>\n<li>Android 1.5</li>\n<li>Android 1.1</li>\n<li>Android 1.0</li>\n</ol>\n<h2>11. Explain the need of Android.</h2>\n<ul>\n<li><strong>Desktop</strong> -Android-x86 is an open source project that ports Android to the\nx86 platform, allowing you to run it on your computer instead of an ARM-based\nphone or tablet.</li>\n<li><strong>Connectivity</strong> - On one page/desktop we could be able to have four\nconnecting device tool button like, Turn ON/OFF Bluetooth, Turn ON/OFF WiFi,\nTurn ON/OFF mobile network, Turn ON/OFF GPS and so on.</li>\n<li><strong>Browser</strong> - The Android OS browser is one of the best browser on the mobile\nmarket. It generally loads pages faster then Safari or any other browser.</li>\n<li><strong>Open to carrier</strong> - If we know Java programming language then we are open to\nAndroid world.</li>\n<li><strong>Market</strong> - Android OS has an android market. The android apps are free and\nwork as well.</li>\n<li><strong>Future</strong> - The future mobile phones are basically going to be smartphones.</li>\n<li><strong>Notification</strong> - Android phones have multi notification system.</li>\n<li><strong>Google Integration</strong> - The android has inbuilt Google support. For example:\nGoogle Map, G-Mail etc.</li>\n<li><strong>Open Source</strong> - The code of Android OS as well as the apps is available.</li>\n<li><strong>Endless Personalization</strong> - The Android cell phone allow to configuration\ntheir mobile to look and behave exactly like they want.</li>\n</ul>\n<h2>14. Explain the following terms:</h2>\n<h3>(i) Android application</h3>\n<ul>\n<li>The top layer of Android architecture is Applications.</li>\n<li>The native and third party applications like Contacts, Email, Music, Gallery,\nClock, Games, etc.</li>\n<li>Whatever we will build those will be installed on this layer only.</li>\n<li>The application layer runs within the Android run time using the classes an\nservices made available from the application framework.</li>\n</ul>\n<h3>(ii) Android kernel</h3>\n<ul>\n<li>Linux kernel is a bottom layer and heart of the android architecture.</li>\n<li>It exists at the root of android architecture and contains all the low-level\ndevice drivers fro the various hardware components of an Android device.</li>\n<li>Linux Kernel is responsible for device drivers, power management, memory\nmanagement, device management and resource access.</li>\n</ul>\n<h2>16. Describe OHA with the Help of Digram.</h2>\n<pre><code>┌─────────┐ ┌─────────┐ ┌────────────┐ ┌──────┐ ┌───────────────┐\n│Software │ │Mobile   │ │Handset     │ │Chip  │ │Commercializton│\n│Companies│ │Operators│ │Manufactures│ │Makers│ │Companies      │\n└─────┬───┘ └─────┬───┘ └─────┬──────┘ └───┬──┘ └────────┬──────┘\n      │           │           │            │             │\n      └───────────┴───────────┼────────────┴─────────────┘\n                              │\n                       ┌──────┴───────┐\n                       │Open Handset  │\n                       │Alliance (OHA)│\n                       └──────────────┘\n</code></pre>\n<h2>17. Enlist and explain any 4 features of Android.</h2>\n<ul>\n<li><strong>Storage</strong> - SQLite a lightweight relational database, is used for data\nstorage purpose.</li>\n<li><strong>Multitasking</strong> - Multitasking of application, with unique handling of\nmemory allocation, will be existing.</li>\n<li><strong>Web Browser</strong> - The web browser available in Android OS is based on the\nopen source WebKit layout engine, attached with Chrome’s V8 JavaScript engine.</li>\n<li><strong>Open Source</strong> - Android is open-source operating system.</li>\n</ul>\n<h2>19. Explain the concept of Android Ecosystem.</h2>\n<ul>\n<li>The learn about Android Operating system and develop Android application, it\nis very important for to understand the entire ecosystem of Android and the\nstakeholders of Android ecosystem.</li>\n<li>The four parts of Android Ecosystem:\n<ul>\n<li><strong>Google</strong> - develops android.</li>\n<li><strong>OEMs</strong> (Original Equipment Manufactures) manufacture the hardware, and as\nwell the custom application components.</li>\n<li><strong>Application Development Companies</strong> - are the major contactors to the\necosystem and employ developers, and also contract out the product\ndevelopment to services companies.</li>\n<li><strong>Freelance Android Developers</strong> have the skill-set to contribute to the\necosystem for android development, they are who create their own\napplications and publish them on Google Play Store.</li>\n</ul>\n</li>\n</ul>\n<h2>20. Explain any 4 advantages and disadvantages of Android OS.</h2>\n<h3>Advantages</h3>\n<ul>\n<li>Supports 2D and 3D Graphics</li>\n<li>Supports Multiple Languages</li>\n<li>Faster Web Browser</li>\n<li>Video Calling</li>\n<li>Open Source Framework</li>\n<li>Uses of Tools are Very Simple</li>\n<li>Availability of Apps</li>\n<li>Great Social Networking Integration</li>\n<li>Better Notification System</li>\n<li>Update User Interface Design</li>\n<li>At a Time Applications</li>\n<li>Low Chance of Crashing</li>\n<li>Stability</li>\n<li>Multitasking</li>\n</ul>\n<h3>Disadvantages</h3>\n<ul>\n<li>Need Internet Connection</li>\n<li>Advertising</li>\n<li>Wasteful Battery</li>\n<li>Many Applications</li>\n<li>Slow Response</li>\n<li>Heat</li>\n</ul>\n<h2>21. Describe the concept of Anatomy of Android Application.</h2>\n<ul>\n<li><code>java</code> - This contains the <code>.java</code> source filed for our project. By default,\nincludes an <code>MainActivity.java</code> source file having an activity class that runs\nwhen our app is launched using the app icon.</li>\n<li><code>res/drawable-hdpi</code> - This is directory for drawable objects that are designed\nfor high-density screens.</li>\n<li><code>res/layout</code> - This is a directory for other various XML files that contain a\ncollection of resources, such as strings and colours definitions.</li>\n<li><code>AndroidManifest.xml</code> - This is the manifest file which describes the\nfundamental characteristics of the app and defines each of its components.</li>\n<li><code>Build.gradle</code> - This is an auto generated file which contains\n<code>compileSdkVersion</code>, <code>buildToolsVersion</code>, <code>applicationId</code>, <code>minSdkVersion</code>,\n<code>targetSdkVersion</code>, <code>versionCode</code> and <code>versionName</code>.</li>\n</ul>\n<h2>22. Draw and explain the architecture of Android.</h2>\n<pre><code>┌──────────────────────────────────────────────────────────────────────────────┐\n│ Application                                                                  │\n│ ┌────┐ ┌────────┐ ┌─────┐ ┌───────┐ ┌───┐                                    │\n│ │Home│ │Contacts│ │Phone│ │Browser│ │***│                                    │\n│ └────┘ └────────┘ └─────┘ └───────┘ └───┘                                    │\n│                                                                              │\n│ ┌────┐ ┌──────┐ ┌─────┐ ┌────────┐ ┌───┐                                     │\n│ │SMS │ │E-Mail│ │Clock│ │Calander│ │***│                                     │\n│ └────┘ └──────┘ └─────┘ └────────┘ └───┘                                     │\n│                                                                              │\n├──────────────────────────────────────────────────────────────────────────────┤\n│                                                                              │\n│ Application Framework                                                        │\n│ ┌────────────────┐ ┌──────────────┐ ┌─────────────────┐ ┌───────────┐        │\n│ │Activity Manager│ │Window Manager│ │Content Providers│ │View System│        │\n│ └────────────────┘ └──────────────┘ └─────────────────┘ └───────────┘        │\n│                                                                              │\n│ ┌───────────────┐ ┌─────────────────┐ ┌────────────────┐ ┌────────────────┐  │\n│ │Package Manager│ │Telephony Manager│ │Resource Manager│ │Location Manager│  │\n│ └───────────────┘ └─────────────────┘ └────────────────┘ └────────────────┘  │\n│                                                                              │\n├──────────────────────────────────────────────┬───────────────────────────────┤\n│ Libraries                                    │ Android Runtime               │\n│ ┌───────────────┐ ┌───────────────┐ ┌──────┐ │ ┌──────────────┐              │\n│ │Surface Manager│ │Media Framework│ │SQLite│ │ │Core Libraries│              │\n│ └───────────────┘ └───────────────┘ └──────┘ │ └──────────────┘              │\n│                                              │                               │\n│ ┌─────────┐ ┌────────┐ ┌──────┐              │ ┌──────────────────────┐      │\n│ │OpenGL/ES│ │FreeType│ │WebKit│              │ │Dalvik Virtual Machine│      │\n│ └─────────┘ └────────┘ └──────┘              │ └──────────────────────┘      │\n│                                              │                               │\n│ ┌───┐ ┌───┐ ┌────┐                           │                               │\n│ │SGL│ │SSL│ │Libc│                           │                               │\n│ └───┘ └───┘ └────┘                           │                               │\n│                                              │                               │\n├──────────────────────────────────────────────┴───────────────────────────────┤\n│ Linux Kernel                                                                 │\n│ ┌──────────────┐ ┌─────────────┐ ┌───────────────────┐ ┌───────────────────┐ │\n│ │Display Driver│ │Camera Driver│ │Flash Memory Driver│ │Binder (IPC) Driver│ │\n│ └──────────────┘ └─────────────┘ └───────────────────┘ └───────────────────┘ │\n│                                                                              │\n│ ┌─────────────┐ ┌───────────┐ ┌────────────┐ ┌────────────────┐              │\n│ │Keypad Driver│ │WiFi Driver│ │Audio Driver│ │Power Management│              │\n│ └─────────────┘ └───────────┘ └────────────┘ └────────────────┘              │\n│                                                                              │\n└──────────────────────────────────────────────────────────────────────────────┘\n</code></pre>\n<ul>\n<li>The main components of Android architecture are:\n<ul>\n<li>Application</li>\n<li>Android Framework</li>\n<li>Android Runtime</li>\n<li>Platform Libraries</li>\n<li>Linux Kernel</li>\n</ul>\n</li>\n</ul>\n<h3>Application</h3>\n<ul>\n<li>The top layer of Android architecture is Applications.</li>\n<li>The native and third party applications like Contacts, Email, Music, Gallery,\nClock, Games, etc.</li>\n<li>Whatever we will build those will be installed on this layer only.</li>\n<li>The application layer runs within the Android run time using the classes an\nservices made available from the application framework.</li>\n</ul>\n<h3>Application Framework</h3>\n<ul>\n<li>The Application framework provides the classes used to create an Android\napplication.</li>\n<li>It also provides a generic abstraction for hardware access and manages the\nuser interface and application resources.</li>\n<li>It basically provides the services through which we can create the particular\nclass and make that class helpful for Application creation.</li>\n<li>The application framework includes services like telephony service, location\nservices, notification manager, NFC service, View system, etc.</li>\n<li>Which can use for application development as per our requirements.</li>\n</ul>\n<h3>Android Runtime</h3>\n<ul>\n<li>Android Runtime environment is an important part of Android rather then an\ninternal part and it contains a components like core libraries and the Dalvik\nVirtual Machine(DVM).</li>\n<li>The Android run time is the engine that powers our applications along with the\nlibraries and it forms the basis for the application framework.\n<ul>\n<li><strong>Dalvik Virtual Machine(DVM)</strong> - is register-based virtual machine like\nJava Virtual Machine(JVM). It is specially designed and optimized for\nAndroid to ensure that a device can run multiple instance efficiently.</li>\n<li>The <strong>core libraries</strong> in Android runtime will enable is to implement an\nAndroid applications using standard Java programming language.</li>\n</ul>\n</li>\n</ul>\n<h3>Platform Libraries</h3>\n<ul>\n<li>The Platform Libraries includes various C/C++ core libraries and Java based\nlibraries such as SSL, libc,Graphics, SQLite, WebKit, Media, Surface Manger,\nOpenGL etc.</li>\n</ul>\n<h3>Linux Kernel</h3>\n<ul>\n<li>Linux kernel is a bottom layer and heart of the android architecture.</li>\n<li>It exists at the root of android architecture and contains all the low-level\ndevice drivers fro the various hardware components of an Android device.</li>\n<li>Linux Kernel is responsible for device drivers, power management, memory\nmanagement, device management and resource access.</li>\n</ul>\n<h2>Android Application Components</h2>\n<ul>\n<li><strong>Activates</strong> - They dictate the UI and handle the user interaction to the\nsmart phone screen.</li>\n<li><strong>Services</strong> - They handle background processing associated with an\napplication.</li>\n<li><strong>Broadcast Receivers</strong> - They handle communication between Android OS and\napplications.</li>\n<li><strong>Content Provides</strong> - They handle data and database management issues.</li>\n<li><strong>Fragments</strong> - Represents a portion of user interface in an Activity.</li>\n<li><strong>Views</strong> - UI elements that are drawn on-screen including buttons, lists\nforms etc.</li>\n<li><strong>Layouts</strong> - View hierarchies that control screen format and appearance of\nthe views.</li>\n<li><strong>Intents</strong> -Messages wiring components together.</li>\n<li><strong>Resources</strong> - External elements, such as strings, constants and drawable\npictures.</li>\n<li><strong>Manifest</strong> - Configuration file for the application.</li>\n</ul>\n<h1>2. Installing and Configuration of Android</h1>\n<h2>1. What is OS? Explain OS requirements for Android.</h2>\n<ul>\n<li>To develop an Android program, the necessary supporting OS used in a computer\ncan be follows:\n<ul>\n<li>Windows XP, Vista, 7, 8</li>\n<li>Mac OS x</li>\n<li>Linux</li>\n</ul>\n</li>\n</ul>\n<h2>2. What is JDK?</h2>\n<ul>\n<li>An Android operating system program is developed in Java programming language\nwe have to install Java Development Kit (JDK) in computer.</li>\n</ul>\n<h2>3. What is SDK?</h2>\n<ul>\n<li>API libraries, and emulator, documentation, sample code, developer tools, and\ntutorials which help us to build, test and debug apps form Android.</li>\n<li>Android SDK is made up of two main parts namely, the tools and the packages.</li>\n<li>Some Android SDK, features include:\n<ul>\n<li>No licensing, distribution, or development fees.</li>\n<li>WiFi hardware access</li>\n<li>IPC message passing</li>\n<li>Shared data stores</li>\n<li>An integrated open source WebKit-based browser.</li>\n<li>Full support for application that integrate Map controls as part of their\ninterface.</li>\n<li>Peer-to-Peer(P2P) support using Google Talk.</li>\n</ul>\n</li>\n</ul>\n<h2>5. Describe DVM with diagram.</h2>\n<pre><code>                                 ┌───────────┐\n    ┌───────────┬──────────┬─────┤Android SDK├──────────┬───────────┐\n    │           │          │     └─────┬─────┘          │           │\n    │           │          │           │                │           │\n┌───┴────┐ ┌────┴────┐ ┌───┴────┐ ┌────┴────────┐ ┌─────┴─────┐ ┌───┴─────┐\n│Debugger│ │Libraries│ │Emulator│ │Documentation│ │Sample Code│ │Tutorials│\n└────────┘ └─────────┘ └────────┘ └─────────────┘ └───────────┘ └─────────┘\n</code></pre>\n<h2>What is JVM? Compare JVM and DVM?</h2>\n<ul>\n<li>Dalvik is register-based Virtual Machine(VM) that’s been optimized to ensure\nthat a device can run multiple instance efficiently.</li>\n<li>Dalvik VM takes the generated Java class files and combines them into one or\nmore Dalvik Executable (<code>.dev</code>) files.</li>\n<li>Android OS uses the Dalvik Virtual Machine (DVM) with just-during-time\ncompilation to run Dalvik bytecode, with is frequently translated from\nJava bytecode.</li>\n<li>Google has also fine-tuned the collection in the Dalvik VM, but it has chosen\nto remove Just-In-Time (JIT) compiler, in early releases.</li>\n<li>Dalvik VM use a different kind of assembly-code generation, in which it uses\nregisters as the primary units of data storage instead of the stack.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>JVM</th>\n<th>DVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JVM supports multiple OS</td>\n<td>DVM supports only Android OS</td>\n</tr>\n<tr>\n<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>\n<td>DVM forms multiple class <code>.dex</code> byte code file.</td>\n</tr>\n<tr>\n<td>It is based on stack based VM architecture.</td>\n<td>It is based on register based VM architecture.</td>\n</tr>\n<tr>\n<td>JVM runs on more memory.</td>\n<td>DVM runs on less memory.</td>\n</tr>\n<tr>\n<td>The executable format of JVM is JAR.</td>\n<td>The executable format of DVM is APK.</td>\n</tr>\n<tr>\n<td>JVM has different content pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n<tr>\n<td>It runs <code>.class</code> byte code directly.</td>\n<td>The <code>.class</code> byte codes are optimized to <code>.odex</code> format before executing in DVM.</td>\n</tr>\n</tbody>\n</table>\n<h2>7. Explain the term emulator in detail.</h2>\n<ul>\n<li>Android Emulator is responsible for running, debugging and testing the\nAndroid application.</li>\n<li>The Android Emulator mimics all the hardware and software features of typical\nmobile devices except that it can’t place annual phone calls.</li>\n</ul>\n<h2>8. What is ADT? Describe in detail.</h2>\n<ul>\n<li>Android Development Tool (ADT) in Android is a plugin for the Eclipse IDE\nwhich provides a suitable environment to develop an Android application where\ncreation, compilation and debugging are possible.</li>\n</ul>\n<h2>10. Differentiate between JDK and SDK.</h2>\n<table>\n<thead>\n<tr>\n<th>SDK</th>\n<th>JDK</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Software development kit.</td>\n<td>Java development kit.</td>\n</tr>\n<tr>\n<td>It is a set of software or development tools used to create an application or a program on any platform.</td>\n<td>It is a set of development tools that allows a programmer write a program using Java language.</td>\n</tr>\n<tr>\n<td>Libraries, sample code, supporting documentation etc.</td>\n<td>Consists of the programming tool’s selection components.</td>\n</tr>\n<tr>\n<td>Android SDK</td>\n<td>Java 8, Java 11, etc.</td>\n</tr>\n</tbody>\n</table>\n<h2>11. Define the terms: JDK, SDK, AVD, ADT</h2>\n<ul>\n<li><strong>JDK</strong> - An Android operating system program is developed in Java programming\nlanguage we have to install Java Development Kit (JDK) in computer.</li>\n<li><strong>SDK</strong> - API libraries, and emulator, documentation, sample code, developer\ntools, and tutorials which help us to build, test and debug apps form Android.</li>\n<li><strong>AVD</strong> - And Android Virtual Device (AVD) represents a device configuration.</li>\n<li><strong>ADT</strong> - Android Development Tool (ADT) in Android is a plugin for the\nEclipse IDE which provides a suitable environment to develop an Android\napplication where creation, compilation and debugging are possible.</li>\n</ul>\n<h2>Explain AVD in detail.</h2>\n<ul>\n<li>And Android Virtual Device(AVD) represents a device configuration.</li>\n<li>An AVD is a configuration that defines the characteristics of an Android phone\n, tablet, Wear OS, Android TV, or Automotive OS device that we want to\nsimulate in the Android Emulator.</li>\n<li>An AVD contains:\n<ul>\n<li><strong>Hardware profile</strong> - The hardware profile defines the characteristics of a device as shipped from the factory.</li>\n<li><strong>System image</strong> - A system image labeled with Google APIs includes access to Google Play services.</li>\n<li><strong>Storage area</strong> - The AVD has dedicated storage area on our development\nmachine.</li>\n<li><strong>Skin</strong> - An emulator skin specifics the appearance of a device.</li>\n</ul>\n</li>\n</ul>\n<h2>18. Differentiate between JVM and DVM.</h2>\n<table>\n<thead>\n<tr>\n<th>JVM</th>\n<th>DVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JVM supports multiple OS</td>\n<td>DVM supports only Android OS</td>\n</tr>\n<tr>\n<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>\n<td>DVM forms multiple class <code>.dex</code> byte code file.</td>\n</tr>\n<tr>\n<td>It is based on stack based VM architecture.</td>\n<td>It is based on register based VM architecture.</td>\n</tr>\n<tr>\n<td>JVM runs on more memory.</td>\n<td>DVM runs on less memory.</td>\n</tr>\n<tr>\n<td>The executable format of JVM is JAR.</td>\n<td>The executable format of DVM is APK.</td>\n</tr>\n<tr>\n<td>JVM has different content pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n<tr>\n<td>It runs <code>.class</code> byte code directly.</td>\n<td>The <code>.class</code> byte codes are optimized to <code>.odex</code> format before executing in DVM.</td>\n</tr>\n</tbody>\n</table>\n<h1>3. UI Components and Layouts</h1>\n<h2>2. Explain screen elements for Android.</h2>\n<h2>3. What is directory?</h2>\n<h2>4. Describe directory structure in detail.</h2>\n<h2>5. Explain the term fundamentals of UI design in detail.</h2>\n<ul>\n<li>Every item in a User Interfaces (UI) is a subclass of the Android View class\nwhic is present inside the package (android.view).</li>\n<li>The android SDK provides a set of pre-built views that can be used to\nconstruct the UI.</li>\n</ul>\n<h2>6. What is meant by layout?</h2>\n<p>A layout defines the stucture for User Interface in the application. There are\nnumber of Layouts provided by Android which we will use in almost all the\nAndroid applicatoins to provide different view, look and feel.</p>\n<h2>7. Explain Linearlayout with example.</h2>\n<ul>\n<li>Android LinearLayout is View group that aligns all children in either\nvertically or horizontally.</li>\n<li>Vertically or Horizontally direction depends on attribute\n<code>android:orientation</code> LinearLayout is simple and easy to use, it creates a\nscroll bar if the length of window exceeds the length of the screen.</li>\n<li>Attributes of LinearLayout: <code>id</code>, <code>orientation</code>, <code>layout_height</code>, <code>layout_weight</code>, <code>gravity</code>,\n<code>weight_sum</code>, <code>divider</code>.</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;LinearLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:orientation=&quot;vertical&quot;/&gt;\n  &lt;Button\n    android:id=&quot;@id/buttons&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Button&quot; /&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>8. Describe FrameLayout with example.</h2>\n<h2>9. Explain the following terms:</h2>\n<h3>(i) TableLayout</h3>\n<h3>(ii) AbsoluteLayout</h3>\n<h2>10. Define the term Layout.</h2>\n<p>A layout defines the stucture for User Interface in the application. There are\nnumber of Layouts provided by Android which we will use in almost all the\nAndroid applicatoins to provide different view, look and feel.</p>\n<h2>11. Write down the control flow of an Android application step by step.</h2>\n<h2>13. List the different components of a screen.</h2>\n<h2>14. Explain the term fundamentals of UI design in detail.</h2>\n<h2>15. List various layouts used in Android UI design.</h2>\n<h1>4. Designing User Interface with View</h1>\n<h2>1. What is UI?</h2>\n<ul>\n<li>User interface basic building block are View class.</li>\n<li>View is superclass for all the UI components.</li>\n<li>Input controls are interactive components in the app’s User Interface(UI).</li>\n</ul>\n<h2>2. Enlist elements of UI.</h2>\n<ul>\n<li><strong>View</strong> - View is superclass for all UI compnents.</li>\n<li><strong>TextView</strong> - displays text to the user and optionally allows them to edit\nit.</li>\n<li><strong>EditText</strong> - An editable text entry box that accepts multiline entry.</li>\n<li><strong>Button</strong> -whcih can be pressed, or clicked, by the user to perform an\naction.</li>\n<li><strong>ImageButton</strong> - shows button with an image that can be pressed or clicked by\nthe user.</li>\n<li><strong>ToggleButton</strong> - is used to display checked andunchecked state of a button.</li>\n<li><strong>RadioButton</strong> - A radiobutton has two states, either checked or unchecked.</li>\n<li><strong>RadioGroup</strong> - RadioButton are maninly used together in RadioGroup.</li>\n<li><strong>CheckBox</strong> - is an On/Off switch that can be toggled by the user.</li>\n<li><strong>ProgressBar</strong> - is used to show the progress of an operatin.</li>\n<li><strong>ListView</strong> - dispalys a vertically-scrollable collection of views, where\neach view is positioned immediately below the previous viewin the list.</li>\n<li><strong>GridView</strong> - shows items in two-dimensional scrolling grid.</li>\n<li><strong>ImageView</strong> - shows image with help <code>android.widget.imageView</code> class.</li>\n<li><strong>ScrollView</strong> - is a view group that is used to make vertically scrolllable\nviews.</li>\n</ul>\n<h2>3. What is TextView? How to create it? Explain with example.</h2>\n<ul>\n<li><strong>TextView</strong> - displays text to the user and optionally allows them to edit</li>\n<li>A standard read-only text label that supports string formatting, multiline\ndisplay and automatic word wrapping.</li>\n<li>Attributes of TextView:\n<ul>\n<li><strong>alpha</strong> - This property of the view as value between 0 and 1.</li>\n<li><strong>auto-link</strong> - controls whether links such as urls and email addresses.</li>\n<li><strong>gravity</strong> - attribute is optional attribute which is used to control the\nalignment of the text left, right, center, top, bottom, center_vertical,\ncenter_horizontal etc.</li>\n<li><strong>text</strong> - is used to set the text in TextView.</li>\n<li><strong>textColor</strong> - is used to set the text color.</li>\n<li><strong>textSize</strong> - is used to set the size of text.</li>\n<li><strong>textStyle</strong> - is used to set the text style.</li>\n<li><strong>background</strong> - is used to set the background.</li>\n<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout\n  xmlns:android=&quot;https://scemas.android.com/res/apk/android&quot;\n  android:orentation=&quot;vertical&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:layout_width=&quot;match_parent&quot;&gt;\n  &lt;TextView\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:text=&quot;Hello World&quot;\n    android:gravity=&quot;right&quot;\n    android:textColor=&quot;#2353&quot;\n    android:textSize=&quot;10px&quot;\n    android:background=&quot;#000&quot;\n    android:padding=&quot;10px&quot;/&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>4. Explain the term Button with example.</h2>\n<ul>\n<li><strong>Button</strong> -whcih can be pressed, or clicked, by the user to perform an\naction.</li>\n<li>There are different types of buttons used in android such as CompoundButton,\nToggleButton, RadioButton.</li>\n<li>Button is superclass of TextView class and compound button is the subclass of\nbutton class.</li>\n<li>Properties of Button:\n<ul>\n<li><strong>auto-link</strong> - controls whether links such as urls and email addresses are\nautomatically found and converted toclickable links.</li>\n<li><strong>clickable</strong> - defines whether this viewreacts to click events.</li>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>gravity</strong> - is an optional attribute which is used to control the\nalignement of text like left, right, top, bottom, center_vertical,\ncenter_horizontal etc.</li>\n<li><strong>text</strong> - is used to set the text in TextView.</li>\n<li><strong>textColor</strong> - is used to set the text color.</li>\n<li><strong>textSize</strong> - is used to set the size of text.</li>\n<li><strong>textStyle</strong> - is used to set the text style.</li>\n<li><strong>background</strong> - is used to set the background.</li>\n<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>\n<li><strong>drawableButton</strong>, <strong>drawableTop</strong>, <strong>drawableRight</strong>, <strong>drawableLeft</strong> -\nwe draw drawable to the left, right, top or bottom of text.</li>\n</ul>\n</li>\n</ul>\n<h2>5. What is ImageButton? How to create it? Explain with example.</h2>\n<ul>\n<li><strong>ImageButton</strong> - shows button with an image that can be pressed or clicked by\nthe user.</li>\n<li>Properties of ImageButton:\n<ul>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>src</strong> - is used to set a source file of image or we can say image in the\nimage button to make layout look attractive.</li>\n<li><strong>background</strong> - is used to set the background.</li>\n<li><strong>padding</strong> is used to set padding left, right, top or bottom</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:orientation=&quot;vertical&quot;/&gt;\n  &lt;ImageButton\n    android:id=&quot;@+id/imageButton&quot;\n    android:src=&quot;@drawable/button&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_width=&quot;wrap_content&quot;/&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>6. Describe the following UI elements with example.</h2>\n<h3>(i) ListView</h3>\n<ul>\n<li><strong>ListView</strong> - dispalys a vertically-scrollable collection of views, where\neach view is positioned immediately below the previous viewin the list.</li>\n<li>Properties of ListView:\n<ul>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>divider</strong> - This is a drawable or color draw between different list items.</li>\n<li><strong>dividerHeight</strong> - This specify the height of divider between list items.</li>\n<li><strong>listSelector</strong> - is used to set the selector of the listView.</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; endcoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:orientation=&quot;vertical&quot;&gt;\n  &lt;ListView\n    android:id=&quot;@+id/listView&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:divider=&quot;#000&quot;\n    android:dividerHeight=&quot;1dp&quot;/&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h3>(ii) ScrollView</h3>\n<ul>\n<li><strong>ScrollView</strong> - is a view group that is used to make vertically scrolllable</li>\n<li>It is a <code>FrameLayout</code> which put one child in it containg the whole contents to\nscroll.</li>\n<li>This is useful when we have too much to fit onto a single screen.</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  xmlns:app=&quot;https://schemas.android.com/tools&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:tools=&quot;.MainActivity&quot;&gt;\n  &lt;ScrollView\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;&gt;\n    &lt;TextView\n      android:id=&quot;@+id/textView&quot;\n      android:layout_height=&quot;wrap_content&quot;\n      android:layout_width=&quot;wrap_content&quot;\n      android:text=&quot;Hello World&quot;/&gt;\n  &lt;/ScrollView&gt;\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h3>(iii) GridView</h3>\n<ul>\n<li>A GridView is type of AdapterView that dispalyas items in two-dimensional\nscrolling grid.</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;androidx.contraintlayout.widget.ContraintLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:tools=&quot;.MainActivity&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_width=&quot;mathc_parent&quot;&gt;\n  &lt;gridview\n    android:id=&quot;@+id/idgv&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_widht=&quot;wrap_content&quot;\n    android:numcoumns=&quot;2&quot;\n    android:verticalspacing=&quot;6dp&quot;/&gt;\n&lt;/androidx.contraintlayout.widget.contraintlayout&gt;\n</code></pre>\n</li>\n</ul>\n<h3>(iv) imageview.</h3>\n<ul>\n<li><strong>imageview</strong> - shows image with help <code>android.widget.imageview</code> class.</li>\n</ul>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;androidx.contraintlayout.widget.contraintlayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:tools=&quot;.mainactivity&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:layout_width=&quot;match_parent&quot;&gt;\n  &lt;imageview\n    android:id=&quot;@+id/imageview&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:src=&quot;@drawable/image&quot;/&gt;\n&lt;/androidx.contraintlayout.widget.contraintlayout&gt;\n</code></pre>\n<h2>7. explain radiogroup with example.</h2>\n<ul>\n<li><strong>radiobutton</strong> - a radiobutton has two states, either checked or unchecked.</li>\n<li><strong>radiogroup</strong> - radiobutton are maninly used together in radiogroup.</li>\n<li>Properties of radiobutton:\n<ul>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>checked</strong> - in radio button is used to set the current state of radio\nbutton.</li>\n<li><strong>gravity</strong> - is an optional attribute which is used to control the\nalignement of text like left, right, top, bottom, center_vertical,\ncenter_horizontal etc.</li>\n<li><strong>text</strong> - is used to set the text in TextView.</li>\n<li><strong>textColor</strong> - is used to set the text color.</li>\n<li><strong>textSize</strong> - is used to set the size of text.</li>\n<li><strong>textStyle</strong> - is used to set the text style.</li>\n<li><strong>background</strong> - is used to set the background.</li>\n<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>\n<li><strong>drawableButton</strong>, <strong>drawableTop</strong>, <strong>drawableRight</strong>, <strong>drawableLeft</strong> -\nwe draw drawable to the left, right, top or bottom of text.</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:tools=&quot;.MainActivity&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:orientation=&quot;vertical&quot;&gt;\n  &lt;RadioGroup\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:id=&quot;@+id/radioGendar&quot;&gt;\n    &lt;RadioButton\n      android:id=&quot;@+id/radioMan&quot;\n      android:text=&quot;Man&quot;\n      android:layout_height=&quot;wrap_content&quot;\n      android:layout_width=&quot;wrap_content&quot;\n      android:checked=&quot;true&quot;/&gt;\n    &lt;RadioButton\n      android:id=&quot;@+id/radioGirl&quot;\n      android:text=&quot;Women&quot;\n      android:layout_height=&quot;wrap_content&quot;\n      android:layout_width=&quot;wrap_content&quot;\n      android:checked=&quot;false&quot;/&gt;\n  &lt;RadioGroup&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>8. With the help of example describe ToggleButton.</h2>\n<ul>\n<li><strong>ToggleButton</strong> - is used to display checked and unchecked state of a button.</li>\n<li>It is subclass of compound Button.</li>\n<li>Properties of radiobutton:\n<ul>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>checked</strong> - in radio button is used to set the current state of radio\nbutton.</li>\n<li><strong>gravity</strong> - is an optional attribute which is used to control the\nalignement of text like left, right, top, bottom, center_vertical,\ncenter_horizontal etc.</li>\n<li><strong>textOn</strong> and <strong>textOff</strong> - is used to set the text when toggle button is\nin checked state.</li>\n<li><strong>textColor</strong> - is used to set the text color.</li>\n<li><strong>textSize</strong> - is used to set the size of text.</li>\n<li><strong>textStyle</strong> - is used to set the text style.</li>\n<li><strong>background</strong> - is used to set the background.</li>\n<li><strong>padding</strong> - is used to set hte padding from left, right, top to bottom.</li>\n<li><strong>drawableButton</strong>, <strong>drawableTop</strong>, <strong>drawableRight</strong>, <strong>drawableLeft</strong> -\nwe draw drawable to the left, right, top or bottom of text.</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;androidx.contraintlayout.widget.ContraintLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:tools=&quot;.MainActivity&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;&gt;\n  &lt;ToggleButton\n    android:id=&quot;@+id/simpleToggleButton&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:layout_gravity=&quot;center_horizontal&quot;\n    android:checked=&quot;false&quot;\n    android:textOn=&quot;On&quot;\n    android:textOff=&quot;Off&quot;/&gt;\n&lt;/android.contraintlayout.wiget.ContraintLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>10. How to custom toast alert?</h2>\n<ul>\n<li>Toast is used to display information for a period of time.</li>\n<li>It contains a message to be displayed quickly and disappears after specified\nperiod of time.</li>\n<li>It does not block the user interaction.</li>\n<li>Tost are not clickable.</li>\n<li>Exmaple:<pre><code class=\"language-java\">Toast.makeText(getApplicationContext(), &quot;Simple Toast in Android&quot;,\n  Toast.LENGTH_LONG);\n</code></pre>\n</li>\n</ul>\n<h2>11. Describe Date and Time picker with example.</h2>\n<h3>DatePicker</h3>\n<ul>\n<li>\n<p>DatePicker is a widget used to select a date.</p>\n</li>\n<li>\n<p>It allows to select date by date, month and year in our custom UI.</p>\n</li>\n<li>\n<p>If we need to show this view as a dialog then wehave to use a DatePickerDialog\nclass.</p>\n</li>\n<li>\n<p>Example:</p>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  android:tools=&quot;.MainActivity&quot;\n  android:orentation=&quot;vertical&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:layout_width=&quot;mathc_parent&quot;/&gt;\n  &lt;DatePicker\n    android:id=&quot;@+id/datepicker&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:datePickerMode=&quot;spinner&quot;/&gt;\n&lt;/LinearLayout&gt;\n</code></pre>\n</li>\n<li>\n<p>Method of DatePicker:</p>\n<ul>\n<li><code>setSpinnersShow(boolen show)</code> - This method is used to set whether the\nsinner of the TimePicker in shown or not.</li>\n<li><code>getDayOfMonth()</code> - This method is used to get selected day of the month.</li>\n<li><code>getMonth()</code> - This method is used to get the selected month from a date\npicker.</li>\n<li><code>getYear()</code> - This method is used to get the selected year from a date\npicker.</li>\n<li><code>getFirstDayOfWeek()</code> - This method is used to get the first day of the\nweek.</li>\n</ul>\n</li>\n<li>\n<p>Attributes of DatePicker:</p>\n<ul>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>datePickerMode</strong> - This attribute is used to set the DatePicker.</li>\n</ul>\n</li>\n</ul>\n<h3>TimePicker</h3>\n<ul>\n<li>Is a widget used for selecting the time of the day in either AM/PM mode or 24\nhours mode.</li>\n<li>The displayed time consist of hours, minutes and clock format.</li>\n<li>Method of TimePicer:\n<ul>\n<li><code>setCurrentHour(integer currentHour)</code> - This method is used to set the\ncurrent hours in a TimePicker.</li>\n<li><code>setHour(Integer hour)</code> - This method is used to set the current hours in\nTimePicker.</li>\n<li><code>setCurrentMinute(Integer currentMinute)</code> - This method is used to set the\ncurrent minutes in a time.</li>\n<li><code>setMinute(Integer minute)</code> - This method is used to set the current minute\nin time.</li>\n<li><code>setIs24HourView(Boolean is24HourView)</code> - This method is used to set the\nmode of Time picker either 24 hours mode or AM/PM mode.</li>\n<li><code>is24HourView()</code> - This method is used to check the current mode of the\ntime picker.</li>\n<li><code>setOnTimeChangedListenar()</code> - This method is used to set the callback that\nindicates the time has been adjusted by the user.</li>\n</ul>\n</li>\n<li>Attributes of TimePicker:\n<ul>\n<li><code>timePickerMode</code> - The time picker mode is attribute of time picker used to\nset the mode either spinner or clock.</li>\n</ul>\n</li>\n</ul>\n<h2>12. What is progress bar? How to create it?</h2>\n<ul>\n<li>ProgressBar is used to show the progress of an operation.</li>\n<li>ProgressBar is a visual indicator of progress in a number of operation.</li>\n<li>Attributes of DatePicker:\n<ul>\n<li><strong>id</strong> - is an attribute used to uniquely identify a text button.</li>\n<li><strong>max</strong> - is an attribute used in android to define maximum value of the\nprogress can take.</li>\n<li><strong>progress</strong> - is an attribute used in android to define the default\nprogress value between 0 and Max.</li>\n<li><strong>progressBrawable</strong> - is an attribute used to set the custom drawable for\nthe progress mode.</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;mathc_parent&quot;/&gt;\n  &lt;ProgressBar\n    android:id=&quot;@+id/progressBar&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:max=&quot;100&quot;\n    android:progress=&quot;0&quot;\n    android:progressDrawable=&quot;@drawable/progress&quot;/&gt;\n&lt;/RelativeLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>14. Describe the following with example:</h2>\n<h3>(ii) CheckBox.</h3>\n<ul>\n<li>Is an On/Off switch that can be toggled by the user.</li>\n<li>A two-state represented by a checked or unchecked box.</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;https://schemas.android.com/tools&quot;\n  xmlns:app=&quot;https://schemas.android.com/apk/res-auto&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;mathc_parent&quot;/&gt;\n  &lt;CheckBox\n    android:id=&quot;@+id/check1&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Android&quot;\n    android:checked=&quot;true&quot;/&gt;\n  &lt;CheckBox\n    android:id=&quot;@+id/check1&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;ISO&quot;\n    android:checked=&quot;true&quot;/&gt;\n  &lt;CheckBox\n    android:id=&quot;@+id/check1&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;KaiOS&quot;\n    android:checked=&quot;true&quot;/&gt;\n&lt;/RelativeLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h2>15. Draw the hierarchy of designing User Interface (UI) with View.</h2>\n<pre><code>┌────┐\n│View├───────────────────────┐\n└─┬──┤                       │\n  │  └────────┐              │\n  │           │              │\n ┌┴───────┐ ┌─┴───────┐ ┌────┴────┐\n │TextView│ │ImageView│ │ViewGroup│\n └───┬─┬──┘ └────┬────┘ └─────────┘\n     │ │         │\n     │ └──────┐  └──────┐\n     │        │         │\n ┌───┴────┐ ┌─┴────┐ ┌──┴────────┐\n │EditText│ │Button│ │ImageButton│\n └────────┘ └┬──┬─┬┘ └───────────┘\n             │  │ │\n    ┌────────┘  │ └──────────┐\n    │           │            │\n ┌──┴─────┐ ┌───┴───────┐ ┌──┴─────────┐\n │CheckBox│ │RadioButton│ │ToggleButton│\n └────────┘ └───────────┘ └────────────┘\n</code></pre>\n<h2>16. Describe the term “edit text” with example.</h2>\n<ul>\n<li>An editable text enty box that accepts multiline entry, word wrapping and\nhint text.</li>\n<li>A EditText is an overlay over TextView that configures itself to be\neditable.</li>\n<li>Example:<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;https://schemas.android.com/apk/res/android&quot;\n  xmlns:tools=&quot;https://scheams.android.com/tools&quot;\n  xmlns:app=&quot;https://scheams.android.com/apk/res-auto&quot;\n  android:layout_width=&quot;match_parent&quot;\n  android:layout_height=&quot;match_parent&quot;\n  android:tools=&quot;.MainActivity&quot;&gt;\n  &lt;EditText\n    android:id=&quot;@+id/editIt&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:hint=&quot;Name:&quot;\n    android:selectAllOnFocus=&quot;true&quot;\n    android:inputType=&quot;textPersonName&quot;/&gt;\n&lt;/RelativeLayout&gt;\n</code></pre>\n</li>\n</ul>\n<h1>5. Activity &amp; Multimedia with Database</h1>\n<h2>Activity</h2>\n<ul>\n<li>An activity represents a single screen with user interface just like window\nor frame of Java.</li>\n<li>Android activity is the subclass of ContextThemeWrapper class.</li>\n<li>In C, C++ or Java programming language you must have seen that your program\nstats from <code>main()</code> function.</li>\n<li>Android sytem iniiates its program with an Activity starting with a call\n<code>onCreate()</code> callback method.</li>\n</ul>\n<h2>Draw the activity life cycle.</h2>\n<pre><code>                             ┌┬────────┬┐\n                             ││Activity││\n                             ││launched││\n                             └┴────┬───┴┘\n                                   │\n                              ┌────▼─────┐\n         ┌────────────────────►onCreate()│\n         │                    └────┬─────┘\n         │                         │\n         │                    ┌────▼────┐                    ┌───────────┐\n         │                    │onStart()◄────────────────────┤onRestart()│\n         │                    └────┬────┘                    └───────▲───┘\n         │                         │                                 │\nUser navigates                ┌────▼─────┐                           │\nto the activity               │onResume()◄───────────────┐           │\n         │                    └────┬─────┘               │           │\n         │                         │                     │           │\n  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │\n  ││App process││            ││Activity││                │           │\n  ││killed     ││            ││Running ││                │           │\n  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │\n         │                         │                     │           │\n         │                         ▼                     │           │\nApps with higher priority   Another activity comes   User returns    │\nneed memory                 into the foreground      to the activity │\n         │                         │                     │           │\n         │                         │                     │           │\n         │                    ┌────▼────┐                │           │\n         │                    │onPause()├────────────────┘           │\n         │                    └────┬────┘                            │\n         │                         │                                 │\n         │                         │                                 │\n         │                  The activity is                          │\n         │                  no longer visible                        │\n         │                         │                        User navigates\n         │                         │                        to the activity\n         │                    ┌────▼───┐                             │\n         └────────────────────┤onStop()├─────────────────────────────┘\n                              └────┬───┘\n                                   │\n                                   │\n                            The activity is finishing or\n                            being destroyed by the system\n                                   │\n                                   │\n                              ┌────▼──────┐\n                              │onDestroy()│\n                              └────┬──────┘\n                                   │\n                             ┌┬────▼────┬┐\n                             ││Activity ││\n                             ││Shut Down││\n                             └┴─────────┴┘\n</code></pre>\n<h2>Explain activity lifecycle?</h2>\n<ul>\n<li>The android Activity is the subclass of ContextThemeWrapper class.</li>\n<li>An activity is the single screen in android. It is like window or frame of\nJava.</li>\n<li>By the help of activity, you can place all your UI components or widgets in a\nsingle screen.</li>\n<li><strong>7 lifecycle methods of android activity.</strong></li>\n<li><strong>onCreate</strong> - called when activity is first created.</li>\n<li><strong>onStart</strong> - called when activity is becoming visible to the user.</li>\n<li><strong>onResume</strong> - called when activity will start interacting with the user.</li>\n<li><strong>onPause</strong> - called when activity is not visible to the user.</li>\n<li><strong>onStop</strong> - called when activity is no longer visible to the user.</li>\n<li><strong>onRestart</strong> - called after your activity is stopped, prior to start.</li>\n<li><strong>onDestroy</strong> - called before the activity is destroyed.</li>\n</ul>\n<h2>What are intents(<code>Implict</code> and <code>explicit</code> intent)?</h2>\n<ul>\n<li>Android Intent is the message that is passed between components such as\nactivities, content providers, broadcast receivers, services etc.</li>\n<li>It is generally used with <code>startActivity()</code> method to invoke activity,\nbroadcast receivers etc.  The dictionary meaning of intent is intention or\npurpose.</li>\n<li>So, it can be described as the intention to do action.</li>\n<li>The LabeledIntent is the subclass of android.content.Intent class.</li>\n<li>Android intents are mainly used to:\n<ul>\n<li>Start the service</li>\n<li>Launch an activity</li>\n<li>Display a web page</li>\n<li>Display a list of contacts</li>\n<li>Broadcast a message</li>\n<li>Dial a phone call etc</li>\n</ul>\n</li>\n</ul>\n<h3>Implicit intent</h3>\n<p>The implicit intent is the intent where instead of defining the exact\ncomponents, you define the action that you want to perform for different\nactivities.</p>\n<h3>Explicit intent</h3>\n<p>An explicit intent is an intent where you explicitly define the component that\nneeds to be called by Android System. An explicit intent is one that you use to\nlaunch a specific app component, such s a particular activity or service in\nyour app.</p>\n<h2>Explain content provider?</h2>\n<ul>\n<li>Android system allows the content provider to store the application data in\nseveral ways. Users can manage to store the application data like\n<ul>\n<li>Images</li>\n<li>Audio</li>\n<li>Videos</li>\n<li>Personal contact information by storing them in:\n<ul>\n<li>SQLite Database</li>\n<li>Files</li>\n<li>Network.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>In order to share the data, content providers have certain permissions that\nare used to grant or restrict the rights to other applications to interfere\nwith the data.</li>\n</ul>\n<h2>List sensors in Android and explain anyone in detail.</h2>\n<p>The Android platform supports following three broad categories of sensors:</p>\n<ul>\n<li>Motion Sensors</li>\n<li>Environmetal Sensors</li>\n<li>Position sensors</li>\n</ul>\n<h3>Motion Sensors:</h3>\n<ul>\n<li>A motion sensor (or motion detector) is an electronic device that is designed\nto detect and measure movement.</li>\n<li>Motion sensors are used primarily in home and business security systems.</li>\n<li>These sensors measure acceleration forces and rotational forces along three\naxes.</li>\n<li>This category includes accelerometers, gravity sensors, gyroscopes, and\nrotational vector sensors.</li>\n</ul>\n<h3>Position Sensors</h3>\n<p>These are used to measure the physical position of device.</p>\n<h3>Environmental Sensors</h3>\n<p>These are used to measure the environmental changes such as temperature, humidity\netc</p>\n<h2>Define Services in Android OS.</h2>\n<ul>\n<li>A service is an application component which runs withour direst interaction\nwith the user in the background.</li>\n<li>Services are used for repetitive and potentially long running operations:\n<ul>\n<li>Internet downloads</li>\n<li>Checking for new data</li>\n<li>Data processing</li>\n<li>Updating content</li>\n<li>Providers and the like</li>\n</ul>\n</li>\n<li>They typically run in the background to perform long-running operations or\nwork for remote processes.</li>\n</ul>\n<h2>CONTENT URI</h2>\n<ul>\n<li>Content URI(Uniform Resource Identifier) is the key concept of Content\nproviders.</li>\n<li>To access the data from a content provider, URI is used as a query string.</li>\n<li>Structure of a Content URI:\n<ul>\n<li>content:// – Mandatory part of the URI as it represents that the given URI\nis a Content URI.</li>\n<li>authority – Signifies the name of the content provider like contacts,\nbrowser, etc. This part must be unique for every content provider.</li>\n<li>optionalPath – Specifies the type of data provided by the content provider.\nIt is essential as this part helps content providers to support different\ntypes of data that are not related to each other like audio and video files.</li>\n<li>optionalID – It is a numeric value that is used when there is a need to\naccess a particular record.</li>\n</ul>\n</li>\n</ul>\n<h2>WORKING OF THE CONTENT PROVIDER</h2>\n<ul>\n<li>UI components of android applications like Activity and Fragments use an object\nCursorLoader to send query requests to ContentResolver.</li>\n<li>The ContentResolver object sends requests (like create, read, update, and\ndelete) to the ContentProvider as a client.</li>\n<li>After receiving a request, ContentProvider process it and returns the desired\nresult.</li>\n</ul>\n<h2>CREATE CONTENT PROVIDER</h2>\n<p>This involves number of simple steps to create your own content provider.</p>\n<ul>\n<li>First of all you need to create a Content Provider class that extends the\nContentProviderbaseclass.</li>\n<li>Second, you need to define your content provider URI address which will be\nused to access the content.</li>\n<li>Next you will need to create your own database to keep the content.</li>\n<li>Next you will have to implement Content Provider queries to perform different\ndatabase specific operations.</li>\n<li>Finally register your Content Provider in your activity file using <provider>\ntag.</li>\n<li>Methods which you need to override in Content Provider class:\n<ol>\n<li>onCreate() This method is called when the provider is started.</li>\n<li>query() This method receives a request from a client. The result\nis returned as a Cursor object.</li>\n<li>insert()This method inserts a new record into the content\nprovider.</li>\n<li>delete() This method deletes an existing record from the content\nprovider.</li>\n<li>update() This method updates an existing record from the\ncontent provider.</li>\n<li>getType() This method returns the MIME type of the data at the\ngiven URI.</li>\n</ol>\n</li>\n</ul>\n<h2>FRAGMENT</h2>\n<ul>\n<li>A Fragment is a piece of an activity which enable more modular activity\ndesign.</li>\n<li>You create fragments by extending Fragment class and You can insert a fragment\ninto your activity layout by declaring the fragment in the activity’s layout\nfile, as a <fragment> element.</li>\n<li>A fragment has its own layout and its own behaviour with its own life cycle\ncallbacks.</li>\n<li>You can add or remove fragments in an activity while the activity is running.</li>\n<li>You can combine multiple fragments in a single activity to build a multi-pane\nUI.</li>\n<li>A fragment can be used in multiple activities.</li>\n</ul>\n<h2>ANDROID FRAGMENT LIFECYCLE METHODS</h2>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onAttach(Activity)</td>\n<td>it is called only once when it is attached with activity.</td>\n</tr>\n<tr>\n<td>onCreate(Bundle)</td>\n<td>It is used to initialize the fragment.</td>\n</tr>\n<tr>\n<td>onCreateView(LayoutInflater, ViewGroup, Bundle)</td>\n<td>creates and returns view hierarchy.</td>\n</tr>\n<tr>\n<td>onActivityCreated(Bundle)</td>\n<td>It is invoked after the completion of onCreate() method.</td>\n</tr>\n<tr>\n<td>onViewStateRestored(Bundle)</td>\n<td>It provides information to the fragment that all the saved state of fragment view hierarchy has been restored.</td>\n</tr>\n<tr>\n<td>onStart()</td>\n<td>makes the fragment visible.</td>\n</tr>\n<tr>\n<td>onResume()</td>\n<td>makes the fragment interactive.</td>\n</tr>\n<tr>\n<td>onPause()</td>\n<td>is called when fragment is no longer interactive.</td>\n</tr>\n<tr>\n<td>onStop()</td>\n<td>is called when fragment is no longer visible.</td>\n</tr>\n<tr>\n<td>onDestroyView()</td>\n<td>allows the fragment to clean up resources.</td>\n</tr>\n<tr>\n<td>onDestroy()</td>\n<td>allows the fragment to do final clean up of fragment state.</td>\n</tr>\n<tr>\n<td>onDetach()</td>\n<td>It is called immediately prior to the fragment no longer being associated with its activity.</td>\n</tr>\n</tbody>\n</table>\n<h2>MEDIAPLAYER CLASS</h2>\n<ul>\n<li>We can play and control the audio files in android by the help of MediaPlayer\nclass.</li>\n<li>The android.media.MediaPlayer class is used to control the audio or video\nfiles.\n|                                                Method &amp; description                                                |\n|:------------------------------------------------------------------------------------------------------------------:|\n| <code>isPlaying()</code> This method just returns true/false indicating the song is playing or not                            |\n| <code>seekTo(position)</code> This method takes an integer, and move song to that particular position millisecond             |\n| <code>getCurrentPosition()</code> This method returns the current position of song in milliseconds                            |\n| <code>getDuration()</code> This method returns the total time duration of song in milliseconds                                |\n| <code>reset()</code> This method resets the media player                                                                      |\n| <code>release()</code> This method releases any resource attached with MediaPlayer object                                     |\n| <code>setVolume(float leftVolume, float rightVolume)</code> This method sets the up down volume for this player               |\n| <code>setDataSource(FileDescriptor fd)</code> This method sets the data source of audio/video file                            |\n| <code>selectTrack(int index)</code> This method takes an integer, and select the track from the list on that particular index |\n| <code>getTrackInfo()</code> This method returns an array of track information                                                 |</li>\n</ul>\n<h2>TEXTTOSPEECH</h2>\n<ul>\n<li>Android allows you convert your text into voice. Not only you can convert it\nbut it also allows you to speak text in variety of different languages.</li>\n<li>TextToSpeech class is responsible to convert text into speech.</li>\n<li>It provides a lot of methods to control the speech such as setSpeedRate(),\nsetPitch() etc.\n|                                               Method &amp; description                                              |\n|:---------------------------------------------------------------------------------------------------------------:|\n| <code>addSpeech(String text, String filename)</code> This method adds a mapping between a string of text and a sound file. |\n| <code>getLanguage()</code> This method returns a Locale instance describing the language.                                  |\n| <code>isSpeaking()</code> This method checks whether the TextToSpeech engine is busy speaking.                             |\n| <code>setPitch(float pitch)</code> This method sets the speech pitch for the TextToSpeech engine.                          |\n| <code>setSpeechRate(float speechRate)</code> This method sets the speech rate.                                             |\n| <code>shutdown()</code> This method releases the resources used by the TextToSpeech engine.                                |\n| <code>stop()</code> This method stop the speak.                                                                            |</li>\n</ul>\n<h2>Android AsyncTask example and explanation</h2>\n<ul>\n<li>Android AsyncTask going to do background operation on background thread and\nupdate on main thread.</li>\n<li>In android we cant directly touch background thread to\nmain thread in android development. asynctask help us to make communication\nbetween background thread to main thread.</li>\n</ul>\n<h3>Methods of AsyncTask</h3>\n<ul>\n<li><code>onPreExecute()</code> − Before doing background operation we should show something\non screen like progressbar or any animation to user. we can directly\ncomminicate background operation using on</li>\n<li><code>doInBackground()</code> -  but for the best practice, we should call all asyncTask\nmethods .</li>\n<li><code>doInBackground(Params)</code> − In this method we have to do background operation\non background thread. Operations in this method should not touch on any\nmainthread activities or fragments.</li>\n<li><code>onProgressUpdate(Progress…)</code> − While doing background operation, if you want\nto update some information on UI, we can use this method.</li>\n<li><code>onPostExecute(Result)</code> − In this method we can update ui of background\noperation result.</li>\n</ul>\n<h3>Generic Types in Async Task</h3>\n<ul>\n<li><code>TypeOfVarArgParams</code> − It contains information about what type of params used\nfor execution.</li>\n<li><code>ProgressValue</code> − It contains information about progress units. While doing\nbackground operation we can update information on ui using onProgressUpdate().</li>\n<li><code>ResultValue</code> −It contains information about result type.</li>\n</ul>\n<h2>LOCATION BASED SERVICES</h2>\n<ul>\n<li>Android location APIs make it easy for you to build location-aware\napplications, without needing to focus on the details of the underlying\nlocation technology.</li>\n<li>This becomes possible with the help of Google Play services, which facilitates\nadding location awareness to your app with automated location tracking,\ngeofencing, and activity recognition.</li>\n<li>For this Google provides us a library via Google Play Services for using maps.</li>\n<li>In order to use the Google Maps API, you must register your application on\nthe Google Developer Console and enable the API.</li>\n</ul>\n<h2>SMS TELEPHONY</h2>\n<ul>\n<li>In Android, you can use SmsManager API or devices Built-in SMS application to\nsend SMS’s.</li>\n<li>SmsManager API<pre><code class=\"language-java\">SmsManager smsManager = SmsManager.getDefault();\nsms.sendTextMessage(&quot;8802177690&quot;, null, &quot;hello javatpoint&quot;, pi,null);\n</code></pre>\n</li>\n<li>Built-in SMS application<pre><code class=\"language-java\">Intent sendIntent = new Intent(Intent.ACTION_VIEW);\nsendIntent.putExtra(&quot;sms_body&quot;, &quot;default content&quot;);\nsendIntent.setType(&quot;vnd.android-dir/mms-sms&quot;);\nstartActivity(sendIntent);\n</code></pre>\n</li>\n<li>Both need SEND_SMS permission.<pre><code class=\"language-xml\">&lt;uses-permission android:name=&quot;android.permission.SEND_SMS&quot; /&gt;\n</code></pre>\n</li>\n</ul>",
      "date_published": "2022-12-14T23:32:28.894Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Notes&description=Android%201.%20What%20is%20Mobile%20application?%20%20A%20mobile%20application,%20most%20commonly%20referred%20to%20as%20an%20app,%20is%20a%20type%20of%20application%20software%20deigned%20to%20run%20on%20a%20mobile%20device,%20such%20as%20a%20smart%20phone%20or%20tablet%20computer.%20Mobile%20app%20development%20is%20the%20process%20by%20which%20a%20mobile%20applications%20i&right_meta=AK%23Notes&background_color=%23bd8bf2"
    }
  ]
}