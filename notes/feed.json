{
  "version": "https://jsonfeed.org/version/1",
  "title": "AK#Notes",
  "home_page_url": "https://anzenkodo.github.io/notes",
  "feed_url": "https://anzenkodo.github.io/notes/feed.json",
  "description": "This my personal website where I post my notes about thing that I have learn.",
  "favicon": "https://anzenkodo.github.io/notes/favicon.png",
  "icon": "https://anzenkodo.github.io/notes/favicon.png",
  "author": {
    "name": "Axel",
    "url": "https://AnzenKodo.github.io/"
  },
  "items": [
    {
      "id": "https://anzenkodo.github.io/notes/",
      "url": "https://anzenkodo.github.io/notes/",
      "title": "Home",
      "content_html": "<p>This my personal website where I post my notes about thing that I have learn.</p>\n<h2>Features</h2>\n<ul>\n<li>Easy to:\n<ul>\n<li>Setup</li>\n<li>Configure</li>\n<li>Write</li>\n</ul>\n</li>\n<li>Supports:\n<ul>\n<li>Tags</li>\n<li>Search (Power by <a href=\"https://duckduckgo.com/\">DuckDuckGo</a>)</li>\n<li>Canonical</li>\n<li><a href=\"https://ogp.me/\">Open Graph</a></li>\n<li>Analytics</li>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a></li>\n</ul>\n</li>\n<li>Auto generate:\n<ul>\n<li>GitHub Pages Actions file</li>\n<li>Favicon</li>\n<li>Sitemap</li>\n<li>404 page</li>\n<li>CSS</li>\n<li><code>mainfest.json</code> file</li>\n<li>Feeds\n<ul>\n<li>RSS</li>\n<li>JSON</li>\n<li>Atom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>No Client side JavaScript</li>\n<li>Minified HTML &amp; Inline CSS</li>\n<li>Lightweight</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<ul>\n<li>Download deno from <a href=\"https://deno.land/\">https://deno.land/</a> and install it.</li>\n<li>After installing deno run following commands.</li>\n</ul>\n<pre><code class=\"language-sh\"># Install the dblog\ndeno run https://deno.land/x/dblog/install.js # Add deno to path, if you didn't already.\n\n# See all the options that are available\ndblog --help\n\n# Setup the your blog (Skip this if already your blog setup)\ndblog --setup\n\n# Make your blog and Run on localhost\ndblog --serve\n</code></pre>\n<h3>Update</h3>\n<p>To update dblog, rerun the installation command.</p>\n<pre><code class=\"language-sh\">deno run https://deno.land/x/dblog/install.js\n</code></pre>\n<h3>Run dblog without installing dblog</h3>\n<pre><code class=\"language-sh\">deno run -A https://deno.land/x/dblog/mod.js --help\n</code></pre>\n<h2>Live Demo &amp; Folder</h2>\n<ul>\n<li><a href=\"https://anzenkodo.github.io/dblog\">Live Demo</a></li>\n<li><a href=\"https://github.com/AnzenKodo/dblog/tree/gh-pages\">Generated Files</a></li>\n</ul>\n<h2>Configuration</h2>\n<p>Place <code>config.json</code> in root folder to edit default configuration. The\n<code>config.json</code> is optional.</p>\n<p><strong>The <code>config.json</code> with default configuration:</strong></p>\n<pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;dblog&quot;,\n  &quot;start_url&quot;: &quot;https://AnzenKodo.github.io/dblog/&quot;,\n  &quot;description&quot;: &quot;dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.&quot;,\n  &quot;email&quot;: &quot;&quot;,\n  &quot;author&quot;: &quot;AnzenKodo&quot;,\n  &quot;posts&quot;: &quot;./posts&quot;,\n  &quot;output&quot;: &quot;./site&quot;,\n  &quot;favicon&quot;: &quot;favicon.svg&quot;,\n  &quot;lang&quot;: &quot;en-US&quot;,\n  &quot;port&quot;: 8000,\n  &quot;background&quot;: &quot;#ffffff&quot;,\n  &quot;foreground&quot;: &quot;#000000&quot;,\n  &quot;theme&quot;: &quot;#01a252&quot;,\n  &quot;footer&quot;: &quot;&lt;p&gt;Made by &lt;a href=\\&quot;https://AnzenKodo.github.io/AnzenKodo\\&quot;&gt;AnzenKodo&lt;/a&gt; under &lt;a href=\\&quot;https://anzenkodo.github.io/dblog/LICENSE\\&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;\\n&quot;,\n  &quot;page404&quot;: &quot;404 Page Not Found, Sorry :(&quot;,\n  &quot;backup&quot;: false,\n  &quot;exclude&quot;: [\n    &quot;config.json&quot;,\n    &quot;backup.json&quot;\n  ],\n  &quot;nav&quot;: {},\n  &quot;head&quot;: &quot;&quot;\n}\n</code></pre>\n<p><strong>Note:</strong> Every option is optional.</p>\n<ul>\n<li><strong>name</strong> - Name of your blog.</li>\n<li><strong>start_url</strong> - Start URL of your site. <em>Example:</em> ‘<a href=\"https://example.com/\">https://example.com/</a>’,\n‘<a href=\"https://blog.example.com/\">https://blog.example.com/</a>’, ‘<a href=\"https://example.com/blog/\">https://example.com/blog/</a>’</li>\n<li><strong>email</strong> - Your email address. This will enable ‘Reply with Email’ button in\nposts.</li>\n<li><strong>author</strong> - Your name or username.</li>\n<li><strong>posts</strong> - Path of posts.</li>\n<li><strong>output</strong> - Folder where your blog build will be placed. <em>Example:</em> ‘./blog’,\n‘…/site/blog’, ‘site/blog’.</li>\n<li><strong>favicon</strong> - <em><strong>Recommended 500x500px</strong></em>. Favicon location. <em>If empty,\ngenerated favicon will be used</em>. <em>Example:</em> ‘./favicon.png’,\n‘./static/favicon.icon’, ‘…/favicon.jpg’.</li>\n<li><strong>lang</strong> - Blog language in ‘RFC 5646’ format. Example: ‘ja’ for Japanese,\n‘sv’ for Swedish, ‘it’ for Italian. See\n<a href=\"https://wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags\">List of common primary language subtags in Wikipedia</a></li>\n<li><strong>footer</strong> - Footer of your website. <em>Supports CommonMark Markdown format</em>.\n<em>Example:</em>\n<code>Made by [AnzenKodo](https://AnzenKodo.github.io/AnzenKodo) uder [MIT License](https://anzenkodo.github.io/dblog/LICENSE.html)</code>.</li>\n<li><strong>port</strong> - Port of your blog on localhost. <em>Example</em>: ‘8080’, ‘8300’, ‘8400’.</li>\n<li><strong>background</strong> - Background color in light mode. Becomes foreground color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>foreground</strong> - Foreground color in light mode. Becomes background color in\nlight mode. <em>Example:</em> ‘#000000’, &quot;#ffffff’, ‘##FEFBFE’.</li>\n<li><strong>theme</strong> - Blog theme color. <em>Example:</em> ‘#0583f2’, ‘#f20544’, ‘#f2b705’.</li>\n<li><strong>page404</strong> - 404 page message. <em>Example:</em> ‘Sorry, page not found :(’.</li>\n<li><strong>backup</strong> - Backup file location. <em>Example:</em> <code>false</code> to don’t generate\n<code>backup.json</code> file, ‘./backup.json’, ‘./site/backup.json’, ‘…/backup.json’.</li>\n<li><strong>exclude</strong> - Exclude files or folder. <em>Example:</em><pre><code class=\"language-json\">&quot;exclude&quot;: [ &quot;.env&quot;, &quot;todo.md&quot;, &quot;drafts&quot; ],\n</code></pre>\n</li>\n<li><strong>nav</strong> - Nav bar item list. Example:<pre><code class=\"language-json\">&quot;nav&quot;: {\n  &quot;about&quot;: &quot;./about.md&quot;,\n  &quot;stie&quot;: &quot;https://anzenkodo.github.io/AnzenKodo&quot;\n}\n</code></pre>\n</li>\n<li><strong>head</strong> - If you analytics or any other tags you want to put on head tag.\n<em>Example:</em>\n<code>&lt;link rel=&quot;preconnect&quot; href=&quot;//www.google-analytics.com&quot; crossorigin=&quot;&quot;&gt;</code>.</li>\n</ul>\n<h2>CLI Options</h2>\n<pre><code class=\"language-sh\">dblog blog generator, that generates blog from Markdown and JSON file. dblog handles technical parts, so you can focus on hard part writing.\n\nWebsite: https://anzenkodo.github.io/dblog\nPackage: https://deno.land/x/dblog\nRepo: https://github.com/AnzenKodo/dblog\nDocs: https://anzenkodo.github.io/dblog/posts/dblog-Docs.html\n\nUSAGE:\n  dblog [OPTIONS]\n\nOPTIONS:\n  --serve   Build blog and Start localhost.\n    --noopen  Don't open browser, when starting localhost.\n  --build   Build blog without starting localhost.\n  --setup   Setup new blog.\n  --backup  Restore blog if 'backup.json' file available.\n  --readme  Generate 'README.md' file.\n  --help    Print help information.\n</code></pre>\n<h2>File Options</h2>\n<pre><code>---\ntitle: If empty the file name will be used\ndescription: If empty the first paragraph will be used.\ntags: [ &quot;tag1&quot;, &quot;tag2&quot; ]\ndate: 20/08/2020\ncanonical:\n---\n</code></pre>\n<ul>\n<li><strong>date</strong> - If empty, the file date will be used. <em>Note:</em> The file <code>date</code> might\nnot always right. So always give you own date.</li>\n<li><strong>canonical</strong> - Share content between multiple sites without impacting SEO.\nJust put canonical URL. Know more about\n<a href=\"https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls\">canonical url</a>.</li>\n</ul>\n<h3>If file name start with underscore “_” it will be consider as draft.</h3>\n<p><strong>Example:</strong> <code>posts/_This is draft.md</code></p>\n<h2>Markdown Guide</h2>\n<h3><a href=\"https://commonmark.org/help/\">CommonMark</a> Syntex</h3>\n<h4>Heading</h4>\n<pre><code class=\"language-md\"># H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n</code></pre>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h4>Inline style</h4>\n<pre><code class=\"language-md\">**Bold** _Italic_ ~~Strikethrough~~\n</code></pre>\n<p><strong>Bold</strong> <em>Italic</em> <s>Strikethrough</s></p>\n<h4>Link and Image</h4>\n<pre><code class=\"language-md\">[website](https://anzenkodo.github.io/dblog)\n![Jurassic Deno by Samip Poudel](https://deno.land/images/artwork/jurassicDeno.jpg)\n</code></pre>\n<p><a href=\"https://anzenkodo.github.io/dblog\">website</a>\n<img src=\"https://deno.land/images/artwork/jurassicDeno.jpg\" alt=\"Jurassic Deno by Samip Poudel\"></p>\n<h4>Blockquote</h4>\n<pre><code class=\"language-md\">&gt; 'The road to hell is paved with good intentions' by Abbot Bernard\n</code></pre>\n<blockquote>\n<p>‘The road to hell is paved with good intentions’ by Abbot Bernard</p>\n</blockquote>\n<h4>List</h4>\n<pre><code class=\"language-md\">- List\n  - List\n- List\n\n1. One\n2. Two\n3. Three\n</code></pre>\n<ul>\n<li>List\n<ul>\n<li>List</li>\n</ul>\n</li>\n<li>List</li>\n</ul>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<h4>Horizontal rule</h4>\n<pre><code class=\"language-md\">---\n</code></pre>\n<hr>\n<h4>Code block</h4>\n<div class=\"highlight highlight-source-lisp notranslate position-relative overflow-auto\">\n<pre>\n`Inline code` with backticks\n```js\n  console.log(\"Code Blog in JavaScript\");\n```\n</pre>\n</div>\n<p><code>Inline code</code> with backticks</p>\n<pre><code class=\"language-js\">console.log(&quot;Code Blog in JavaScript&quot;);\n</code></pre>\n<h3>Additional Markdown syntax</h3>\n<h4>Checkbox</h4>\n<pre><code class=\"language-md\">- [ ] Checkbox\n- [x] Checkbox with tick\n</code></pre>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> Checkbox</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> Checkbox with tick</label></li>\n</ul>\n<h4>Image with caption</h4>\n<pre><code class=\"language-md\">![Deno](https://deno.land/images/artwork/deno_matrix.png &quot;Matrix by bramaudi&quot;)\n</code></pre>\n<figure data-type=\"image\"><img src=\"https://deno.land/images/artwork/deno_matrix.png\" alt=\"Deno\" loading=\"lazy\" decoding=\"async\"><figcaption>Matrix by bramaudi</figcaption></figure>\n<h4>Footer</h4>\n<pre><code class=\"language-md\">Here is a footnote reference[^1]. [^1]: Here is the footnote.\n</code></pre>\n<p>Here is a footnote reference[^1]. [^1]: Here is the footnote.</p>\n<h4>Additional inline syntax</h4>\n<pre><code class=\"language-md\">~sub~ ^sup^ ==mark== [[kbd]] _underline_ ++insert++ ~~delete~~\n</code></pre>\n<p><sub>sub</sub>\n<sup>sup</sup>\n<mark>mark</mark>\n<kbd>kbd</kbd>\n<u>underline</u>\n<ins>insert</ins>\n<del>delete</del></p>\n<h4>Description list</h4>\n<pre><code class=\"language-md\">: Definition 1 Term 2 with _inline markup_ : Definition 2 Third paragraph of\ndefinition 2.\n</code></pre>\n<dl>\n  <dt>Definition 1</dt>\n  <dd>Term 2 with inline.</dd>\n  <dt>Definition 2</dt>\n  <dd>Third paragraph of definition 2.</dd>\n</dl>\n<h4>Abbreviation</h4>\n<pre><code class=\"language-md\">*[abbr]: Abbreviation\n</code></pre>\n<p><abbr title=\"Abbreviation\">abbr</abbr></p>\n<h4>Table</h4>\n<h5>Normal</h5>\n<pre><code class=\"language-md\">| Syntax    | Description |\n| --------- | ----------- |\n| Header    | Title       |\n| Paragraph | Text        |\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Header</td>\n<td>Title</td>\n</tr>\n<tr>\n<td>Paragraph</td>\n<td>Text</td>\n</tr>\n</tbody>\n</table>\n<h5>Multiline</h5>\n<pre><code class=\"language-md\">| Markdown  | Rendered HTML |\n| --------- | ------------- |\n| _Italic_  | _Italic_      |\n|           |               |\n| - Item 1  | - Item 1      |\n| - Item 2  | - Item 2      |\n| ```python | ```python \\   |\n| .1 + .2   | .1 + .2       |\n</code></pre>\n<table><thead><tr><th>Markdown</th><th>Rendered HTML</th></tr></thead> <tbody>\n  <tr> <td> <pre><code>*Italic* </code></pre> </td> <td> <p><em>Italic</em></p>\n  </td> </tr> <tr> <td> <pre><code>- Item 1 - Item 2</code></pre> </td> <td>\n  <ul> <li>Item 1</li> <li>Item 2</li> </ul> </td> </tr> <tr> <td>\n<pre><code>\n```python\n.1 + .2\n```\n</code></pre> </td> <td> <pre><code class=\"language-python\">.1 + .2\n  </code></pre> </td> </tr> </tbody> </table>\n<h5>Rowspan</h5>\n<pre><code class=\"language-md\">|                       Stage | Direct Products | ATP Yields |\n| --------------------------: | --------------: | ---------: |\n|                  Glycolysis |           2 ATP |            |\n|                          ^^ |          2 NADH |   3--5 ATP |\n|          Pyruvaye oxidation |          2 NADH |      5 ATP |\n|           Citric acid cycle |           2 ATP |            |\n|                          ^^ |          6 NADH |     15 ATP |\n|                          ^^ |         2 FADH2 |      3 ATP |\n|              **30--32** ATP |                 |            |\n| [Net ATP yields per hexose] |                 |            |\n</code></pre>\n<table> <caption id=\"netatpyieldsperhexose\">Net ATP yields per hexose</caption>\n  <thead> <tr> <th align=\"right\">Stage</th> <th align=\"right\">Direct\nProducts</th> <th align=\"right\">ATP Yields</th> </tr> </thead> <tbody> <tr> <td\nalign=\"right\" rowspan=\"2\">Glycolysis</td> <td align=\"right\" colspan=\"2\">2\nATP</td> </tr> <tr> <td align=\"right\">2 NADH</td> <td align=\"right\">3–5\nATP</td> </tr> <tr> <td align=\"right\">Pyruvaye oxidation</td> <td\nalign=\"right\">2 NADH</td> <td align=\"right\">5 ATP</td> </tr> <tr> <td\nalign=\"right\" rowspan=\"3\">Citric acid cycle</td> <td align=\"right\"\ncolspan=\"2\">2 ATP</td> </tr> <tr> <td align=\"right\">6 NADH</td> <td\nalign=\"right\">15 ATP</td> </tr> <tr> <td align=\"right\">2 FADH2</td> <td\nalign=\"right\">3 ATP</td> </tr> <tr> <td align=\"right\"\ncolspan=\"3\"><strong>30–32</strong> ATP</td> </tr> </tbody> </table>\n<h4>Headerless</h4>\n<pre><code class=\"language-md\">|--|--|--|--|--|--|--|--| |♜| |♝|♛|♚|♝|♞|♜| | |♟|♟|♟| |♟|♟|♟| |♟| |♞| | | | | |\n| |♗| | |♟| | | | | | | | |♙| | | | | | | | | |♘| | | |♙|♙|♙|♙| |♙|♙|♙|\n|♖|♘|♗|♕|♔| | |♖|\n</code></pre>\n<table> <tbody> <tr> <td>♜</td> <td></td> <td>♝</td> <td>♛</td> <td>♚</td>\n  <td>♝</td> <td>♞</td> <td>♜</td> </tr> <tr> <td></td> <td>♟</td> <td>♟</td>\n  <td>♟</td> <td></td> <td>♟</td> <td>♟</td> <td>♟</td> </tr> <tr> <td>♟</td>\n  <td></td> <td>♞</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>\n  <tr> <td></td> <td>♗</td> <td></td> <td></td> <td>♟</td> <td></td> <td></td>\n  <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> <td>♙</td>\n  <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td>\n  <td></td> <td></td> <td>♘</td> <td></td> <td></td> </tr> <tr> <td>♙</td>\n  <td>♙</td> <td>♙</td> <td>♙</td> <td></td> <td>♙</td> <td>♙</td> <td>♙</td>\n  </tr> <tr> <td>♖</td> <td>♘</td> <td>♗</td> <td>♕</td> <td>♔</td> <td></td>\n  <td></td> <td>♖</td> </tr> </tbody> </table>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=AK%23Notes&description=This%20my%20personal%20website%20where%20I%20post%20my%20notes%20about%20thing%20that%20I%20have%20learn.%20Features%20%20Easy%20to:%20%20Setup%20Configure%20Write%20%20%20Supports:%20%20Tags%20Search%20(Power%20by%20DuckDuckGo)%20Canonical%20Open%20Graph%20Analytics%20GitHub%20Pages%20%20%20Auto%20generate:%20%20GitHub%20Pages%20Actions%20file%20Favicon%20Sitemap%20404%20page%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/php/ut2-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/php/ut2-6s.html",
      "title": "UT2 6S",
      "content_html": "<h1>PHP Unit 2 AB</h1>\n<h3>1. Write the syntax for creating Cookie.</h3>\n<ul>\n<li>To set cookie in PHP, the <code>setcookie()</code> function is used.</li>\n<li>Syntex:<pre><code class=\"language-php\">setcookie($name, $value, $expire_time, $path, $domain)\n</code></pre>\n</li>\n<li><code>setcookie()</code> function the parameters.\n<ul>\n<li><strong>name</strong> - Name of the cookie, which is used with $_COOKIE function to get\nvalue.</li>\n<li><strong>value</strong> - Value of the named variable.</li>\n<li><strong>expire time</strong> - Time when cookie will expire.</li>\n<li><strong>path</strong> - Directory where cookie will valied.</li>\n<li><strong>domain</strong> - The default server hostname.</li>\n</ul>\n</li>\n</ul>\n<h3>2. WAP to connect PHP with MySQL.</h3>\n<pre><code class=\"language-php\">&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);\nif ($conn) {\n\techo &quot;MySQL connected&quot;;\n} else {\n\techo &quot;MySQL can't connect&quot;;\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>MySQL connected\n</code></pre>\n<h3>3. Differentiate between Session and Cookies.</h3>\n<table>\n<thead>\n<tr>\n<th>SESSION</th>\n<th>COOKIES</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Session are stored in server side</td>\n<td>Cookies are stored in client browser.</td>\n</tr>\n<tr>\n<td>Session is server resource.</td>\n<td>Cookies are client-side resource.</td>\n</tr>\n<tr>\n<td>It stores unlimeted data.</td>\n<td>It stores limited data.</td>\n</tr>\n<tr>\n<td>It holds multiple variables.</td>\n<td>It doen’t hold multiple variables.</td>\n</tr>\n<tr>\n<td>Session values can’t accessed easily.</td>\n<td>Cookies values can accessed easily.</td>\n</tr>\n<tr>\n<td>It is more secure.</td>\n<td>It is less secure.</td>\n</tr>\n</tbody>\n</table>\n<h3>4. Define session and explain how it works.</h3>\n<ul>\n<li>A session is a way to store information in variables to be used across\nmultiple pages.</li>\n<li>Sessions allow us to store data on the web server that associated with a\nsession ID.</li>\n<li>Once we create a session, PHP sends a cookie that contains the session ID to\nthe web browser.</li>\n<li>A session is started with the session_start() function.</li>\n<li>The session_start() function first checks if a session is already started and\nif none is started then it starts one.</li>\n<li>Example:<pre><code class=\"language-php\">&lt;?php\nsession_start();\n\n$_SESSION[&quot;color&quot;] = &quot;Red&quot;;\n$_SESSION[&quot;animal&quot;] = &quot;Cat&quot;;\necho $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];\n?&gt;\n</code></pre>\n</li>\n</ul>\n<h3>5. Write update and delete operations on table.</h3>\n<pre><code class=\"language-php\">UPDATE:\n&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);\nif (!$conn) {\n\techo &quot;Can't connect to MySQL&quot;;\n}\n\n$sql = &quot;UPDATE my_table SET name='Jonney' WHERE id=2&quot;;\nif (!mysqli_query($conn, $sql)) {\n\tdie(&quot;Can't Update Table&quot;);\n}\necho &quot;Update data&lt;/br&gt;&quot;;\n?&gt;\nDELETE:\n&lt;?php\n$sql = &quot;DELETE my_table WHERE id=1&quot;;\nif (!mysqli_query($conn, $sql)) {\n\tdie(&quot;Can't Delete data&quot;);\n}\necho &quot;Deleted data&lt;/br&gt;&quot;;\n\nmysqli_close($conn);\n?&gt;\n</code></pre>\n<p>O/P</p>\n<pre><code>UPDATE:Update data\nDELETE:Deleted data\n</code></pre>\n<h3>6. Answer the following</h3>\n<h4>i) Get session variables</h4>\n<ul>\n<li>The session variables are not passed individually to each new page, instead\nthey are retrieved from the session we open at the beginning of each page.</li>\n<li>All session variable values are stored in the global <code>$_SESSION</code> variable.</li>\n</ul>\n<h4>ii) Destroy session.</h4>\n<ul>\n<li>To remove all global session variables and destroy the session, we use\n<code>session_unset()</code> and <code>session_destroy()</code> functions.</li>\n<li>No arguments are needed in <code>session_destroy()</code> function.</li>\n<li>Example:<pre><code class=\"language-php\">&lt;?php\nsession_start();\n\n$_SESSION[&quot;color&quot;] = &quot;red&quot;;\n$_SESSION[&quot;animal&quot;] = &quot;Lion&quot;;\necho $_SESSION[&quot;color&quot;].&quot; &quot;.$_SESSION[&quot;animal&quot;];\nsession_unset();\nsession_destroy();\n?&gt;\n</code></pre>\n</li>\n</ul>\n<h3>7. Explain inserting and retrieving the query result operations.</h3>\n<ul>\n<li>For inserting a data into the table we use the INSERT query.</li>\n<li>For retrieving the data, we use the SELECT query.</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);\nif (!$conn) {\n\techo &quot;Can't connect to MySQL&quot;;\n}\n\n// Insert the data\n$sql = &quot;INSERT INTO my_table(id, name) VALUES (1, 'Jonney'), (2, 'Jone')&quot;;\nif (!mysqli_query($conn, $sql)) {\n\techo &quot;Can't Insert the data&quot;;\n}\n\n// Retriving\n$sql = &quot;SELECT * FROM my_table&quot;;\n$result = mysqli_connect($conn, $sql);\n\nif ($mysqli_num_rows($result) &gt; 0) {\n\twhile ($row = mysqli_fetch_array($result)) {\n\t\techo &quot;Name: &quot;.$row['name'].&quot;, ID: &quot;.$row['id'].&quot;&lt;br/&gt;&quot;;\n\t}\n} else {\n\techo &quot;Rows can't be zero.&quot;;\n}\n</code></pre>\n<h3>8. Explain web page validation with example.</h3>\n<ul>\n<li>For validating a web page we use preg_match() function.</li>\n<li>The preg_match() function searches string for pattern, returning true if\npattern exists, and false otherwise.</li>\n<li>Example:<pre><code class=\"language-php\">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;\n\tName:&lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;\n\t&lt;input type=&quot;submit&quot;&gt;\n&lt;/form&gt;\n\n&lt;?php\nif (!preg_match(&quot;/^[a-zA-Z_ ]*$/&quot;, $_POST[&quot;name&quot;])) {\n\techo &quot;Only letter and whitespace is allowed&quot;;\n}\n?&gt;\n</code></pre>\n</li>\n</ul>\n<h3>9.  Elaborate the following:</h3>\n<h4>i) <code>mysqli_query()</code></h4>\n<p>This function in php is used to pass a sql query to mysql database.\nThis function returns the query handle for SELECT queries, TRUE/FALSE for other\nqueries, or FALSE on failure.</p>\n<ul>\n<li>Syntex:<pre><code class=\"language-php\">mysqli_query(string, query, resource link_identifier])\n</code></pre>\n</li>\n</ul>\n<h4>ii) <code>mysqli_connect()</code></h4>\n<ul>\n<li>This function opens a connection to a MySQL server.</li>\n<li>It returns a MySQL link identifier on success, or FALSE on failure.</li>\n<li>Syntax:<pre><code class=\"language-php\">mysqli_connect($server, $username, $password)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-php\">$conn = mysqli_connect(&quot;mydb&quot;, &quot;root&quot;, &quot;root&quot;);\n</code></pre>\n</li>\n</ul>\n<h3>10. Explain the use of mail() function in php.</h3>\n<ul>\n<li><code>mail()</code> function is useful to sending the mail.</li>\n<li>Syntex:<pre><code class=\"language-php\">mail($to, $subject, $message, $header, $parametes);\n</code></pre>\n</li>\n<li><code>mail()</code> function parametes:\n<ul>\n<li><strong>to</strong> - represents the address of receiver.</li>\n<li><strong>subject</strong> - it specifies the subject of mail.</li>\n<li><strong>message</strong> - it defines the message which is to be sent.</li>\n<li><strong>headers</strong> - it is optional and specifies the additional headers like Cc, Bcc.</li>\n<li><strong>parameters</strong> - it is optional and specifies the additional parameters.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php\n$sent = mail(&quot;AnzenKodo@altmail.com&quot;, &quot;Title&quot;, &quot;Message&quot;);\n\nif (!$sent) {\n  echo &quot;Message is not sent.&quot;;\n} else {\n  echo &quot;Message is sent.&quot;;\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>Message is sent.\n</code></pre>\n<h3>11. How to use radio button in form? Give suitable example.</h3>\n<ul>\n<li>The radio buttons are for single choice from multiple options.</li>\n<li>All radio buttons in the group have the same name attribute.</li>\n<li>Only one button can be selected per group.</li>\n<li>The value attribute is mandatory for checkboxes and radio buttons.</li>\n<li>Example:<pre><code class=\"language-php\">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;\n\tColor:\n\t&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;White&quot;&gt;White&lt;/input&gt;\n\t&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;Blue&quot;&gt;Blue&lt;/input&gt;\n\t&lt;input type=&quot;radio&quot; name=&quot;color&quot; value=&quot;Red&quot;&gt;Red&lt;/input&gt;\n\t&lt;input type=&quot;Submit&quot;&gt;\n&lt;/form&gt;\n\n&lt;?php\nif (isset($_POST[&quot;color&quot;])) {\n\techo $_POST[&quot;color&quot;];\n}\n?&gt;\n</code></pre>\n</li>\n</ul>\n<h3>12. WAP in php to counting no. of rows in table.</h3>\n<pre><code class=\"language-php\">&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);\nif (!$conn) {\n\tdie(&quot;Can't connect to MySQL&quot;);\n}\n\n$sql = &quot;SELECT * FROM my_table&quot;;\nif ($result = mysqli_query($conn, $sql)) {\n\techo &quot;No of rows: &quot;.mysqli_num_rows($result);\n} else {\n\techo &quot;Can't connect&quot;;\n}\n\nmysqli_close($conn);\n?&gt;\n</code></pre>\n<h3>13. WAP in php to counting no. of fields in table.</h3>\n<pre><code class=\"language-php\">&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;test&quot;);\nif (!$conn) {\n\tdie(&quot;Can't connect to MySQL&quot;);\n}\n\n$sql = &quot;SELECT * FROM my_table&quot;\nif ($result = mysqli_query($conn, $sql)) {\n\techo &quot;No of fields: &quot;.mysqli_num_fields($result);\n}\nmysqli_close();\n?&gt;\n</code></pre>\n<h3>14. WAP in php to create database and creation of table.</h3>\n<pre><code class=\"language-php\">Creating database:\n&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;);\nif (!$conn) {\n\tdie(&quot;Can't connect to MySQL&quot;);\n}\n\n$sql = &quot;CREATE DATABASE db&quot;;\nif (!mysqli_query($conn, $sql) {\n\tdie(&quot;Can't create Database&quot;);\n}\necho &quot;Created database&lt;/br&gt;&quot;;\n\nmysqli_close($conn);\n?&gt;\n\nCreating Table:\n&lt;?php\n$conn = mysqli_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;&quot;, &quot;db&quot;);\nif (!$conn) {\n\tdie(&quot;Can't create Table&quot;);\n}\n\n$sql = &quot;CREATE TABLE my_table(name VARCHAR(22), id INT(4))&quot;;\nif(!mysqli_query($conn, $sql) {\n\tdie(&quot;Error: &quot;.mysqli_error($conn));\n}\necho &quot;Created table&lt;br/&gt;&quot;;\n\nmysqli_close($conn);\n?&gt;\n</code></pre>\n<p>O/P</p>\n<pre><code>Created database\nCreated table\n</code></pre>\n<h3>15. How to used list and button in form? Give suitable example.</h3>\n<ul>\n<li>List\n<ul>\n<li>The list represents a windows control to display a list of items to a user.</li>\n<li>A user can select an item from the list.</li>\n<li>User can either select one option from a list or multiple options, depending\non the type of list.</li>\n</ul>\n</li>\n<li>Button\n<ul>\n<li>A button is a control, which is an interactive component that enables users\nto communicate with an application which we click and release to perform\nsome actions.</li>\n<li>A button can be clicked by using the mouse, ENTER key, or SPACEBAR if the\nbutton has focus.</li>\n</ul>\n</li>\n<li>Example:<pre><code class=\"language-php\">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;\n\t&lt;select name=&quot;language&quot;&gt;\n\t\t&lt;option name=&quot;C&quot;&gt;C&lt;/option&gt;\n\t\t&lt;option name=&quot;C++&quot;&gt;C++&lt;/option&gt;\n\t\t&lt;option name=&quot;PHP&quot;&gt;PHP&lt;/option&gt;\n\t&lt;/select&gt;\n\t&lt;input type=&quot;submit&quot;&gt;\n&lt;/form&gt;\n\n&lt;?php\nif (isset($_POST[&quot;language&quot;])) {\n\techo &quot;Selected: &quot;.$_POST[&quot;language&quot;];\n}\n?&gt;\n</code></pre>\n</li>\n</ul>\n<h3>16. Answer the following</h3>\n<h4>i) Use of cookies</h4>\n<ul>\n<li>Cookie save the data in browser, so next time refresh the browser it will not\ndelete from browser.</li>\n<li>Cookie is used to identify the user.</li>\n<li>A cookie is a small file that server embeds to user’s computer.</li>\n<li>Each time the same computer requests a page with a browser, it will send the\ncookie too.</li>\n</ul>\n<h4>ii) How to set the cookie?</h4>\n<ul>\n<li>Use <code>setcookie</code> function to create cookie.</li>\n<li>Syntex:<pre><code>setcookie($cookie_name, $cookie_value, $time, $location)\n</code></pre>\n</li>\n</ul>\n<h4>iii) How to modify?</h4>\n<ul>\n<li>Set cookie agien with <code>setcookie</code> function.</li>\n</ul>\n<h4>iv) How to delete the cookies?</h4>\n<ul>\n<li>To delete cookie, we can use <code>setcookie</code> function with expiration date in\npast.</li>\n<li>Example:<pre><code>setcookie($cookie_name, &quot;&quot;, time() - 3600);\n</code></pre>\n</li>\n<li>We can also put <code>null</code> in time section to delete cookie.</li>\n<li>Example<pre><code>setcookie($cookie_name, &quot;&quot;, null);\n</code></pre>\n</li>\n</ul>\n<h3>17. Define GET and POST methods.</h3>\n<h4>GET</h4>\n<ul>\n<li>It sends the encoded user information appended to the page request (to the\nURL).</li>\n<li>The page and the encoded information are separated by the ? character.</li>\n<li>The GET method produces a long string the appears in our server logs, in the\nbrowser’ location box.</li>\n<li>The GET method is restricted to send up to 1024 characters only.</li>\n<li>Never use GET method if we have password or other sensitive information.</li>\n<li>GET cannot be used to send binary data to the server.</li>\n<li>The php provides $_GET assoiative array to a access all the sent information\nusing GET method.</li>\n<li>Example:<pre><code class=\"language-php\">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;GET&quot;&gt;\n\tName: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;\n\t&lt;input type=&quot;submit&quot;&gt;\n&lt;/form&gt;\n\n&lt;?php\nif ($_GET[&quot;name&quot;]) {\n\techo $_GET[&quot;name&quot;];\n}\n?&gt;\n</code></pre>\n</li>\n<li>Output:<pre><code>Name: Joey\nSubmit\n\nJoey\n</code></pre>\n</li>\n</ul>\n<h4>POST</h4>\n<ul>\n<li>It transfers information via HTTP header, not throought the URL.</li>\n<li>The POST method does not have any restriction on data size.</li>\n<li>The POST method can be used to send ASCII as well as binary data.</li>\n<li>The data sent by POST  method goes through HTTP header, so security depends on\nHTTP protocol.</li>\n<li>By using secure HTTP, we can make sure that our information is secure.</li>\n<li>The PHP provides $_POST associative array to access all the sent information\nusing POST method.</li>\n<li>Example:<pre><code class=\"language-php\">&lt;form action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot; method=&quot;post&quot;&gt;\n\tName: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;\n\t&lt;input type=&quot;submit&quot;&gt;\n&lt;/form&gt;\n\n&lt;?php\nif ($_POST[&quot;name&quot;]) {\n\techo $_POST[&quot;name&quot;];\n}\n?&gt;\n</code></pre>\n</li>\n<li>Output<pre><code>Name: Joey\nSubmit\n\nJoey\n</code></pre>\n</li>\n</ul>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT2 6S&description=PHP%20Unit%202%20AB%201.%20Write%20the%20syntax%20for%20creating%20Cookie.%20%20To%20set%20cookie%20in%20PHP,%20the%20setcookie()%20function%20is%20used.%20Syntex:setcookie($name,%20$value,%20$expire_time,%20$path,%20$domain)%20%20%20setcookie()%20function%20the%20parameters.%20%20name%20-%20Name%20of%20the%20cookie,%20which%20is%20used%20with%20$_COOKIE%20function%20to&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/php/ut1-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/php/ut1-6s.html",
      "title": "UT1 6S",
      "content_html": "<h2>Write a php program to find the largest number among three numbers.</h2>\n<pre><code class=\"language-php\">&lt;?php\n  function largest($x, $y, $z) {\n    if ($x &gt;= $y) {\n      if($x &gt;= $z) {\n        echo $x;\n      } else {\n        echo $z;\n      }\n    }\n    else {\n      if($y &gt;= $z) {\n        echo $y;\n      } else {\n        echo $z;\n      }\n    }\n  }\n\n  largest(100, 50, 25);\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>100\n</code></pre>\n<h2>Write a php code for creating a basic image.</h2>\n<pre><code class=\"language-php\">&lt;?php\n$image = imagecreatetruecolor(500, 300);\nimagefilledrectangle($image, 20, 20, 480, 280);\nheader(&quot;Content-type: image/png&quot;);\nimagepng($image);\n?&gt;\n</code></pre>\n<h2>Explain inheritance with examples.</h2>\n<p>In Inheritance  the new class can inherit the properties and methods from the\nold class.</p>\n<p>The old class is the base class also called a parent class and then the new\nclass is a derived  class also called a subclass.</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-php\">&lt;?php\n  class Person {\n    var $name, $age;\n  }\n  class Employee extends Person {\n    var $salary, $designation;\n  }\n?&gt;\n</code></pre>\n<h2>Explain the concept of introspection in php with an example.</h2>\n<p>PHP Introspection is the ability of a program to examine an object’s\ncharacteristics such as its name, parent class (if any), properties and methods.</p>\n<p>Introspection  in PHP offers a useful Ability  to examine classes’ interfaces\nproperties methods. With introspection we can write  code that operates on any\nobject or class.</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-php\">&lt;?php\n  if (class_exists('MyClass')) {\n    $myclass = new MyClass();\n  }\n?&gt;\n</code></pre>\n<h2>How to use overloading and overriding functions in php?</h2>\n<h2>Overloading</h2>\n<p>Method overloading is the ability to create a multiple function\nof the same name with a different implementation  depending upon the types of\narguments.</p>\n<p>How to use overloading in PHP?</p>\n<pre><code class=\"language-php\">&lt;?php\nclass First {\n  function func() {\n    echo &quot;Hello World&quot;;\n  }\n}\n\nclass Second extends First {\n  function func() {\n    echo &quot;Bye World&quot;;\n  }\n}\n\n$o = new Second;\n$o-&gt;func();\n</code></pre>\n<p>O/P</p>\n<pre><code>Bye World\n</code></pre>\n<h2>Overriding</h2>\n<p>In function overriding, both parent and child classes should have the same\nfunction name with and number of arguments. It is used to replace the parent\nmethod in child class.</p>\n<pre><code class=\"language-php\">&lt;?php\n&lt;?php\nclass First {\n  function func() {\n    echo &quot;Hello World&quot;;\n  }\n}\n\nclass Second extends First {\n  function func() {\n    echo &quot;Bye World&quot;;\n  }\n}\n\n$f = new First;\n$s = new Second;\n$f-&gt;func();\n$s-&gt;func();\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Hello World\nBye World\n</code></pre>\n<h2>How to use the flip function in php.</h2>\n<p>The array_flip function flips/All keys with their associated values in array.</p>\n<p>This function is very useful when we have a big/ large array.and we want to\nknow if a given value  is in the array.</p>\n<p><strong>Syntax</strong>:</p>\n<pre><code>array_flip(array_name)\n</code></pre>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n  $a = array(&quot;a&quot;);\n  print_r(array_flip($a));  //flip function is used\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Array( [0]=&gt; a )\n</code></pre>\n<h2>How to define properties and methods of a class? Explain with suitable examples.</h2>\n<ol>\n<li>Objects have access to special variables called. properties.</li>\n<li>A property Can be valued as an array and even another object.</li>\n<li>All properties go inside the curly braces.</li>\n<li>The characteristics of a class are known as its properties.</li>\n</ol>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n  class Student {\n    var $roll_no;\n    var $name;\n    function display() {\n      echo &quot;Roll No: &quot; . $this-&gt;roll_no. &quot;&lt;br&gt;&quot;;\n      echo &quot;Name: &quot; $this-&gt;name;\n    }\n  }\n\n  $s1 = new Student;\n  $s1-&gt;roll_no = 10;\n  $s1-&gt;name = &quot;Amar&quot;;\n  $si-&gt;display();\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Roll No: 10\nName: Amar\n</code></pre>\n<p>A class method is exactly similar to PHP functions.</p>\n<ol>\n<li>Method is a function defined within the class.</li>\n<li>Methods on the other hand are functions that operate on the data.</li>\n<li>Method is also written within the braces {}.</li>\n</ol>\n<p>The method can be accessed from outside the class.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\nclass Person {\n\tpublic $age = 25;\n\n\tpublic function printAge() {\n\t\techo &quot;The age is: $this-&gt;age&quot;;\n\t}\n}\n\n$person = new Person;\n$person-&gt;age = 20;\n$person-&gt;printAge();\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>The age is: 20\n</code></pre>\n<h2>Explain the arithmetic operators that can be used in php with examples.</h2>\n<p>The PHP arithmetic operators are used with numeric values to perform common\narithmetical operations, such as addition, subtraction, multiplication etc.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n  $a = 42;\n  $b = 20;\n\n  $c = $a + $b;\n  echo &quot;Addition is: $c &lt;br/&gt;&quot;;\n  $c = $a - $b;\n  echo &quot;Subtraction is: $c &lt;br/&gt;&quot;;\n  $c = $a * $b;\n  echo &quot;Multiplication is: $c &lt;br/&gt;&quot;;\n  $c = $a / $b;\n  echo &quot;Division is: $c &lt;br/&gt;&quot;;\n  $c = $a % $b;\n  echo &quot;Modulus is: $c &lt;br/&gt;&quot;;\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Addition is: 62\nSubtraction is: 22\nMultiplication is: 840\nDivision is: 2.1\nModulus is: 2\n</code></pre>\n<h2>What is the use of anonymous functions in php? Explain with examples.</h2>\n<p>Anonymous functions, also known as closures, allow the creation of functions\nwhich have no specified name. They are most useful as the value of callable\nparameters, but they have many other uses.</p>\n<pre><code class=\"language-php\">&lt;?php\n$func = function () { echo &quot;Hello World&quot;; };\n$func();\n</code></pre>\n<p>O/P</p>\n<pre><code>Hello World\n</code></pre>\n<h2>Explain cloning objects with examples.</h2>\n<p>Object cloning is the process in PHP to create a copy of an object. An object\ncopy is created by using the clone keyword when the object is cloned PHP will\nperform Shallow copy  of all the object properties and properties that are\nreferenced to their variables will remain references.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\nclass Obj {\n  public $name;\n}\n\n$o = new Obj;\n$c = clone $o;\n\n$o-&gt;name = &quot;Jonney&quot;;\n$c-&gt;name = &quot;Jone&quot;;\n\necho &quot;Origenal: &quot;.$o-&gt;name.&quot;, Clone: &quot;.$c-&gt;name;\n?&gt;\n</code></pre>\n<p>O/P</p>\n<pre><code>Origenal: Jonney, Clone: Jone\n</code></pre>\n<h2>Explain indexed and associative arrays with examples.</h2>\n<p>Indexed array: An array having only integer keys is typically referred to as an\nindexed array and index arrays can store numbers, drinks and any object but\ntheir index will be represented by number.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n  $colors = array(&quot;Red&quot;);\n  print_r($colors);\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Array ( [0] =&gt; Red )\n</code></pre>\n<p>The associative arrays are very similar to numeric arrays in terms of\nfunctionality but they are different in terms of their index. Associative arrays\nwill have their index as string so that you can establish a strong association\nbetween key and values.</p>\n<pre><code class=\"language-php\">&lt;?php\n  $ages = array( &quot;Peter&quot;=&gt;22 );\n  print_r($ages);\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Array ( [Peter] =&gt; 22 )\n</code></pre>\n<h2>How to define constructor and destructor in php with an example?</h2>\n<ul>\n<li><strong>constructor</strong> - When we create a new object it is useful to initialize its\nproperties.</li>\n<li><strong>destructor</strong> - The destructor method will be called as soon as there are no\nother references to a particular object.</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php\nclass Obj {\n  function __construct() {\n    echo &quot;Class created&quot;;\n  }\n\n  function __destruct() {\n    echo &quot;Class destroyed&quot;;\n  }\n}\n\n$o = new Obj;\n?&gt;\n</code></pre>\n<p>O/P</p>\n<pre><code>Class Created\nClass Destroyed\n</code></pre>\n<h2>Explain the following string function with an example.</h2>\n<ol>\n<li>strpos()</li>\n<li>strlen()</li>\n<li>strcmp()</li>\n<li>str_word_count()</li>\n<li>strpos()</li>\n</ol>\n<ul>\n<li><strong>strpos()</strong> - Returns the position of the first occurrence of a string.</li>\n<li><strong>strlen()</strong> - Returns the length of a string.</li>\n<li><strong>strcmp()</strong> - Compares two strings.</li>\n<li><strong>str_word_count()</strong> - Count the number of words in a string.</li>\n<li><strong>strrpos()</strong> - Finds the position of the last occurrence of a string.</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php\necho strpos(&quot;Hello World&quot;, &quot;Hello&quot;);\necho strlen(&quot;Hello World&quot;);\necho strcmp(&quot;Hello World&quot;, &quot;Hello World&quot;);\necho str_word_count(&quot;Hello World&quot;);\necho strrpos(&quot;Hello World&quot;, &quot;Hello&quot;);\n</code></pre>\n<p>O/P</p>\n<pre><code>0\n11\n0\n2\n0\n</code></pre>\n<h2>Write a program using a foreach loop.</h2>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n$a = array(1, 2, 3, 4, 5);\nforeach ($a as $n) {\n  echo $n;\n}\n</code></pre>\n<p>O/P</p>\n<pre><code>12345\n</code></pre>\n<h2>Explain serialization with suitable examples.</h2>\n<p>A string representation of any object in the form of byte-stream is obtained by\nserialize() function in PHP. All property variables of the object are contained\nin the string and methods are not saved. This string can be stored in any file.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\necho serialize(array(&quot;Red&quot;));\n?&gt;\n</code></pre>\n<p>O/P</p>\n<pre><code>a:1:{i:0;s:3:&quot;Red&quot;;}\n</code></pre>\n<h2>Define <code>imagecolorallocate()</code> function along with suitable examples.</h2>\n<p><code>imagecolorallocate()</code> function is another inbuilt PHP function mainly used to\nimplement a new color to an image. It returns the color of an image in an RGB\nformat (RED GREEN BLUE).</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n  $im = imagecreate(100, 100);\n  // sets background to red\n  $background = imagecolorallocate($im, 255, 0, 0);\n  // sets some colors\n  $white = imagecolorallocate($im, 255, 255, 255);\n  $black = imagecolorallocate($im, 0, 0, 0);\n  // hexadecimal way\n  $white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);\n  $black = imagecolorallocate($im, 0x00, 0x00, 0x00);\n?&gt;\n</code></pre>\n<h2>Write a program to create a filled rectangle.</h2>\n<pre><code class=\"language-php\">&lt;?php\n$image = imagecreatetruecolor(500, 300);\nimagefilledrectangle($image, 20, 20, 480, 280);\nheader(&quot;Content-type: image/png&quot;);\nimagepng($image);\n?&gt;\n</code></pre>\n<h2>Explain any three data types used in php.</h2>\n<ol>\n<li><strong>Integer:</strong> integer data type used to specify a numeric value  without a fractional component the range of integers.</li>\n<li><strong>Strings:</strong> a string is a sequence of characters where characters are the same as a byte.</li>\n<li><strong>Boolean:</strong>   boolean  value can be either true or false both are  case-insensitive.</li>\n</ol>\n<h2>Differentiate between implode and explode function.</h2>\n<table>\n<thead>\n<tr>\n<th>No.</th>\n<th>Implode</th>\n<th>Explode</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>The implode() function returns a string from the elements of an array.</td>\n<td>explode function breaks a string  into smaller parts and stores it  as an array.</td>\n</tr>\n<tr>\n<td>2</td>\n<td>The implode() function accepts its  parameters in either order.  However, for consistency with explode(),  you should use the documented order of  arguments.</td>\n<td>The explode() function splits  these strings based on a specific  delimiter and returns an array that  contains elements which are sustained  by the splitting operation.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>syntax :-string implode (pieces)</td>\n<td>array explode (delimiter, string, limit)</td>\n</tr>\n<tr>\n<td>4</td>\n<td><strong>Example</strong>:  <code>php &lt;?php $arr = array(&quot;I&quot;, &quot;love&quot;, &quot;PHP.&quot;); $pole = implode(&quot; &quot;, $arr); \\ echo &quot;$pole&quot;; ?&gt; </code>  Output: I love PHP.</td>\n<td>Example: <?php  $string = \"I love php.\"; $pole = explode(\" \", $string); \\ \\ print_r($pole); ?>  Output: Array ( [0] =&gt; I [1] =&gt; love [2] =&gt; php. )</td>\n</tr>\n</tbody>\n</table>\n<h2>State the variable function. Explain it with an example.</h2>\n<p>PHP supports the concept of variable function means that we can call a function\nbased on a value of a variable if a variable name has a round parentheses\nappended to it PHP will look for a function with the same name as a whatever\nvariable Evaluates to and will attempt to execute it.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-php\">&lt;?php\n  function add($x, $y){\n    echo $x + $y;\n  }\n  $var =  &quot;add&quot;;\n  $var(10,20);\n?&gt;\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>30\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT1 6S&description=Write%20a%20php%20program%20to%20find%20the%20largest%20number%20among%20three%20numbers.%20&lt;?php%20%20%20function%20largest($x,%20$y,%20$z)%20{%20%20%20%20%20if%20($x%20&gt;=%20$y)%20{%20%20%20%20%20%20%20if($x%20&gt;=%20$z)%20{%20%20%20%20%20%20%20%20%20echo%20$x;%20%20%20%20%20%20%20}%20else%20{%20%20%20%20%20%20%20%20%20echo%20$z;%20%20%20%20%20%20%20}%20%20%20%20%20}%20%20%20%20%20else%20{%20%20%20%20%20%20%20if($y%20&gt;=%20$z)%20{%20%20%20%20%20%20%20%20%20echo%20$y;%20%20%20%20%20%20%20}%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/ut2-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/ut2-6s.html",
      "title": "UT2 6S",
      "content_html": "<h1>Python QB UT 2</h1>\n<h2>1. Explain scope of a variable in Python.</h2>\n<ul>\n<li>A variable is only available from inside the region it is created.</li>\n<li>This is called scope.</li>\n<li>There are two types of scopes in Python:</li>\n</ul>\n<h3>Local scope</h3>\n<ul>\n<li>A variable created inside a function belongs to the local scope, and can only\nbe used inside that function.</li>\n<li>Example<pre><code class=\"language-python\">def fun()\n  x=10 # X is local variable\n  print(x)\n\nfun()\n</code></pre>\nO/P<pre><code>10\n</code></pre>\n</li>\n</ul>\n<h3>Global scope</h3>\n<ul>\n<li>A variable created in the main body of the code is a global variable and\nbelongs to the global scope.</li>\n<li>Global variables are available from within any scope global and local.</li>\n<li>Example:<pre><code class=\"language-python\">a = 50 # a is global variable\ndef fun()\n  print(a)\n\nfun()\nprint(a)\n</code></pre>\nO/P<pre><code>50\n50\n</code></pre>\n</li>\n</ul>\n<h2>2. Define class, data hiding, method overloading, inheritance, data abstraction, numpy, pandas.</h2>\n<h3>i) <code>class</code></h3>\n<ul>\n<li>Class is a blueprint for the object.</li>\n<li>We define a class by using the keyword class.</li>\n<li>Class objects are used to access different attributes.</li>\n</ul>\n<h3>ii) Data Hiding</h3>\n<ul>\n<li>Data hiding is one of the important features of Object Oriented Programming\nwhich allows preventing the functions of a program to access directly the\ninternal representation of a class type.</li>\n</ul>\n<h3>iii) Method Overloading</h3>\n<ul>\n<li>Overloading is the ability of a function or an operator to behave in different\nways based on the parameters that are passed to the function, or the operands\nthat the operator acts on.</li>\n</ul>\n<h3>iv) Inheritance</h3>\n<ul>\n<li>Inheritance refers to defining a new class with little or no modification to\nan existing class.</li>\n<li>The new class is called as derived or child class and the old class is called\nas base or parent class.</li>\n</ul>\n<h3>v) Data Abstraction</h3>\n<ul>\n<li>Data abstraction refers to providing only essential information about the data\nto the outside world and hiding the background details.</li>\n</ul>\n<h3>vi) Numpy</h3>\n<ul>\n<li>Numpy is a python package which stands for “Numerical Python”.</li>\n</ul>\n<h3>vii) Pandas</h3>\n<ul>\n<li>Pandas is an open source library that allows to perform data manipulation.</li>\n<li>Pandas library is built on the top of Numpy.</li>\n</ul>\n<h2>3. Explain Composition classes with program.</h2>\n<ul>\n<li>Composition class is composed of one of or more instance of other classes.</li>\n<li>In simple words, one class is container and other class is content, if we\ndelete the container objects then all of its contents objects are also\ndeleted.<pre><code class=\"language-python\">class test:\n  def __init__(self, name, marks):\n    self.name = name\n    self.marks = marks\n\nclass addr:\n  def __init__(self, ad, name, marks):\n    self.ad = ad\n    self.ob = test(name, marks)\n\n  def disp(self):\n    print(self.ad, self.ob.name, self.ob.marks)\n\nt = addr(&quot;Virar&quot;, &quot;ABC&quot;, 99)\nt.disp()\n</code></pre>\nO/P<pre><code>Virar ABC 99\n</code></pre>\n</li>\n</ul>\n<h2>4. WAP to create a file, write some contents in it and read the content from file.</h2>\n<pre><code class=\"language-python\">o = open(&quot;name.txt&quot;, &quot;w&quot;)\no.write(&quot;I am a programmer&quot;)\no.close()\no = open(&quot;name.txt&quot;, &quot;r&quot;)\nprint(o.read())\no.close()\n</code></pre>\n<p>O/P</p>\n<pre><code>I am a programmer\n</code></pre>\n<h2>5. WAP to check <code>ZeroDivisionError</code> Exception.</h2>\n<pre><code class=\"language-python\">x = int (input(&quot;x:&quot;))\ny = int(input(&quot;y:&quot;))\n\ntry:\n  x/y\nexcept ZeroDivisionError:\n  print(&quot;Error: Division by Zero&quot;)\nelse:\n  print(x/y)\n</code></pre>\n<p>O/P</p>\n<pre><code>x: 0\ny: 0\n\nError: Divison by Zero\n</code></pre>\n<h2>6. WAP to throw an exception if age&lt;18 (using raise).</h2>\n<pre><code class=\"language-python\">age = int(input(&quot;Age:&quot;))\ntry:\n  if age &lt; 18:\n    raise Exception\nexcept Exception:\n  print(&quot;Too small to vote!!&quot;)\nelse:\n  print(&quot;You can vote!!&quot;)\n</code></pre>\n<h2>7. List different modes of opening file.</h2>\n<p>Following are the different modes of opening file:</p>\n<ul>\n<li><code>r</code></li>\n<li><code>rb</code></li>\n<li><code>r+</code></li>\n<li><code>rb+</code></li>\n<li><code>w</code></li>\n<li><code>wb</code></li>\n<li><code>wb</code></li>\n<li><code>w+</code></li>\n<li><code>wb+</code></li>\n</ul>\n<h2>8. WAP to create class animal having method feed that prints ‘I eat food’. It has a sub class herbivorous having method feed that prints “I eat only plants”. Call the method by creating an object of each of the classes.</h2>\n<pre><code class=\"language-python\">class animal:\n  def feed(self):\n    print(&quot;I eat food&quot;)\n\nclass herbivorous(animal):\n  def feed(self):\n    print(&quot;I eat only plants&quot;)\n\na = animal()\na.feed()\nh = herbivorous()\nh.feed()\n</code></pre>\n<h2>9. WAP to create base classes namely add, mul having method addition and multiplication that prints addition and multiplication respectively. Derive a class derived from add and mul that has method divide and returns division. Create object and call methods.</h2>\n<pre><code class=\"language-python\">class add:\n  def addition(self, a, b):\n    self.a = a\n    self.b = b\n    print(self.a + self.b)\n\nclass mul:\n  def multiplication(self, a, b):\n    self.a = a\n    self.b = b\n    print(self.a * self.b)\n\nclass derived(add, mul):\n  def divide(self, a, b)\n    self.a = a\n    self.b = b\n    return self.a / self.b\n\nd = derived()\nprint(d.divide(28, 4))\nd.multiplication(2, 4)\nd.addition(5, 6)\n</code></pre>\n<p>O/P</p>\n<pre><code>7.0\n8\n11\n</code></pre>\n<h2>10. WAP to implement multilevel inheritance.</h2>\n<pre><code class=\"language-python\">class Student:\n  def accept(self):\n    self.roll = 10\n\nclass Test(Student):\n  def getdata(self):\n    self.name = &quot;ABC&quot;\n\nclass Result(Test):\n  def info(self):\n    self.marks = 99\n  def disp(self):\n    print(self.roll, self.name, self.marks)\n\nr = result()\nr.accept()\nr.getdata()\nr.info()\nr.disp()\n</code></pre>\n<p>O/P</p>\n<pre><code>10 ABC 99\n</code></pre>\n<h2>11. Create a 3x4 matrix of random values using numpy and perform following:</h2>\n<ol>\n<li>print type of array</li>\n<li>print dimension</li>\n<li>print shape</li>\n<li>print size</li>\n<li>print type of elements</li>\n<li>sort row wise</li>\n<li>print min, max, sum, flatten</li>\n</ol>\n<pre><code class=\"language-python\">import numpy as n\n\np = n.random.randint(30, size = (3, 3))\nprint(p)\nprint(type(p))\nprint(p.ndim)\nprint(p.shape)\nprint(p.size)\nprint(n.dtype)\nprint(n.sort(p))\npritt(p.min())\nprint(p.max())\nprint(sum(p))\nprint(p.flatten())\n</code></pre>\n<p>O/P</p>\n<pre><code>[[10, 20, 21]\n [14, 15, 13]\n [23, 24, 29]]\n&lt;class 'numpy.ndarray'&gt;\n2\n(3, 3)\n9\nint64\n[[10, 20, 21]\n [13, 14, 15]\n [23, 24, 29]]\n10\n29\n[51 42 76]\n[10 20 21 14 15 13 23 24 29]\n</code></pre>\n<h2>12. WAP that accepts a string and calculate the number of upper and lower case letters (string=&quot;Viva College)</h2>\n<pre><code class=\"language-python\">c = input(&quot;Enter string.&quot;)\nu = 0\ni = 0\n\nfor i in c:\n  if (i.isupper()):\n    u += 1\n  if (i.islower()):\n    i += 1\n\nprint(&quot;Upper case letters are&quot;, u)\nprint(&quot;Lower case letters are&quot;, i)\n</code></pre>\n<h2>13. WAP to generate a random float where the value is between 5 and 50</h2>\n<pre><code class=\"language-python\">import random\na = random.uiform(5, 50)\nprint(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>20.80854522266047\n</code></pre>\n<h2>14. Plot a line from position (10, 33) to position (80, 65) with following:</h2>\n<ol>\n<li>marker - 0</li>\n<li>line-dotted, line color-red</li>\n<li>x-label: student, y-label marks.</li>\n<li>Add grid lines</li>\n</ol>\n<pre><code class=\"language-python\">import matplotlib.pylot as p\nimport numpy as n\n\nx = n.array([10, 33])\ny = n.array([80, 64])\n\np.xlabel(&quot;Student&quot;)\np.ylable(&quot;Marks&quot;)\np.plot(x, y, marker = 'o', linestyle = 'dotted', color = 'r')\np.grid()\np.show()\n</code></pre>\n<h2>15. WAP to print 3x3 matrix with o at border and I inside.</h2>\n<pre><code class=\"language-python\">import numpy as n\na = n.zeros((3, 3))\na[1:-1, 1:-1] = 1\nprint(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>[[0. 0. 0.]\n [0. 1. 0.]\n [0. 0. 0.]]\n</code></pre>\n<h2>16. WAP to create matrix with values 2-10.</h2>\n<pre><code class=\"language-python\">import numbpy as n\na = n.arange(2, 11).reshape(3, 3)\nprint(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>[[2 3 4]\n [5 6 7]\n [8 9 10]]\n</code></pre>\n<h2>17. Explain Exception Handling in python.</h2>\n<ul>\n<li>When we executes a Python program, there may be a few uncertain conditions\nwhich occur, known as errors. Errors also referred to as bugs that are\nincorrect or inaccurate action that may cause the problems in the running of\nthe program of program or may interrupt the execution of program.</li>\n<li>There are three types of error:\n<ul>\n<li>i) Compile Time Errors.</li>\n<li>ii) Run Time Errors.</li>\n<li>iii) Logical Errors.</li>\n</ul>\n</li>\n<li>Errors occured at runtime are known as exception. Exception handling is a\nfeature that is used for handling any unreported errors in program.</li>\n<li>By handling the exceptions, we can provide a meaningful message to the user\nabout the problem rather than system generated error message, which may not be\nunderstandable to the user.</li>\n<li>Exception can be either built-in exception or user defined exceptions.</li>\n</ul>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT2 6S&description=Python%20QB%20UT%202%201.%20Explain%20scope%20of%20a%20variable%20in%20Python.%20%20A%20variable%20is%20only%20available%20from%20inside%20the%20region%20it%20is%20created.%20This%20is%20called%20scope.%20There%20are%20two%20types%20of%20scopes%20in%20Python:%20%20Local%20scope%20%20A%20variable%20created%20inside%20a%20function%20belongs%20to%20the%20local%20scope,%20and%20can%20only%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/finals.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/finals.html",
      "title": "Finals",
      "content_html": "<h1>Python</h1>\n<h2>a) Name different modes of Python.</h2>\n<p>Python has two basic modes:</p>\n<ol>\n<li>Script mode (or Normal mode)</li>\n</ol>\n<ul>\n<li>The mode where the scripted and finished .py files are in the Python\nInterpreter.</li>\n</ul>\n<ol start=\"2\">\n<li>Interactive mode</li>\n</ol>\n<ul>\n<li>A command line shell which gives immediate feedback for each statement,\nwhile running previously fed statements in active memory.</li>\n</ul>\n<h2>b) List identity Operators</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>Returns <code>True</code> if both variables are sames object</td>\n<td>x is y</td>\n</tr>\n<tr>\n<td>is not</td>\n<td>Returns <code>False</code> if both variables are sames object</td>\n<td>x is not y</td>\n</tr>\n</tbody>\n</table>\n<h2>c) Give two differences between list and tuple.</h2>\n<h3>List</h3>\n<ul>\n<li>Lists are mutable.</li>\n<li>The list is better for performing operations.</li>\n<li>Lists consume more memory.</li>\n<li>More likely error will occur.</li>\n</ul>\n<h3>Tuple</h3>\n<ul>\n<li>Tuples are immutable.</li>\n<li>The implication of iterations is faster.</li>\n<li>Tuple consume less memory.</li>\n<li>Less likely error will occur.</li>\n</ul>\n<h2>d) Explain Local and Global variable.</h2>\n<table>\n<thead>\n<tr>\n<th>Local</th>\n<th>Global</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>It is declare  inside a function</td>\n<td>It is declared outside the function</td>\n</tr>\n<tr>\n<td>It is created when the function starts execution and lost when the function terminate.</td>\n<td>It is created before the program’s global execution starts and lost when the program terminates.</td>\n</tr>\n<tr>\n<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>\n<td>You can access global variables by any statement in the program.</td>\n</tr>\n<tr>\n<td>Parameters passing is required for local variables to access the value in other function.</td>\n<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>\n</tr>\n</tbody>\n</table>\n<h2>e) Define class and object in python.</h2>\n<h3>Class</h3>\n<ul>\n<li>Class is a blueprint for the object.</li>\n<li>We define a class by using the keyword class.</li>\n<li>Class objects are used to access different attributes.</li>\n</ul>\n<h3>Object</h3>\n<ul>\n<li>Classes are the user-defined blueprints that help us create an “object”.</li>\n<li>Objects are the instances of a particular class.</li>\n<li>Every other element in Python will be an object of some class, such as the string, dictionary, number(10,40), etc.</li>\n</ul>\n<h2>f) How to give single and multiline comment in python.</h2>\n<h3>Single-Line</h3>\n<ul>\n<li>Add the hash (#) symbol before the comment:</li>\n</ul>\n<pre><code class=\"language-python\"># This is your comment\n</code></pre>\n<h3>Multiline</h3>\n<p>-Python will ignore string literals that are not assigned to a variable, you can add a multiline string (triple quotes) in your code, and place your comment inside it:</p>\n<pre><code class=\"language-python\">&quot;&quot;&quot;\nThis is a comment\nwritten in\nmore than just one line\n&quot;&quot;&quot;\n</code></pre>\n<h2>g) List different modes of opening file in python.</h2>\n<p>There are four different methods modes for opening a file:</p>\n<ul>\n<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>\n<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not\nexist.</li>\n<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>\n<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not\nexist.</li>\n</ul>\n<p>In addition, the file should be handled as binary or text mode:</p>\n<ul>\n<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>\n<li>b - Binary - Binary mode (e.g. images).</li>\n</ul>\n<h2>a) Write a program to print following:</h2>\n<pre><code class=\"language-python\">rows = int(input(&quot;Enter number of rows: &quot;))\n\nfor i in range(rows):\n    for j in range(i+1):\n        print(j+1, end=&quot; &quot;)\n    print(&quot;\\n&quot;)\n</code></pre>\n<h2>b) Explain four Buit-in tuple functions python with example.</h2>\n<ul>\n<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>\n<li><code>max()</code> - Highest value will returned.</li>\n<li><code>min()</code> - Lowest value be returned.</li>\n<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>\n</ul>\n<h2>Explain how to use user defined function in python with example.</h2>\n<p>In Python, a user-defined function’s declaration begins with the keyword def and followed by the function name.</p>\n<pre><code class=\"language-python\">def printt():\n    print(&quot;This is Python 3.2 Tutorial&quot;)\n    print(&quot;This is Python 3.2 Tutorial&quot;)\n    print(&quot;This is Python 3.2 Tutorial&quot;)\nprintt()\n</code></pre>\n<p>Output:</p>\n<pre><code>This is Python 3.2 Tutorial\nThis is Python 3.2 Tutorial\nThis is Python 3.2 Tutorial\n</code></pre>\n<h2>d) Write a program to create class EMPLOYEE with ID and NAME and display its contents.</h2>\n<pre><code class=\"language-python\">class Employee:\n\tname = &quot;&quot;\n\tdepartment = &quot;&quot;\n\tsalary = 0\n\n\tdef setData(self):\n\t\tself.name = input(&quot;Enter Name: &quot;)\n\t\tself.department = input(&quot;Enter Department: &quot;)\n\t\tself.salary = int(input(&quot;Enter Salary: &quot;))\n\n\tdef showData(self):\n\t\tprint(&quot;Name:&quot;, self.name)\n\t\tprint(&quot;Department:&quot;, self.department)\n\t\tprint(&quot;Salary:&quot;, self.salary)\n\ne = Employee()\ne.setData()\ne.showData()\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter Name: Jonney\nEnter Department: Testing\nEnter Salary: 20000\nName: Jonney\nDepartment: Testing\nSalary: 20000\n</code></pre>\n<h2>List Data types used in python. Explain any two with example.</h2>\n<p>Thare are three data type in python numbers, string &amp; boolean.</p>\n<h3>String</h3>\n<ul>\n<li>String is a collection of group of characters.</li>\n<li>String are identified as a contiguous set of characters enclosed in single quotes(’ ') or double quotes(&quot; &quot;).</li>\n<li>String can also can be define with str() function.</li>\n</ul>\n<h3>Boolean</h3>\n<ul>\n<li>Boolean represents the two values namely False and True.</li>\n<li>The true value is represented true as 1 and false as 0.</li>\n</ul>\n<h2>b) Explain membership and assignment operators with example.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>True if value in list or in sequence</td>\n<td>(‘H’ in x) is True</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>False if value not in list or in sequence</td>\n<td>(‘H’ in x) is False</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th style=\"text-align:center\">Description</th>\n<th>Syntax</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td style=\"text-align:center\">Assign value of right side of expression to left side operand</td>\n<td>x = y + z</td>\n</tr>\n<tr>\n<td>+=</td>\n<td style=\"text-align:center\">Add and Assign: Add right side operand with left side operand and then assign to left operand</td>\n<td>a += b</td>\n</tr>\n<tr>\n<td>-=</td>\n<td style=\"text-align:center\">Subtract AND: Subtract right operand from left operand and then assign to left operand: True if both operands are equal</td>\n<td>a -= b</td>\n</tr>\n<tr>\n<td>*=</td>\n<td style=\"text-align:center\">Multiply AND: Multiply right operand with left operand and then assign to left operand</td>\n<td>a *= b</td>\n</tr>\n</tbody>\n</table>\n<h2>c) Explain indexing and slicing in list with example.</h2>\n<ul>\n<li>“Indexing” means referring to an element of an iterable by its position within the iterable.</li>\n<li>“Slicing” means getting a subset of elements from an iterable based on their indices.</li>\n</ul>\n<h2>d) Write a program for importing module for addition and substraction of two numbers.</h2>\n<pre><code class=\"language-python\">a = int(input(&quot;Enter first number: &quot;))\nb = int( input(&quot;Enter second number: &quot;))\nSum = a+b; #Add two numbers\nDifference = a-b; #Subtract two numbers\n# To print the result\nprint(&quot;Addition of two numbers = &quot;,Sum)\nprint(&quot;Subtraction of two numbers = &quot;,Difference)\n</code></pre>\n<p>Output:</p>\n<pre><code>Output:\nEnter first number: 30\nEnter second number: 20\nAddition of two numbers = 50\nSubtraction of two numbers = 10\n</code></pre>\n<h2>a) Write a program to create dictionary of students that includes their ROLL NO. and NAME:</h2>\n<p>i) Add three students in above dictionary\nii) Update name= ‘Shreyas’ of ROLL NO = 2\niii) Delete information of ROLL NO = 1</p>\n<pre><code class=\"language-python\">students = {\n  1: &quot;ronney&quot;,\n  2: &quot;jay&quot;\n}\n\nstudents[2] = &quot;Shreyas&quot;\ndel students[1]\nprint(students)\n</code></pre>\n<p>Output:</p>\n<pre><code>{ 2: &quot;Shreyas&quot; }\n</code></pre>\n<h2>b) Explain decision making statements If-else, if-elif-else with example.</h2>\n<p>The if…elif…else statement is used in Python for decision making.</p>\n<pre><code class=\"language-python\">num = 3.4\n\nif num &gt; 0:\n    print(&quot;Positive number&quot;)\nelif num == 0:\n    print(&quot;Zero&quot;)\nelse:\n    print(&quot;Negative number&quot;)\n</code></pre>\n<h2>c) Explain use of format () method with example.</h2>\n<p>Python format() function has been introduced for handling complex string formatting more efficiently.</p>\n<pre><code class=\"language-python\">txt = &quot;I have {an:.2f} Ruppes!&quot;\nprint(txt.format(an = 4))\n</code></pre>\n<p>Output:</p>\n<pre><code>I have 4.00 Ruppes!\n</code></pre>\n<h2>d) Explain building blocks of python.</h2>\n<ul>\n<li>The core data structures to learn in Python are List (list), Dictionary (dict), Tuple (tuple), and Set (set).</li>\n<li>To indicate a block of code in Python, you must indent each line of the block by the same amount.</li>\n</ul>\n<h2>e) Write a program illustrating use of user defined package in python.</h2>\n<p>Packages are a way of structuring many packages and modules which helps in a well-organized hierarchy of data set, making the directories and modules easy to access.</p>\n<p><a href=\"http://file1.py/\">file1.py</a>:</p>\n<pre><code class=\"language-python\">class Bmw:\n    # First we create a constructor for this class\n    # and add members to it, here models\n    def __init__(self):\n        self.models = ['i8', 'x1', 'x5', 'x6']\n\n    # A normal print function\n    def outModels(self):\n        print('These are the available models for BMW')\n        for model in self.models:\n            print('\\t%s ' % model)\n</code></pre>\n<p><a href=\"http://file2.py/\">file2.py</a></p>\n<pre><code class=\"language-python\">from Bmw import Bmw\n</code></pre>\n<h2>Write the output of the following:</h2>\n<pre><code>&gt;&gt;&gt; a = [2, 5, 1, 3, 6, 9, 7]\n&gt;&gt;&gt; a[2:6] = [2, 4, 9, 0]\n&gt;&gt;&gt; print (a)\n</code></pre>\n<p>Ans:</p>\n<pre><code>[2, 5, 2, 4, 9, 0, 7]\n</code></pre>\n<pre><code>b = [&quot;Hello&quot;, &quot;Good&quot;]\nb.append(&quot;python&quot;)\nprint (b)\n</code></pre>\n<p>Ans:</p>\n<pre><code>['Hello', 'Good', 'python']\n</code></pre>\n<pre><code>t1 = [3, 5, 6, 7]\nprint (t1[2])\nprint (t1[-1])\nprint (t1[2:])\nprint(t1[:])\n</code></pre>\n<p>Ans:</p>\n<pre><code>6\n7\n[6, 7]\n[3, 5, 6, 7]\n</code></pre>\n<h2>Explain method overloading in python with example.</h2>\n<ul>\n<li>overloading is the ability of a function or an operator to behave in different ways based on the parameters that are passed to the function, or the operands that the operator acts on.</li>\n</ul>\n<pre><code class=\"language-python\">class A:\n    def __init__(self, a):\n        self.a = a\n\n    # adding two objects\n    def __add__(self, o):\n        return self.a + o.a\nob1 = A(1)\nob2 = A(2)\nob3 = A(&quot;Geeks&quot;)\nob4 = A(&quot;For&quot;)\n\nprint(ob1 + ob2)\nprint(ob3 + ob4)\n</code></pre>\n<h2>Write a program to open a file in write mode and some contents at the end of file.</h2>\n<pre><code class=\"language-python\">o = open(&quot;name.txt&quot;, &quot;w&quot;)\no.write(&quot;I am a programmer&quot;)\no.close()\no = open(&quot;name.txt&quot;, &quot;r&quot;)\nprint(o.read())\no.close()\n</code></pre>\n<p>O/P</p>\n<pre><code>I am a programmer\n</code></pre>\n<h2>a) Explain package Numpy with example.</h2>\n<ul>\n<li>Numpy is a python package which stands for “Numerical Python”.</li>\n</ul>\n<pre><code class=\"language-python\">import numpy as n\na=n.ones((3, 3))\na[1:-1,1:-1]=0\nprint(a)\n</code></pre>\n<p>Output:</p>\n<pre><code>[[1. 1. 1.]\n [1. 0. 1.]\n [1. 1. 1.]]\n</code></pre>\n<h2>6) Write a program to implement the concept of inheritance in python.</h2>\n<pre><code class=\"language-python\">class Parent:\n\tparentname = &quot;&quot;\n\tchildname = &quot;&quot;\n\tdef show_parent(self):\n\t\tprint(self.parentname)\n\nclass Child(Parent):\n\tdef show_child(self):\n\t\tprint(self.childname)\n\nc = Child()\nc.parentname = &quot;Arati&quot;\nc.childname = &quot;Purva&quot;\nc.show_parent()\nc.show_child()\n</code></pre>\n<h2>c) Explain Try-except block used in exception handling in python with example.</h2>\n<ul>\n<li>When an exception occurs, Python will normally stop and generate an error message.</li>\n<li>These exceptions can be handled using the try statement.</li>\n<li>The except block lets you handle the error.</li>\n</ul>\n<pre><code class=\"language-python\">try:\n  print(x)\nexcept NameError:\n  print(&quot;Variable x is not defined&quot;)\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Finals&description=Python%20a)%20Name%20different%20modes%20of%20Python.%20Python%20has%20two%20basic%20modes:%20%20Script%20mode%20(or%20Normal%20mode)%20%20%20The%20mode%20where%20the%20scripted%20and%20finished%20.py%20files%20are%20in%20the%20Python%20Interpreter.%20%20%20Interactive%20mode%20%20%20A%20command%20line%20shell%20which%20gives%20immediate%20feedback%20for%20each%20statement,%20whi&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/sample-paper-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/sample-paper-6s.html",
      "title": "Sample Paper 6S",
      "content_html": "<h2>Q1 Any FIVE</h2>\n<h3>a. Name different modes of Python.</h3>\n<p>Python has two basic modes:</p>\n<ol>\n<li>Script mode (or Normal mode)\n<ul>\n<li>The mode where the scripted and finished .py files are in the Python\nInterpreter.</li>\n</ul>\n</li>\n<li>Interactive mode\n<ul>\n<li>A command line shell which gives immediate feedback for each statement,\nwhile running previously fed statements in active memory.</li>\n</ul>\n</li>\n</ol>\n<h3>b. List identity Operators</h3>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>Returns <code>True</code> if both variables are sames object</td>\n<td>x is y</td>\n</tr>\n<tr>\n<td>is not</td>\n<td>Returns <code>False</code> if both variables are sames object</td>\n<td>x is not y</td>\n</tr>\n</tbody>\n</table>\n<h3>c. Describe Dictionary</h3>\n<ul>\n<li>A dictionary is collection which is unordered, changeable and indexed.</li>\n<li>Dictionaries are written with curl brackets, and they have keys and values.</li>\n<li>Example:<pre><code class=\"language-python\">company = {\n\t&quot;name&quot;: &quot;Apple&quot;,\n\t&quot;product&quot;: &quot;IPhone&quot;\n\t&quot;model&quot;: &quot;11&quot;\n}\n</code></pre>\n</li>\n</ul>\n<h3>d. State use of namespace in Python</h3>\n<ul>\n<li>A namespace is a simple system to control the names in a program.</li>\n<li>Python implements namespaces in the form of dictionaries.</li>\n<li>It maintains a name-to-object mapping where names act as keys and the objects\nas values.</li>\n</ul>\n<h3>e. List different object oriented features supported by Python.</h3>\n<ul>\n<li>Python OPP Concepts\n<ol>\n<li>Object</li>\n<li>Class</li>\n<li>Method</li>\n<li>Inheritance</li>\n<li>Polymorphism</li>\n<li>Data Abstraction</li>\n<li>Encapsulation</li>\n</ol>\n</li>\n</ul>\n<h3>f. Write steps involved in creation of a user defined exception?</h3>\n<ul>\n<li>Exception can be define by creating a new class.</li>\n<li>This exception class has to be derived, either directly or indirectly, from the built-in <code>Exception</code>.</li>\n<li>When the programmer suspects the possibility of exception, he should raise his\nown exception using <code>raise</code>.</li>\n<li>The programmer can insert the code inside a <code>try</code> block.</li>\n<li>Catch the exception using <code>except</code> block.</li>\n<li>Example:<pre><code class=\"language-python\">class Error(Exception):\n\tprint(&quot;Value can't be 0.&quot;)\n\nnumber = 0\n\ntry:\n\tif number == 0:\n\t\traise Error\n\telse:\n\t\tprint(&quot;Value is more then 0.&quot;)\nexcept Error:\n\tpass\n</code></pre>\n</li>\n<li>Output:<pre><code>Value can't be 0.\n</code></pre>\n</li>\n</ul>\n<h3>g. Describe Python Interpreter</h3>\n<ul>\n<li>Python interpreter converts the code written in Python language by users to\nlanguage which computer hardware or system can understand.</li>\n<li>Python interpreter is a bytecode interpreter, its input is instruction set\nsets called bytecode.</li>\n</ul>\n<h3>h. List features of Python</h3>\n<ul>\n<li>Easy to code</li>\n<li>High Level programming language</li>\n<li>Object-Oriented Language</li>\n<li>Portable language</li>\n<li>Use interpreter</li>\n<li>GUI Support</li>\n</ul>\n<h2>Q2 Any THREE</h2>\n<h3>a. Explain two Membership and two logical operators in python with appropriate examples.</h3>\n<h4>Membership Operators</h4>\n<ul>\n<li>Membership operators are used to test whether a value is found within a\nsequence.</li>\n<li>Example of <code>in</code>:<pre><code class=\"language-python\">x = 4\ny = 8\nlist = [1, 2, 3, 4, 5]\n\nif (x in list):\n\tprint(&quot;X is in list array&quot;)\nelse:\n\tprint(&quot;X is not in list array&quot;)\n</code></pre>\nOutput:<pre><code>X is in list array\n</code></pre>\n</li>\n<li>Example of <code>not in</code>:<pre><code class=\"language-python\">if (y not in list):\n\tprint(&quot;Y is not in list array&quot;)\nelse:\n\tprint(&quot;Y is in list array&quot;)\n</code></pre>\nOutput:<pre><code>Y is not in list array\n</code></pre>\n</li>\n</ul>\n<h4>Logical Operators</h4>\n<ul>\n<li>Logical operators are usedto perform locical operations on the values of\nvariables. The value is either <code>true</code> or <code>false</code></li>\n<li>Example of <code>and</code>, <code>or</code> and <code>not</code>.<pre><code class=\"language-python\">a = True\nb = False\nprint('a and b is', a and b)\nprint('a or b is', a or b)\nprint('not a is', not a)\n</code></pre>\n<pre><code>a and b is False\na or b is True\na not b is False\n</code></pre>\n</li>\n</ul>\n<h3>b. Describe any four methods of lists in Python</h3>\n<ul>\n<li><code>append()</code> - Adds an element at the end of the list.</li>\n<li><code>pop()</code> - Removes the element at the specified position.</li>\n<li><code>sort()</code> - Sorts the list</li>\n<li><code>clear()</code> - Removes all the elements from the list.\nExample:</li>\n</ul>\n<pre><code class=\"language-python\">fruits = ['apple', 'banana', 'cherry']\n\nfruits.append(&quot;orange&quot;)\nprint(fruits)\n\nfruits.pop(1)\nprint(fruits)\n\nfruits.sort()\nprint(fruits)\n\nfruits.clear()\nprint(fruits)\n</code></pre>\n<p>Output:</p>\n<pre><code>['apple', 'banana', 'cherry', 'orange']\n['apple', 'cherry', 'orange']\n['apple', 'cherry', 'orange']\n\n</code></pre>\n<h3>c. Comparing between local and global variable</h3>\n<table>\n<thead>\n<tr>\n<th>Local</th>\n<th>Global</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>It is declare  inside a function</td>\n<td>It is declared outside the function</td>\n</tr>\n<tr>\n<td>It is created when the function starts execution and lost when the function terminate.</td>\n<td>It is created before the program’s global execution starts and lost when the program terminates.</td>\n</tr>\n<tr>\n<td>Local variables can be accessed with the help of statements, inside a function in which they are declared.</td>\n<td>You can access global variables by any statement in the program.</td>\n</tr>\n<tr>\n<td>Parameters passing is required for local variables to access the value in other function.</td>\n<td>Parameters passing is not necessary for a global variable as it is visible throughout the program</td>\n</tr>\n</tbody>\n</table>\n<h3>d. Write a Python program to print Fibonacci series up to n terms</h3>\n<p>Example:</p>\n<pre><code class=\"language-python\">term = int(input(&quot;Enter the term: &quot;))\n\nn1, n2 = 0, 1\n\nif term &lt; 0:\n\tprint(&quot;Invalid term&quot;)\nelse:\n\tfor i in range(term):\n\t\tprint(n1)\n\t\tnth = n1 + n2\n\t\tn1 = n2\n\t\tn2 = nth\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter the term: 7\n0\n1\n1\n2\n3\n5\n8\n</code></pre>\n<h2>Q3 Any THREE</h2>\n<h3>a. Write a program to input any two and interchange the tuple variable.</h3>\n<p>Example:</p>\n<pre><code>a = (1, 2, 3, 4, 5)\nb = (13, 23, 36, 47, 75)\n\na,b = b,a\n\nprint(a)\nprint(b)\n</code></pre>\n<p>Output:</p>\n<pre><code>(13, 23, 36, 47, 75)\n(1, 2, 3, 4, 5)\n</code></pre>\n<h3>b. Explain different loops available in python with suitable examples.</h3>\n<h4><code>while</code></h4>\n<p>A <code>while</code> loop executes a target statement as long as given condition is true.</p>\n<p>Syntax:</p>\n<pre><code>while expression: statement(s)\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">count = 0\n\nwhile(count &lt; 5):\n\tprint(count)\n\tcount += 1\n\nprint(&quot;over&quot;)\n</code></pre>\n<p>Output:</p>\n<pre><code>0\n1\n2\n3\n4\nover\n</code></pre>\n<h4><code>for loop</code></h4>\n<p>It has the ability to iterate over the items of any sequence, such as a list or\na string.</p>\n<p>Syntax:</p>\n<pre><code>for iterating in sequence: statements(s)\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">fruits = ['banana', 'apple', 'mango']\n\nfor fruit in fruits:\n\tprint(fruit)\n\nprint(&quot;over&quot;)\n</code></pre>\n<p>Output:</p>\n<pre><code>banana\napple\nmango\nover\n</code></pre>\n<h4>Nested loops</h4>\n<p>Python programming language allows to use one loop inside another loop.</p>\n<p>Syntax:</p>\n<pre><code>for iterating in sequence:\n\tfor iterating in sequence:\n\t\tstatements(s)\n\tstatements(s)\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">nums = [1, 2, 3]\nwords = [&quot;hello&quot;, &quot;hi&quot;, &quot;bye&quot;]\n\nfor num in nums:\n\tprint(num)\n\n\tfor word in words:\n\t\tprint(word)\n</code></pre>\n<p>Output:</p>\n<pre><code>1\nhello\nhi\nbye\n2\nhello\nhi\nbye\n3\nhello\nhi\nbye\n</code></pre>\n<h3>c. Describe various modes of file object? Explain any two in detail.</h3>\n<p>There are four different methods modes for opening a file:</p>\n<ul>\n<li><strong>r</strong> - <em>Read</em> - Opens a file for reading. Error if the file does not exist.</li>\n<li><strong>w</strong> - <em>Write</em> - Opens a file for writing. Creates the file if it does not\nexist.</li>\n<li><strong>x</strong> - <em>Create</em> - Creates the specified file. Error if file exist.</li>\n<li><strong>a</strong> - <em>Append</em> - Opens a file for appending. Creates the if it does not\nexist.</li>\n</ul>\n<p>In addition, the file should be handled as binary or text mode:</p>\n<ul>\n<li>t - <strong>Text</strong> - Default value - <em>Text mode</em>.</li>\n<li>b - Binary - Binary mode (e.g. images).</li>\n</ul>\n<h4>Read a file</h4>\n<p>The <code>read()</code> method and <strong>r</strong> mode is used to read files.\nBefore read a file, the file must open using <code>open()</code> function.</p>\n<p><code>text.txt</code> file content:</p>\n<pre><code class=\"language-txt\">Hello World\n</code></pre>\n<p>Program:</p>\n<pre><code class=\"language-python\">f = open(&quot;text.txt&quot;, &quot;r&quot;)\nprint(f.read())\n</code></pre>\n<p>Output:</p>\n<pre><code>Hello world\n</code></pre>\n<h4>Write a file</h4>\n<p>The <code>write()</code> method and <code>a</code> or <code>w</code> modes is used to write files.</p>\n<p>Program:</p>\n<pre><code class=\"language-python\">f = open(&quot;text.txt&quot;, &quot;w&quot;)\nf.write(&quot;Hello World&quot;)\nf.close()\n</code></pre>\n<p><code>text.txt</code> file content:</p>\n<pre><code>Hello World\n</code></pre>\n<h3>d. Illustrate the use of method overriding? Explain with example</h3>\n<p>If a class inherits a method from its superclass, then there is a chance to\noverride the method provided.\nExample:</p>\n<pre><code class=\"language-python\">class Parent:\n\tdef echo(self):\n\t\tprint('I am from Parent class.')\n\nclass Child(Parent):\n\tdef echo(self):\n\t\tprint('I am from Child class.')\n\np = Parent()\nc = Child()\n\np.echo()\nc.echo()\n</code></pre>\n<p>Output:</p>\n<pre><code>I am from Parent class.\nI am from Child class.\n</code></pre>\n<h2>Q4 Any THREE</h2>\n<h3>a. Use of any four methods of tuple in Python?</h3>\n<ul>\n<li><code>len()</code> - Returns the <strong>length</strong> of the tuple.</li>\n<li><code>max()</code> - Highest value will returned.</li>\n<li><code>min()</code> - Lowest value be returned.</li>\n<li><code>count()</code> - Returns the number of times a specified value occurs in tuple.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-python\">t = (12, 45, 43, 8, 35, 12)\nprint(len(t))\nprint(max(t))\nprint(min(t))\nprint(t1.count(12))\n</code></pre>\n<p>Output:</p>\n<pre><code>6\n45\n8\n2\n</code></pre>\n<h3>b. Write a python Program to read contents of first.txt and write same content in second.txt file</h3>\n<p><code>first.txt</code> file content:</p>\n<pre><code>Hello World\n</code></pre>\n<p>Program:</p>\n<pre><code class=\"language-python\">with open('first.txt', 'r') as firstfile, open('second.txt', 'a') as secondfile:\n\n\tfor line in firstfile:\n\t\tsecondfile.write(line)\n</code></pre>\n<p><code>second.txt</code> file content:</p>\n<pre><code>Hello world\n</code></pre>\n<h3>c. Show how try…except block is used for exception handling in Python with example.</h3>\n<ul>\n<li>When an exception occurs, Python will normally stop and generate an error\nmessage.</li>\n<li>These exceptions can be handled using the <code>try</code> statement.</li>\n<li>The <code>except</code> block lets you handle the error.</li>\n<li>Syntax:<pre><code class=\"language-python\">try:\n\t# Code\nexcept:\n\t# Code\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">try:\n\tprint(x)\nexcept NameError:\n\tprint(&quot;Variable x is not defined&quot;)\n</code></pre>\n</li>\n<li>Output:<pre><code>Variable x is not defined.\n</code></pre>\n</li>\n</ul>\n<h3>d. Write the output for the following if the variable fruit = “banana”</h3>\n<pre><code>&gt;&gt;&gt; fruit[:3]\n&gt;&gt;&gt; fruit[3:]\n&gt;&gt;&gt; fruit[3:3]\n&gt;&gt;&gt; fruit[:]\n</code></pre>\n<p>Output:</p>\n<pre><code>&gt;&gt;&gt; fruit = &quot;banana&quot;\n&gt;&gt;&gt; fruit[:3]\n'ban'\n&gt;&gt;&gt; fruit[3:]\n'ana'\n&gt;&gt;&gt; fruit[3:3]\n''\n&gt;&gt;&gt; fruit[:]\n'banana'\n</code></pre>\n<h2>Q5 Any TWO</h2>\n<h3>a. Determine various data types available in Python with example.</h3>\n<h4>Numbers</h4>\n<ul>\n<li><code>int</code>, <code>float</code> and complex numbers fall under numbers category.</li>\n<li>Example:<pre><code class=\"language-python\">a = 5\na = 2.0\na = 1+2j\n</code></pre>\n</li>\n</ul>\n<h4>String</h4>\n<ul>\n<li>String is sequence of Unicode characters.</li>\n<li>We can use single quotes or double quotes to represent strings.</li>\n<li>Multi-line string can be denoted using triple quotes <code>'''</code> or <code>&quot;&quot;&quot;</code>.</li>\n<li>Example:<pre><code class=\"language-python\">s = &quot;This is string&quot;\ns = '''\n\tA multi line string\n'''\n</code></pre>\n</li>\n</ul>\n<h4>List</h4>\n<ul>\n<li>List is an ordered sequence of items.</li>\n<li>It is one of the most used datatype in Python.</li>\n<li>List is very flexible.</li>\n<li>All the items in a list don not need to be the same type.</li>\n<li>Example:<pre><code class=\"language-python\">a = [1, 2.2, 'python']\n</code></pre>\n</li>\n</ul>\n<h4>Tuple</h4>\n<ul>\n<li>Tuple is an ordered sequence of items same as a list.</li>\n<li>The only difference is that tuples are immutable.</li>\n<li>Tuples once created cannot be modified.</li>\n<li>Example:<pre><code class=\"language-python\">t = (5, 'program', 1+3j)\n</code></pre>\n</li>\n</ul>\n<h4>Set</h4>\n<ul>\n<li>Set is an unordered collection of unique items.</li>\n<li>Set is defined by values separated by comma inside braces { }.</li>\n<li>Items in a set are not ordered</li>\n<li>Example:<pre><code class=\"language-python\">a = {5,2,3,1,4}\n</code></pre>\n</li>\n</ul>\n<h4>Dictionary</h4>\n<ul>\n<li>Dictionary is an unordered collection of key-value pairs.</li>\n<li>It is generally used when we have a huge amount of data.</li>\n<li>Dictionaries are defined within braces <code>{}</code>.</li>\n<li>Example:<pre><code class=\"language-python\">d = {1:'value','key':2}\n</code></pre>\n</li>\n</ul>\n<h3>b. Write a python program to calculate factorial of given number using function.</h3>\n<p>Example:</p>\n<pre><code class=\"language-python\">n = int(input(&quot;Enter the number: &quot;))\nf = 1\n\nfor i in range(1, n + 1):\n\tf = f * 1\n\nprint(f)\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter the number: 6\n720\n</code></pre>\n<h3>c. Show the output for the following:</h3>\n<pre><code>&gt;&gt;&gt; a = [1, 2, 3]\n&gt;&gt;&gt; b = [4, 5, 6]\n&gt;&gt;&gt; c = a + b\n&gt;&gt;&gt; print(c)\n[1, 2, 3, 4, 5, 6]\n</code></pre>\n<pre><code>&gt;&gt;&gt; [1, 2, 3] * 3\n[1, 2, 3, 1, 2, 3, 1, 2, 3]\n</code></pre>\n<pre><code>&gt;&gt;&gt; t = ['a', 'b', 'c', 'd', 'e', 'f']\n&gt;&gt;&gt; t[1:3] = ['x', 'y']\n&gt;&gt;&gt; print(t)\n['a', 'x', 'y', 'd', 'e', 'f']\n</code></pre>\n<h2>Q6 Any TWO</h2>\n<h3>a. Describe Set in python with suitable examples.</h3>\n<h4>Creating a set</h4>\n<p>Set can be created using curly braces <code>{}</code> or using <code>set()</code> method.</p>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry'}\nfruits = set(['apple', 'banana', 'cherry'])\n</code></pre>\n<h4>Adding items to the set</h4>\n<p>Item can added using <code>add()</code> method.</p>\n<p>Example:</p>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry'}\nfruits.add('orange')\nprint(fruits)\n</code></pre>\n<p>Output:</p>\n<pre><code>{'apple', 'banana', 'cherry', 'orange'}\n</code></pre>\n<h4>Removing items from the set</h4>\n<p>There three methods to remove sets:</p>\n<ul>\n<li><code>discard()</code> - removes given items from set.</li>\n<li><code>remove()</code> - removes given item from set. If item is not avaliable it will\ngive error.</li>\n<li><code>pop()</code> - removes list item from the set.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry', 'orange'}\nfruits.discard(&quot;apple&quot;)\nfruits.remove(&quot;banana&quot;)\nfruits.pop()\nprint(fruits)\n</code></pre>\n<p>Output:</p>\n<pre><code>{'cherry'}\n</code></pre>\n<h4>Comparison of set</h4>\n<ul>\n<li><code>|</code> - shows the union of two set.</li>\n<li><code>&amp;</code> - shows the intersection of two set.</li>\n<li><code>-</code> - shows the difference of two set.</li>\n<li><code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code> - comparison operators can also be use in set.</li>\n</ul>\n<pre><code class=\"language-python\">fruits = {'apple', 'banana', 'cherry'}\nfruits2 = {'orange', 'pineapple', 'apple'}\n\nprint(fruits|fruits2)\nprint(fruits&amp;fruits2)\nprint(fruits-fruits2)\nprint(fruits&gt;fruits2)\nprint(fruits&lt;fruits2)\nprint(fruits==fruits2)\n</code></pre>\n<p>Output:</p>\n<pre><code>{'apple', 'banana', 'cherry', 'orange', 'pineapple', 'apple'}\n{'apple'}\n{'banana', 'cherry', 'orange', 'pineapple'}\nFalse\nFalse\nTrue\n</code></pre>\n<h3>b. Illustrate class inheritance in Python with an example</h3>\n<h4>Simple Inheritance</h4>\n<p>In inheritance, the child class acquires the properties and access all the data\nmembers and function defined in the parent class.</p>\n<p>Illustration:</p>\n<pre><code> ┏━━━━━━━━━━┓\n ┃Base Class┃\n ┗━━━━━━━━━━┛\n      ⇑\n┏━━━━━━━━━━━━┓\n┃Deived Class┃\n┗━━━━━━━━━━━━┛\n</code></pre>\n<p>Syntax:</p>\n<pre><code class=\"language-python\">class Base:\n\t# Body of base class\nclass Derived(Base):\n\t# Body of derived class\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">class Parent:\n\tparentname = &quot;&quot;\n\tchildname = &quot;&quot;\n\tdef show_parent(self):\n\t\tprint(self.parentname)\n\nclass Child(Parent):\n\tdef show_child(self):\n\t\tprint(self.childname)\n\nc = Child()\nc.parentname = &quot;Arati&quot;\nc.childname = &quot;Purva&quot;\nc.show_parent()\nc.show_child()\n</code></pre>\n<p>Output:</p>\n<pre><code>Arati\nPurva\n</code></pre>\n<h4>Multiple inheritance</h4>\n<p>Multiple inheritace means that you’re inheriting the property of multiple\nclasses into one.</p>\n<p>Illustration:</p>\n<pre><code>┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓┏━━━━━━━━━━━━┓\n┃Base Class 1┃┃Base Class 2┃┃Base Class 3┃\n┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛┗━━━━━━━━━━━━┛\n     ┃              ┃             ┃\n     ┗━━━━━━━━━━━━━━╋━━━━━━━━━━━━━┛\n              ┏━━━━━━━━━━━━┓\n              ┃Deived Class┃\n              ┗━━━━━━━━━━━━┛\n</code></pre>\n<p>Syntax:</p>\n<pre><code class=\"language-python\">class A:\n\t# variable of class A\nclass B:\n\t# variable of class B\nclass C(A, B):\n\t# variable of class C\n</code></pre>\n<p>Example:</p>\n<pre><code class=\"language-python\">class Parent1:\n\tdef echo(self):\n\t\tprint(&quot;Parent class 1&quot;)\n\nclass Parent2:\n\tdef echo2(self):\n\t\tprint(&quot;Parent class 2&quot;)\n\nclass Child(Parent1, Parent2):\n\tdef show(self):\n\t\tprint(&quot;Child class&quot;)\n\nc = Child()\nc.echo()\nc.echo2()\nc.show()\n</code></pre>\n<p>Output:</p>\n<pre><code>Parent class 1\nParent class 2\nChild class\n</code></pre>\n<h3>c. Design a class Employee with data members: name, department and salary. Create suitable methods for reading and printing employee information</h3>\n<p>Example:</p>\n<pre><code class=\"language-python\">class Employee:\n\tname = &quot;&quot;\n\tdepartment = &quot;&quot;\n\tsalary = 0\n\n\tdef setData(self):\n\t\tself.name = input(&quot;Enter Name: &quot;)\n\t\tself.department = input(&quot;Enter Department: &quot;)\n\t\tself.salary = int(input(&quot;Enter Salary: &quot;))\n\n\tdef showData(self):\n\t\tprint(&quot;Name:&quot;, self.name)\n\t\tprint(&quot;Department:&quot;, self.department)\n\t\tprint(&quot;Salary:&quot;, self.salary)\n\ne = Employee()\ne.setData()\ne.showData()\n</code></pre>\n<p>Output:</p>\n<pre><code>Enter Name: Jonney\nEnter Department: Testing\nEnter Salary: 20000\nName: Jonney\nDepartment: Testing\nSalary: 20000\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Sample Paper 6S&description=Q1%20Any%20FIVE%20a.%20Name%20different%20modes%20of%20Python.%20Python%20has%20two%20basic%20modes:%20%20Script%20mode%20(or%20Normal%20mode)%20%20The%20mode%20where%20the%20scripted%20and%20finished%20.py%20files%20are%20in%20the%20Python%20Interpreter.%20%20%20Interactive%20mode%20%20A%20command%20line%20shell%20which%20gives%20immediate%20feedback%20for%20each%20statement,%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/ut1-6s.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/ut1-6s.html",
      "title": "UT1 6S",
      "content_html": "<p><strong>Note: WAP (write a program)</strong></p>\n<h2>WAP to print Fibonacci Series</h2>\n<pre><code class=\"language-python\">term = int(input(&quot;Enter the term: &quot;))\n\nn1, n2 = 0, 1\n\nif term &lt; 0:\n    print(&quot;Invalid term&quot;)\nelse:\n    for i in range(term):\n        print(n1)\n        nth = n1 + n2\n        n1 = n2\n        n2 = nth\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter the term: 7\n0\n1\n1\n2\n3\n5\n8\n</code></pre>\n<h2>Factorial of a number</h2>\n<pre><code class=\"language-python\">n = int(input(&quot;Enter the number: &quot;))\nf = 1\n\nfor i in range(1, n + 1):\n    f = f * i\n\nprint(f)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter the number: 6\n720\n</code></pre>\n<h2>Perform <code>intersection()</code>, <code>union()</code>, <code>difference()</code>, <code>symmetric_difference()</code> on <code>set</code></h2>\n<pre><code class=\"language-python\">set1 = {1, 5, 8, &quot;Google&quot;, 9, 6}\nset2 = {1, &quot;Google&quot;, 6, 3, 2, 11}\n\ni = set1.intersection(set2)\nu = set1.union(set2);\nd = set1.difference(set2)\ns = set1.symmetric_difference(set2)\n\nset1.clear()\n\nprint(&quot;Intersection =&quot;, i);\nprint(&quot;Union =&quot;, u);\nprint(&quot;Set Difference =&quot;, d);\nprint(&quot;Symmetric Difference =&quot;, s);\nprint(&quot;Clear Set =&quot;, set1);\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Intersection =  {1, 'Google', 6}\nUnion =  {1, 2, 3, 5, 6, 8, 9, 11, 'Google'}\nSet Difference =  {8, 9, 5}\nSymmetric Difference =  {2, 3, 5, 8, 9, 11}\nClear Set =  set()\n</code></pre>\n<h2>WAP that takes the marks of 5 Subjects and displays the grade</h2>\n<pre><code class=\"language-python\">sub1 = int(input(&quot;Enter marks of subject 1: &quot;))\nsub2 = int(input(&quot;Enter marks of subject 2: &quot;))\nsub3 = int(input(&quot;Enter marks of subject 3: &quot;))\nsub4 = int(input(&quot;Enter marks of subject 4: &quot;))\nsub5 = int(input(&quot;Enter marks of subject 5: &quot;))\n\ntotal = ((sub1 + sub2 + sub3 + sub4 + sub5) / 5)\nprint(&quot;\\nPercentage is&quot;, total)\n\nif total &gt; 75:\n    print(&quot;Distinction&quot;)\nelif total &gt;= 65 and total &lt; 75:\n    print(&quot;First Class&quot;)\nelif total &gt;= 50 and total &lt; 60:\n    print(&quot;Second Class&quot;)\nelif total &gt;=35 and total &lt; 50:\n    print(&quot;Third Class&quot;);\nelse:\n    print(&quot;Fail&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter marks of subject 1: 57\nEnter marks of subject 2: 78\nEnter marks of subject 3: 87\nEnter marks of subject 4: 50\nEnter marks of subject 5: 70\n\nPercentage is 68.4\nFirst Class\n</code></pre>\n<h2>Explain features of python</h2>\n<ol>\n<li>Python is easy to use and a high level programming language.</li>\n<li>Python is interpreted language</li>\n<li>Interactive mode</li>\n<li>Free and Open Source</li>\n<li>Platform independence</li>\n<li>Portable</li>\n<li>Object oriented language</li>\n</ol>\n<h2>WAP to check whether entered character is vowel or not</h2>\n<pre><code class=\"language-python\">ch = input(&quot;Enter the character: &quot;).lower()\n\nif(ch == 'a' or ch == 'e' or ch == 'i' or ch == 'o' or ch == 'u'):\n    print(&quot;Entered character is vowel.&quot;)\nelse:\n    print(&quot;Entered character is not a vowel.&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter character: a\nEntered character is a vowel.\n</code></pre>\n<h2>WAP to check number is prime or not</h2>\n<pre><code class=\"language-python\">num = int(input(&quot;Enter a number: &quot;));\n\nif num &gt; 1:\n    for i in range(2, num):\n        if (num % i) == 0:\n            print(num, &quot;is not a prime number.&quot;)\n            break;\n    else:\n        print(num, &quot;is prime number.&quot;)\nelse:\n    print(num, &quot;is not a prime number.&quot;);\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter the number: 11\n11 is a prime number.\n</code></pre>\n<h2>WAP checks whether the number is palindrome or not.</h2>\n<pre><code class=\"language-python\">n = input(&quot;Enter number: &quot;)\nrev = n[ : :-1]\n\nif rev == n:\n    print(n, &quot;is a palindrome.&quot;)\nelse:\n    print(n, &quot;is not a palindrome.&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter number: 33\n33 is a palindrome.\n</code></pre>\n<h2>WAP to perform following operation on list</h2>\n<ol>\n<li><strong>max()</strong> - Find largest number</li>\n<li><strong>reverse()</strong> - Find  Reverse of the list</li>\n<li><strong>i % 2</strong> - Select even item of the list</li>\n<li><strong>sum()</strong> - Sum of all item in a list</li>\n</ol>\n<h3>Find largest number</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\nprint(&quot;Largest number&quot;, max(a))\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Largest number 11\n</code></pre>\n<h3>Reverse list</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\na.reverse()\nprint(&quot;Reverse list&quot;, a)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Reverse list [11, 6, 4, 2, 1, 5, 2, 8]\n</code></pre>\n<h3>Even items</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\n\nfor i in a:\n  if (i % 2) == 0:\n    print(i)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>8\n2\n2\n6\n4\n</code></pre>\n<h3>Sum of all items</h3>\n<pre><code class=\"language-python\">a = [8,2,5,1,2,4,6,11]\nprint(&quot;Sumof all items:&quot;, sum(a))\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Sum of all items: 39\n</code></pre>\n<h2>Compare list and sets</h2>\n<table>\n<thead>\n<tr>\n<th>Lists</th>\n<th>Sets</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lists are Ordered.</td>\n<td>Sets are Unordered.</td>\n</tr>\n<tr>\n<td>Lists are Mutable.</td>\n<td>Sets are mutable but only stored immutable elements.</td>\n</tr>\n<tr>\n<td>Elements can be changed or replaced in Lists.</td>\n<td>Elements cannot be changed or replaced.</td>\n</tr>\n</tbody>\n</table>\n<h2>Describe various list functions</h2>\n<ol>\n<li><strong>extend()</strong> - add  all elements of of list to the another list</li>\n<li><strong>insert()</strong> - insert and item from the list</li>\n<li><strong>clear()</strong> - removes all elements from the list</li>\n<li><strong>copy()</strong> - returns a copy of the list</li>\n<li><strong>reverse()</strong> - reverse the order of element in the list</li>\n<li><strong>sort()</strong> - sort the element list</li>\n</ol>\n<p><strong>Note:</strong> <strong>Given below example will not come in exam. This is only for reference.</strong></p>\n<h3>extend()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\nlist2 = [1, 6, 3, 2, 11]\n\nlist1.extend(list2)\nprint(&quot;Extend:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Extend: [1, 5, 8, 9, 6, 1, 6, 3, 2, 11]\n</code></pre>\n<h3>insert()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.insert(3, 100)\nprint(&quot;Insert:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Insert: [1, 5, 8, 100, 9, 6]\n</code></pre>\n<h3>clear()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.clear()\nprint(&quot;Clear:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Clear: []\n</code></pre>\n<h3>reverse()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.reverse()\nprint(&quot;Reverse:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Reverse: [6, 9, 8, 5, 1]\n</code></pre>\n<h3>sort()</h3>\n<pre><code class=\"language-python\">list1 = [1, 5, 8, 9, 6]\n\nlist1.sort()\nprint(&quot;Sort:&quot;, list1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Sort: [1, 5, 6, 8, 9]\n</code></pre>\n<h2>Write a program convert US Dollars to Indian Rupees.</h2>\n<pre><code class=\"language-python\">usd = float(input(&quot;Enter currency in USD: &quot;))\ninr = usd * 75\nprint(&quot;The currency in INR is&quot;, inr)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Enter currency in USD: 2\nThe currency in INR: 150.0\n</code></pre>\n<h2>Explain operator in python</h2>\n<p>An operator is Single set of special symbols that performs predefined\noperations  on operators. Python provides a variety of operators, which are\ndescribed as follows.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Operators</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Arithmetic operators</td>\n<td>+, -, *, /, %, **, //</td>\n</tr>\n<tr>\n<td>Assignment Operators</td>\n<td>+=, =, -=, /=, //=</td>\n</tr>\n<tr>\n<td>Logical Operators</td>\n<td>and, or, not</td>\n</tr>\n<tr>\n<td>Bitwise Operators</td>\n<td>&amp;, &gt;&gt;, &lt;&lt;, ^</td>\n</tr>\n<tr>\n<td>Membership Operators</td>\n<td>in, not in</td>\n</tr>\n<tr>\n<td>Identity Operators</td>\n<td>is, is not</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note:</strong> <strong>Given below example will not come in exam. This is only for reference.</strong></p>\n<h3>Arithmetic operators</h3>\n<pre><code class=\"language-python\">num1 = int(input(&quot;Enter first number: &quot;))\nnum2 = int(input(&quot;Enter second number: &quot;))\n\nprint(num1, &quot;+&quot;, num2, &quot;=&quot;, num1 + num2)\nprint(num1, &quot;-&quot;, num2, &quot;=&quot;, num1 - num2)\nprint(num1, &quot;*&quot;, num2, &quot;=&quot;, num1 * num2)\nprint(num1, &quot;/&quot;, num2, &quot;=&quot;, num1 / num2)\nprint(num1, &quot;%&quot;, num2, &quot;=&quot;, num1 % num2)\nprint(num1, &quot;**&quot;, num2, &quot;=&quot;, num1 ** num2)\nprint(num1, &quot;//&quot;, num2, &quot;=&quot;, num1 // num2)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Enter first number: 10\nEnter second number: 10\n10 + 10 = 20\n10 - 10 = 0\n10 * 10 = 100\n10 / 10 = 1.0\n10 % 10 = 0\n10 ** 10 = 10000000000\n10 // 10 = 1\n</code></pre>\n<h3>Assignment Operators</h3>\n<pre><code class=\"language-python\">a = 3\nb = 5\n\na += b\n\nprint(a)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>8\n</code></pre>\n<h3>Logical Operators</h3>\n<pre><code class=\"language-python\">num1 = int(input(&quot;Enter first number: &quot;))\nnum2 = int(input(&quot;Enter second number: &quot;))\n\nif (num1 &lt; num2 and num1 &lt;= num2):\n    print(num1, &quot;&lt;&quot;, num2, &quot;and&quot;, num1, &quot;&lt;=&quot;, num2)\nelif (num1 &gt; num2 or num1 &gt;= num2):\n    print(num1, &quot;&gt;&quot;, num2, &quot;or&quot;, num1, &quot;&gt;=&quot;, num2)\nelif not(num1 &lt; num2 and num1 &lt;=num2):\n    print(&quot;Not:&quot;, num1, &quot;&lt;&quot;, num2, &quot;and&quot;, num1, &quot;&lt;=&quot;, num2)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Enter first number: 10\nEnter second number: 1\n10 &gt; 1 or 10 &gt;= 1\n</code></pre>\n<h3>Bitwise Operators</h3>\n<pre><code class=\"language-python\">num1 = int(input(&quot;Enter first number: &quot;))\nnum2 = int(input(&quot;Enter second number: &quot;))\n\nprint(num1, &quot;&amp;&quot;, num2, &quot;=&quot;, num1 &amp; num2)\nprint(num1, &quot;|&quot;, num2, &quot;=&quot;, num1 | num2)\nprint(num1, &quot;^&quot;, num2, &quot;=&quot;, num1 ^ num2)\nprint(num1, &quot;&gt;&gt;&quot;, num2, &quot;=&quot;, num1 &gt;&gt; num2)\nprint(num1, &quot;&lt;&lt;&quot;, num2, &quot;=&quot;, num1 &lt;&lt; num2)\nprint(&quot;~&quot;,num1, &quot;=&quot;, ~num1)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>Enter first number: 10\nEnter second number: 10\n10 &amp; 10 = 10\n10 | 10 = 10\n10 ^ 10 = 0\n10 &gt;&gt; 10 = 0\n10 &lt;&lt; 10 = 10240\n~ 10 = -11\n</code></pre>\n<h3>Membership Operators</h3>\n<pre><code class=\"language-python\">x = [&quot;apple&quot;, &quot;banana&quot;]\ny = [&quot;pineapple&quot;, &quot;orange&quot;]\n\nprint(&quot;apple in x:&quot;, &quot;apple&quot; in x)\nprint(&quot;pineapple not in x:&quot;, &quot;pineapple&quot; not in x)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>apple in x: True\npineapple not in x: True\n</code></pre>\n<h3>Identity Operators</h3>\n<pre><code class=\"language-python\">x = [&quot;apple&quot;, &quot;banana&quot;]\ny = [&quot;pineapple&quot;, &quot;orange&quot;]\n\nprint(&quot;x is y:&quot;, x is y)\nprint(&quot;x is not y:&quot;, x is not y)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>x is y: False\nx is not y: True\n</code></pre>\n<h2>Explain <code>continue</code>, <code>pass</code>, <code>break</code>, <code>else</code> with example.</h2>\n<h3>continue</h3>\n<p>The **continue **statement skips the code that comes after it, and the control\nis passed back to the next iteration.</p>\n<p><strong>Example</strong>:</p>\n<pre><code>for i in range(6):\n    if i == 7:\n        continue\n    print(&quot;The Number is:&quot; , i)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>The number is: 0\nThe number is: 1\nThe number is: 2\nThe number is: 3\nThe number is: 4\nThe number is: 5\nThe number is: 6\n</code></pre>\n<h3>pass</h3>\n<p>Python pass statement is used as a placeholder inside loops, functions, class,\nif-statement that is meant to be implemented later.</p>\n<p><strong>Example</strong>:</p>\n<pre><code>a = 10\nb = 20\nif a &lt; b:\n  pass\nelse:\n  print(&quot;b &lt; a&quot;)\n</code></pre>\n<p><strong>Output</strong>:\nNo output</p>\n<h3>break</h3>\n<p>The <strong>break</strong> statement takes care of terminating the loop in which it is used.\nIf the break statement is used inside nested loops, the current loop is\nterminated, and the flow will continue with the code followed that comes after\nthe loop.</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-python\">for i in range(4):\n    for j in range(4):\n        if j==2:\n            break\n        print(&quot;The number is&quot;, i, j)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>This number is 0 0\nThis number is 0 1\nThis number is 1 0\nThis number is 1 1\nThis number is 2 0\nThis number is 2 1\nThis number is 3 0\nThis number is 3 1\n</code></pre>\n<h3>else</h3>\n<p>**else **statement can be combined with an if statement. An else statement\ncontains the block of code that executes if the conditional expression in the\nif statement resolves to 0 or a FALSE value.</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-python\">num = 3\nif num &gt;= 0:\n    print(&quot;Positive or Zero&quot;)\nelse:\n    print(&quot;Negative number&quot;)\n</code></pre>\n<p><strong>Output</strong>:</p>\n<pre><code>Positive or Zero\n</code></pre>\n<h2>Define dictionary explain <code>access</code>, <code>delete</code>, <code>update()</code> dictionary</h2>\n<p>Dictionary in Python is an unordered collection of data values, used to store\ndata values like a map, which, unlike other Data Types that hold only a single\nvalue as an element, Dictionary holds key:value pair.</p>\n<h3>acces</h3>\n<p>You can access the items of a dictionary by referring to its key name</p>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"language-python\">di = {&quot;Name&quot;: &quot;VIVA&quot;,&quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;:123}\nx = di[&quot;Name&quot;]\nprint(x)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>VIVA\n</code></pre>\n<h3>update()</h3>\n<p>Updates the dictionary with the specified key-value pairs</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-python\">di = {&quot;Name&quot;: &quot;VIVA&quot;,&quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;: 123}\ndi.update({&quot;No&quot;:456})\nprint(di)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>{'Name': 'VIVA', 'Dept': 'TYCO', 'add': 'Virar', 'No': 456}\n</code></pre>\n<h3>del</h3>\n<p>The del keyword is used delete the dictionary completely</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-python\">di = {&quot;Name&quot;: &quot;VIVA&quot;, &quot;Dept&quot;: &quot;TYCO&quot;, &quot;add&quot;:&quot;Virar&quot;, &quot;No&quot;: 123}\ndel di\nprint(di)\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>NameError: name 'di' is not defined\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=UT1 6S&description=Note:%20WAP%20(write%20a%20program)%20WAP%20to%20print%20Fibonacci%20Series%20term%20=%20int(input(&quot;Enter%20the%20term:%20&quot;))%20%20n1,%20n2%20=%200,%201%20%20if%20term%20&lt;%200:%20%20%20%20%20print(&quot;Invalid%20term&quot;)%20else:%20%20%20%20%20for%20i%20in%20range(term):%20%20%20%20%20%20%20%20%20print(n1)%20%20%20%20%20%20%20%20%20nth%20=%20n1%20+%20n2%20%20%20%20%20%20%20%20%20n1%20=%20n2%20%20%20%20%20%20%20%20%20n2%20=%20nth%20%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/notes.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/notes.html",
      "title": "Notes",
      "content_html": "<h1>1. Introduction and Syntax of Python Program</h1>\n<h2>3. Enlist applications for Python programming.</h2>\n<p>Python is often used as a support language for software developers, for build\ncontrol and management, testing, and in many other ways.</p>\n<h2>4. What are the features of Python?</h2>\n<ul>\n<li>Easy to learn and use</li>\n<li>Interpreted Language</li>\n<li>Interactive Mode</li>\n<li>Free and Open Source</li>\n<li>Cross Platform/Portable</li>\n<li>OOP Language</li>\n</ul>\n<h2>5. List any four editors used for Python programming.</h2>\n<ul>\n<li>IDEA</li>\n<li>Sublime Text</li>\n<li>Vim</li>\n<li>Notepad++</li>\n</ul>\n<h2>6. ‘Python programming language is interpreted an interactive’ comment this sentence.</h2>\n<p>Python has two basic modes:</p>\n<ul>\n<li>Script mode</li>\n<li>Interactive mode</li>\n</ul>\n<h3>Script mode</h3>\n<p>The normal script mode is the mode where the scripted and finished <code>.py</code> files\nare run in the Python interpreter.</p>\n<h3>Interactive mode</h3>\n<p>The interactive mode is a command line shell which gives immediate feedback for\neach statement while running previously fed statements in active memory.</p>\n<h2>7. How to run python scripts? Explain in detail.</h2>\n<p>Open a command line and type the word python followed by the path to your script\nfile, like this: python <code>first_script.py</code> Hello World! Then you hit the ENTER\nbutton from the keyboard and that’s it.</p>\n<h2>8. What is interpreter? How it works? 9. Explain the following features of Python programming:</h2>\n<h3>(i) Simple</h3>\n<p>Python is considered one of the easiest programming languages to learn.</p>\n<h3>(ii) Platform independent</h3>\n<p>Python is a binary platform-independent programming language. The same Python\ncode can run on virtually all operating systems and platforms.</p>\n<h3>(iii) Interactive</h3>\n<p>Interactive mode is a command line shell which gives immediate feedback for each\nstatement, while running previously fed statements in active memory.</p>\n<h3>(iv) Object Oriented.</h3>\n<p>Object-oriented Programming is a programming paradigm that uses objects\nand classes in programming. It aims to implement real-world entities like\ninheritance, polymorphisms, encapsulation, etc. in the programming.</p>\n<h2>12. Write in brief about characters set of Python.</h2>\n<p>The character set is a set of alphabets, letters, symbols and some special\ncharacters that are valid in Python programming language.</p>\n<h3>Keywords</h3>\n<ul>\n<li>Python keywords are reserved word with that have special meaning and\nfunction.</li>\n<li>Keywords should not be used as variable name, constant, function name, or\nidentifier in the program code.</li>\n<li>Example: <code>and</code>, <code>as</code>, <code>assert</code>, <code>break</code> and many more.</li>\n</ul>\n<h2>13. Write in brief about any five keywords in Python.</h2>\n<ol>\n<li><code>True</code> - is used as the Boolean true value in Python code.</li>\n<li><code>False</code> - is used as the Boolean false value in Python code.</li>\n<li><code>break</code> - is used to break the loop.</li>\n<li><code>def</code> - is used to define the function in Python.</li>\n<li><code>while</code> - is used to make while loop in Python.</li>\n</ol>\n<h2>15. What is the role of indentation in Python?</h2>\n<ul>\n<li>A code block starts with indentation and ends with first unindented line.</li>\n<li>The amount of indention is up to us, but it must be consistent throughout\nthat block.</li>\n</ul>\n<h2>16. How to comment specific line(s) in Python program?</h2>\n<ul>\n<li>Comments are created by beginning a line with hash (#) character.</li>\n</ul>\n<h2>17. What is variable? What are the rules and conventions for declaring a variables?</h2>\n<ul>\n<li>A variable is like a container that stores values that we can access or\nchange.</li>\n<li>Example:<pre><code class=\"language-python\">name = &quot;Jone Nuts&quot;\n</code></pre>\n</li>\n<li>Basic rules to declare variables:\n<ul>\n<li>A variable name must start with a letter or the underscore character</li>\n<li>A variable name cannot start with a number</li>\n<li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li>\n<li>Variable names are case-sensitive (age, Age and AGE are three different variables)</li>\n</ul>\n</li>\n</ul>\n<h2>18. What are the various data types available in Python programming.</h2>\n<h3>Numbers</h3>\n<ul>\n<li>Number data types store numeric values.</li>\n<li>Python 3 types of number category:\n<ul>\n<li>Integers</li>\n<li>Floating Point Numbers</li>\n<li>Complex Numbers</li>\n</ul>\n</li>\n</ul>\n<h4>Integers(int)</h4>\n<ul>\n<li>An int data type represents an integer number.</li>\n<li>An integer number is number without any decimal or fractional point.</li>\n</ul>\n<h4>Floating Point Numbers</h4>\n<ul>\n<li>The float data types represents that floating point number.</li>\n<li>The floating point number is number that contains a decimal point.</li>\n<li>Example: 0.1, -3.443</li>\n</ul>\n<h4>Complex Number</h4>\n<ul>\n<li>A complex number is a number that is written in the form of <code>a+bj</code>.</li>\n</ul>\n<h3>Boolean</h3>\n<ul>\n<li>Boolean represents the two values namely <code>False</code> and <code>True</code>.</li>\n<li>The true value is represented true as 1 and false as 0.</li>\n</ul>\n<h3>String</h3>\n<ul>\n<li>String is a collection of group of characters.</li>\n<li>String are identified as a contiguous set of characters enclosed in single\nquotes(’ ') or double quotes(&quot; &quot;).</li>\n<li>String can also can be define with <code>str()</code> function.</li>\n</ul>\n<h2>19. What are four built-in numeric data types in Python? Explain.</h2>\n<p>The built-in numeric data types are Numbers, Integers, Float and Complex\nNumber.</p>\n<h3>Numbers</h3>\n<ul>\n<li>Number data types store numeric values.</li>\n<li>Python 3 types of number category:\n<ul>\n<li>Integers</li>\n<li>Floating Point Numbers</li>\n<li>Complex Numbers</li>\n</ul>\n</li>\n</ul>\n<h3>Integers(int)</h3>\n<ul>\n<li>An int data type represents an integer number.</li>\n<li>An integer number is number without any decimal or fractional point.</li>\n</ul>\n<h3>Floating Point Numbers</h3>\n<ul>\n<li>The float data types represents that floating point number.</li>\n<li>The floating point number is number that contains a decimal point.</li>\n<li>Example: 0.1, -3.443</li>\n</ul>\n<h3>Complex Number</h3>\n<ul>\n<li>A complex number is a number that is written in the form of <code>a+bj</code>.</li>\n</ul>\n<h2>20. What is the difference between interactive mode and script mode of Python.</h2>\n<p>Python has two basic modes:</p>\n<ul>\n<li>Script mode</li>\n<li>Interactive mode</li>\n</ul>\n<h3>Script mode</h3>\n<p>The normal script mode is the mode where the scripted and finished <code>.py</code> files\nare run in the Python interpreter.</p>\n<h3>Interactive mode</h3>\n<p>The interactive mode is a command line shell which gives immediate feedback for\neach statement while running previously fed statements in active memory.</p>\n<h2>22. Define the following terms:</h2>\n<h3>(i) Identifier</h3>\n<ul>\n<li>A Python identifier is a name given to a function, class variable, module or\nother objects that is used in Python program.</li>\n<li>An identifier can a combination of uppercase letters, lowercase letters,\nunderscores, and digits.</li>\n<li>Example: <code>Name</code>, <code>myClass</code>, <code>Emp_Salary</code>, <code>var_1</code>, <code>_Address</code></li>\n</ul>\n<h3>(ii) Literal</h3>\n<ul>\n<li>A literal refers to the fixed value that directly appears in the program.</li>\n</ul>\n<h3>(iii) Data type</h3>\n<p>Data types are the classification or categorization of data items. It represents\nthe kind of value that tells what operations can be performed on a particular\ndata.</p>\n<h3>(iv) Tuple</h3>\n<ul>\n<li>Tuple is an ordered sequence of items same as list.</li>\n<li>Tuple is immutable cannot be modified unlike list.</li>\n<li>It is defined within parentheses () where items are separated by commas (,).</li>\n<li>Example:<pre><code class=\"language-python\">a = (10, 'abc', 32)\n</code></pre>\n</li>\n</ul>\n<h3>(v) List.</h3>\n<ul>\n<li>List is an ordered sequence of items.</li>\n<li>In list items separated by commas (,) are enclosed within brackets [].</li>\n<li>List are mutable which means that value of element of a list can be altered by\nusing index.</li>\n<li>Example:<pre><code class=\"language-python\">first = [10, 20, 30]\n</code></pre>\n</li>\n</ul>\n<h2>23. Explain dictionary data tune in detail</h2>\n<ul>\n<li>Dictionary is an unordered collection of key-value pairs.</li>\n<li>Dictionary is collection which is ordered*, changeable and do not allow\nduplicates.</li>\n<li>Dictionary are written with curly brackets, and have keys and values.</li>\n<li>Example:<pre><code class=\"language-python\">car = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }\n</code></pre>\n</li>\n</ul>\n<h2>Sets</h2>\n<ul>\n<li>Set items are unordered, unchangeable, and do not allow duplicate values.</li>\n<li>Set is defined by values separated by comma inside braces {}.</li>\n<li>Example:<pre><code class=\"language-python\">a = {5, 2, 3, 1, 4}\n</code></pre>\n</li>\n</ul>\n<h2>Difference between List, Set, Tuple, and Dictionary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>List</th>\n<th>Set</th>\n<th>Tuple</th>\n<th>Dictionary</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Mutable</td>\n<td>Mutable</td>\n<td>Mutable</td>\n<td>Immutable</td>\n<td>Mutable</td>\n</tr>\n<tr>\n<td>Order</td>\n<td>Ordered</td>\n<td>Unordered</td>\n<td>Ordered</td>\n<td>Ordered</td>\n</tr>\n<tr>\n<td>Can item be</td>\n<td>Replaced or Changed</td>\n<td>Can’t Replaced or Changed</td>\n<td>Can’t be Replaced or Changed</td>\n<td>Replace or Changed</td>\n</tr>\n</tbody>\n</table>\n<h2>String methods</h2>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>Explanation</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>upper</td>\n<td>Converts to uppercase</td>\n<td><code>x.upper()</code></td>\n</tr>\n<tr>\n<td>lower</td>\n<td>Converts to lowercase</td>\n<td><code>x.lower()</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>Capitalize the first letter of each word in a string</td>\n<td><code>x.title()</code></td>\n</tr>\n<tr>\n<td>find, index</td>\n<td>Search for the target in a string.</td>\n<td><code>x.find(&quot;hello&quot;)</code>, <code>index(&quot;hello&quot;)</code></td>\n</tr>\n<tr>\n<td>rfind, rindex</td>\n<td>Search for the target in a string</td>\n<td><code>x.xfind(&quot;hello&quot;)</code>, <code>x.xfind(&quot;hello&quot;)</code></td>\n</tr>\n<tr>\n<td>replace</td>\n<td>Replaces the target with new string</td>\n<td><code>r.replace(&quot;hello&quot;, &quot;word&quot;)</code></td>\n</tr>\n<tr>\n<td>strip, rstrip, lstrip</td>\n<td>Removes whitespace or other characters from the ends of a string.</td>\n<td><code>x.strip()</code></td>\n</tr>\n<tr>\n<td>encode</td>\n<td>Converts a Unicode string to a bytes object.</td>\n<td><code>x.encode(&quot;utf_8&quot;)</code></td>\n</tr>\n</tbody>\n</table>\n<h1>2. Python Operators and Control Flow Statements</h1>\n<h2>1. What is operator? Which operators used in Python?</h2>\n<ul>\n<li>An operator is a symbol which specifies a specifies a specific action.</li>\n<li>Operators are used to perform operations on variables and values.</li>\n<li>In python the operators can be unary operators or binary operator.</li>\n</ul>\n<h3>Unary Operators</h3>\n<ul>\n<li>Unary operators perform mathematical operation only on one operand.</li>\n<li>The example of unary operators are <code>+</code>, <code>-</code>, <code>~</code>.</li>\n</ul>\n<h3>Binary Operators</h3>\n<ul>\n<li>Binary operators are operators that require two operands to perform any\nmathematical operation.</li>\n<li>Example of Binary operators are <code>**</code>, <code>/</code>, <code>%</code>, <code>+</code>, <code>-</code>.</li>\n</ul>\n<h2>2. What is meant by control flow of a program?</h2>\n<ul>\n<li>A program’s control flow is the order in which the program’s code executes.</li>\n<li>The control flow of a Python program is regulated by conditional statements,\nloops, and function calls.</li>\n</ul>\n<h2>3. Define the terms:</h2>\n<h3>(i) Loop</h3>\n<p>A loop statement allows us to execute a statement or group of statements\nmultiple times, this is called loop.</p>\n<h3>(ii) Program</h3>\n<p>A program is a sequence of statements that have been crafted to do something.</p>\n<h3>(iii) Operator</h3>\n<p>Unary operators perform mathematical operation only on one operand.</p>\n<h3>(iv) Control flow.</h3>\n<p>A program’s control flow is the order in which the program’s code executes.</p>\n<h2>4. What are the different loops available in Python?</h2>\n<ul>\n<li>There are 4 types of loops available in Python:\n<ul>\n<li><code>while</code> loop</li>\n<li><code>for</code> loop</li>\n<li>Nested <code>for</code> and <code>while</code> loop</li>\n<li><code>do..while</code> loop</li>\n</ul>\n</li>\n</ul>\n<h2>5. What happens if a semicolon (;) is placed at the end of a Python statement?</h2>\n<p>In Python a semicolon works as a separated between statements and not as a\nterminator of statements.</p>\n<h2>6. Explain about different logical operators in Python with appropriate examples.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AND</td>\n<td>If both the values are true then condition becomes true</td>\n<td>(a and b) is False</td>\n</tr>\n<tr>\n<td>Or</td>\n<td>If any of two values are true then condition becomes true</td>\n<td>(a or b) is True</td>\n</tr>\n<tr>\n<td>Not</td>\n<td>Used to reverse the local state of its value</td>\n<td>not(a and b) is True</td>\n</tr>\n</tbody>\n</table>\n<h2>7. Explain about different relational operators in Python with examples.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>Equal</td>\n<td>x == y</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>Not equal</td>\n<td>x != y</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>Greater than</td>\n<td>x &gt; y</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>Less than</td>\n<td>x &lt; y</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>Greater than or equal to</td>\n<td>x &gt;= y</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>Less than or equal to</td>\n<td>x &lt;= y</td>\n</tr>\n</tbody>\n</table>\n<h2>8. Explain about membership operators in Python.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>True if value in list or in sequence</td>\n<td>(‘H’ in x) is True</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>False if value not in list or in sequence</td>\n<td>(‘H’ in x) is False</td>\n</tr>\n</tbody>\n</table>\n<h2>9. Explain about Identity operators in Python with appropriate examples.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>True if the variable on either side points to the same object</td>\n<td>(a is b) is False</td>\n</tr>\n<tr>\n<td>is not</td>\n<td>False if the variable on either side points to the same object</td>\n<td>(a is not b) is False</td>\n</tr>\n</tbody>\n</table>\n<h2>10. Explain about arithmetic operators in Python.</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+</td>\n<td>Addition</td>\n<td>x + y</td>\n</tr>\n<tr>\n<td>-</td>\n<td>Subtraction</td>\n<td>x - y</td>\n</tr>\n<tr>\n<td>*</td>\n<td>Multiplication</td>\n<td>x * y</td>\n</tr>\n<tr>\n<td>/</td>\n<td>Division</td>\n<td>x / y</td>\n</tr>\n<tr>\n<td>%</td>\n<td>Modulus</td>\n<td>x % y</td>\n</tr>\n<tr>\n<td>**</td>\n<td>Exponentiation</td>\n<td>x ** y</td>\n</tr>\n<tr>\n<td>//</td>\n<td>Floor division</td>\n<td>x // y</td>\n</tr>\n</tbody>\n</table>\n<h2>11. List different conditional statements in Python.</h2>\n<p>Python conditional statements includes:</p>\n<ul>\n<li><code>if</code></li>\n<li><code>if-else</code></li>\n<li><code>nested-if</code></li>\n<li><code>if-elif-else</code></li>\n</ul>\n<h2>12. What are the different nested loops available in Python?</h2>\n<ul>\n<li>There are two types of nested loop <code>while</code> and <code>for</code> loop.</li>\n</ul>\n<pre><code class=\"language-python\"># for loop\nfor i in range(1, 5):\n  for j in range(1, (i+1)):\n    print(j, end=' ')\n  print()\n\n# while loop\ni = 1\nwhile i &lt; 5:\n  j = 1\n  while j &lt; (i+1):\n    print(j, end=' ')\n    j = j + 1\n  i = i + 1\n  print()\n</code></pre>\n<h2>13. What are the different loop control (manipulation) statements available in Python? Explain with suitable examples.</h2>\n<p>There three loop control statements available in Python:</p>\n<ul>\n<li><code>break</code></li>\n<li><code>continue</code></li>\n<li><code>pass</code></li>\n</ul>\n<pre><code class=\"language-python\">for i in range(1, 11):\n  if i%2 == 0:\n    pass\n  if i%3 == 0;\n    continue\n  if i%4 == 0;\n    break\n</code></pre>\n<h2>14. Explain if-else statement with an example.</h2>\n<ul>\n<li><code>if</code> statements executes when the conditions following if is true and it does\nnoting when the conedition is <code>false</code>.</li>\n<li>The <code>if-else</code> statement takes care of a <code>true</code> as well as <code>false</code> condition.</li>\n</ul>\n<pre><code class=\"language-python\">i = 20\nif (i &lt; 15):\n  print(&quot;i is less then 15&quot;)\nelse:\n  print(&quot;i is greater then 15&quot;)\n</code></pre>\n<h2>15. Explain continue statement with an example.</h2>\n<p>The continue statement in Python returns the control to the beginning of the\nwhile loop.</p>\n<pre><code class=\"language-python\">i = 0\nwhile i &lt; 10:\n  i = i + 1\n  if i == 5:\n    continue\n</code></pre>\n<h2>16. Explain use of break statement in a loop with example.</h2>\n<p>The <code>break</code> statement in Python terminates the current loop and resumes\nececution at next statement.</p>\n<pre><code class=\"language-python\">i = 0\nwhile i&lt;10:\n  i=i+1\n  if i == 5:\n    break\n  print(&quot;i = &quot;, i)\n</code></pre>\n<h2>17. Predict output and justify your answer:</h2>\n<h3>(i) -11 % 9</h3>\n<pre><code>&gt;&gt;&gt; print(-11 % 9)\n-2\n</code></pre>\n<h3>(ii) 7.7 // 7</h3>\n<pre><code>&gt;&gt;&gt; print(7.7 // 7)\n1.0\n</code></pre>\n<h3>(iii) (200 - 70) * 10 / 5</h3>\n<pre><code>&gt;&gt;&gt; print((200 - 70) * 10 / 5)\n260.0\n\n</code></pre>\n<h3>(iv) 5 * 1 ** 2</h3>\n<pre><code>&gt;&gt;&gt; print(5 * 1 ** 2)\n5\n</code></pre>\n<h2>18. What the difference is between == and is operator in Python?</h2>\n<ul>\n<li><code>=</code> - if the values of operands are equal, then the condition becomes true.</li>\n<li><code>is</code> - return true, if the variables on either side of  the operator point to\nsame object.</li>\n</ul>\n<h2>19. List different operators in Python, in the order of their precedence.</h2>\n<table>\n<thead>\n<tr>\n<th>Operators</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Arithmetic Operators</td>\n<td>a + b</td>\n</tr>\n<tr>\n<td>Assignment Operators</td>\n<td>c = a + b</td>\n</tr>\n<tr>\n<td>Comparison Operators</td>\n<td>a == b</td>\n</tr>\n<tr>\n<td>Logical Operators</td>\n<td>a and b</td>\n</tr>\n<tr>\n<td>Bitwise Operators</td>\n<td>a &amp; b</td>\n</tr>\n<tr>\n<td>Identity Operators</td>\n<td>a = 3</td>\n</tr>\n<tr>\n<td>Membership Operators</td>\n<td>a in b</td>\n</tr>\n</tbody>\n</table>\n<h2>20. Write a Python program to print factorial of a number. Take input from user.</h2>\n<h2>21. Write a Python program to calculate area of triangle and circle and print the result.</h2>\n<h2>22. Write a Python program to check whether a string is palindrome.</h2>\n<h2>23. Write a Python program to print Fibonacci series up to n terms.</h2>\n<pre><code class=\"language-python\">num = int(input(&quot;Enter a num: &quot;))\nx = 0\ny = 1\n\nif num &lt; 0:\n  print(&quot;Invalid term&quot;)\nelse:\n  for i in range(num):\n    print(x)\n    z = x + y\n    x = y\n    y = z\n</code></pre>\n<p>O/P</p>\n<pre><code>Enter a num: 3\n0\n1\n1\n</code></pre>\n<h2>24. Write a Python program to print all prime numbers less than 256.</h2>\n<pre><code class=\"language-python\">num = int(input(&quot;Enter number: &quot;)\nfor n in range(2, num):\n  if n % 1 == 0:\n    break\n  else:\n    print(n)\n</code></pre>\n<h2>25. Write a Python program to find the best of two test average marks out of three test’s mark accepted from the user.</h2>\n<h2>Assignment Operator</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Example</th>\n<th>Same As</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td>x = 5</td>\n<td>x = 5</td>\n</tr>\n<tr>\n<td>+=</td>\n<td>x += 3</td>\n<td>x = x + 3</td>\n</tr>\n<tr>\n<td>-=</td>\n<td>x -= 3</td>\n<td>x = x - 3</td>\n</tr>\n<tr>\n<td>*=</td>\n<td>x *= 3</td>\n<td>x = x * 3</td>\n</tr>\n<tr>\n<td>/=</td>\n<td>x /= 3</td>\n<td>x = x / 3</td>\n</tr>\n<tr>\n<td>%=</td>\n<td>x %= 3</td>\n<td>x = x % 3</td>\n</tr>\n<tr>\n<td>//=</td>\n<td>x //= 3</td>\n<td>x = x // 3</td>\n</tr>\n<tr>\n<td>**=</td>\n<td>x **= 3</td>\n<td>x = x ** 3</td>\n</tr>\n<tr>\n<td>&amp;=</td>\n<td>x &amp;= 3</td>\n<td>x = x &amp; 3</td>\n</tr>\n<tr>\n<td>|=</td>\n<td>x |= 3</td>\n<td>x = x | 3</td>\n</tr>\n<tr>\n<td>^=</td>\n<td>x ^= 3</td>\n<td>x = x ^ 3</td>\n</tr>\n<tr>\n<td>&gt;&gt;=</td>\n<td>x &gt;&gt;= 3</td>\n<td>x = x &gt;&gt; 3</td>\n</tr>\n<tr>\n<td>&lt;&lt;=</td>\n<td>x &lt;&lt;= 3</td>\n<td>x = x &lt;&lt; 3</td>\n</tr>\n</tbody>\n</table>\n<h2>Relational or Comparison Operators</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>Equal</td>\n<td>x == y</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>Not equal</td>\n<td>x != y</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>Greater than</td>\n<td>x &gt; y</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>Less than</td>\n<td>x &lt; y</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>Greater than or equal to</td>\n<td>x &gt;= y</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>Less than or equal to</td>\n<td>x &lt;= y</td>\n</tr>\n</tbody>\n</table>\n<h2>Bitwise Operators</h2>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&amp;</td>\n<td>AND</td>\n<td>Sets each bit to 1 if both bits are 1</td>\n</tr>\n<tr>\n<td>|</td>\n<td>OR</td>\n<td>Sets each bit to 1 if one of two bits is 1</td>\n</tr>\n<tr>\n<td>^</td>\n<td>XOR</td>\n<td>Sets each bit to 1 if only one of two bits is 1</td>\n</tr>\n<tr>\n<td>~</td>\n<td>NOT</td>\n<td>Inverts all the bits</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>Zero fill left shift</td>\n<td>Shift left by pushing zeros in from the right and let the leftmost bits fall off</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>Signed right shift</td>\n<td>Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off</td>\n</tr>\n</tbody>\n</table>\n<h1>3. Data Structures in Python</h1>\n<h2>1. What is data structure? Which data structure used by Python?</h2>\n<ul>\n<li>A data structure is specialized format for organizing and storing data, so\nthat various operations can be performed on it easily.</li>\n<li>Python use data structure like list, tuple, dictionary.</li>\n</ul>\n<h2>2. How to define and access the elements of list?</h2>\n<ul>\n<li>A list is created by placing all the items inside a square brackets [],\nseparated by commas.</li>\n<li>Example of define the list:<pre><code class=\"language-python\">li = [&quot;Hello&quot;, 50]\n</code></pre>\n</li>\n<li>To access values in lists, use the square brackets for slicing along with the\nindex or indices to obtain value available at that index.<pre><code class=\"language-python\">li = [&quot;Hello&quot;, 50]\nprint(li[1])\n</code></pre>\nO/P<pre><code>50\n</code></pre>\n</li>\n</ul>\n<h2>3. What is list? How to create list?</h2>\n<ul>\n<li>List are used to store multiple items in single variable.</li>\n<li>List are created using square brackets.</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;Hello&quot; , 50]\n</code></pre>\n</li>\n</ul>\n<h2>4. What are the different operation that can be performed on a list? Explain with examples</h2>\n<ul>\n<li><code>append()</code> - is used to add elements at the end of the list.</li>\n<li><code>extend()</code> - is used to add more then one element at the end of the list.</li>\n<li><code>insert()</code> - can add an element at a given position in the list.</li>\n<li><code>remove()</code> - is used to remove an element form the list.</li>\n<li><code>pop()</code> - can remove an element from any position in the list.</li>\n<li><code>reverse()</code> - is used to reverse the element of the list.</li>\n<li><code>len()</code> - returns the length of the list.</li>\n<li><code>min()</code> - returns the minimum value in the list.</li>\n<li><code>max()</code> - returns the maximum value in the list.</li>\n<li><code>count()</code> - returns the number of occurrence of given element in the list.</li>\n<li><code>index()</code> - returns the position of the first occurrence.</li>\n<li><code>sort()</code> - sorts the list.</li>\n<li><code>clear()</code> - erases all the elements.</li>\n<li><strong>slice</strong> - is used to print a section of the list.</li>\n<li><strong>concatenate</strong> - is used to merge two lists and return a single list.</li>\n<li><strong>multiply</strong> - the list <em>n</em> times.\nExample:</li>\n</ul>\n<pre><code class=\"language-python\">li = [&quot;Hello&quot;, &quot;World&quot;]\nli.append(&quot;Bye&quot;)\nli.extend([&quot;World&quot;, &quot;Forever&quot;])\nli.insert(0, &quot;Bye&quot;)\nli.remove(&quot;World&quot;)\nli.pop(0)\nli.reverse()\nlen(li)\nmax(li)\nli.count(&quot;o&quot;)\nli.index(&quot;Forever&quot;)\nli.sort()\nli.clear()\n</code></pre>\n<p>O/P</p>\n<pre><code>['Hello', 'World']\n['Hello', 'World', 'Bye']\n['Hello', 'World', 'Bye', 'World', 'Forever']\n['Bye', 'Hello', 'World', 'Bye', 'World', 'Forever']\n['Bye', 'Hello', 'Bye', 'World', 'Forever']\n['Hello', 'Bye', 'World', 'Forever']\n['Forever', 'World', 'Bye', 'Hello']\n4\nWorld\n0\n0\n['Bye', 'Forever', 'Hello', 'World']\n[]\n</code></pre>\n<h2>5. Explain any two methods under lists in Python with examples.</h2>\n<h3><code>append()</code></h3>\n<ul>\n<li>Is used to add elements at the end of the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.append(item)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;Hello&quot;, 30]\nli.append(&quot;World&quot;)\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;Hello&quot;, 30, &quot;World&quot;]\n</code></pre>\n</li>\n</ul>\n<h3><code>extend()</code></h3>\n<ul>\n<li>Is used to add more then one element at the end of the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.extend(list2)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;Hello&quot;, &quot;World&quot;]\nli2 = [&quot;What's&quot;, &quot;Up&quot;]\nli.extend(li2)\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;Hello&quot;, &quot;World&quot;, &quot;What's&quot;, &quot;Up&quot;]\n</code></pre>\n</li>\n</ul>\n<h2>6. Write a python program to describe different ways of deleting an element form the given List.</h2>\n<p><code>remove()</code> - is used to remove an element form the list.</p>\n<pre><code class=\"language-python\">li = [&quot;Hello&quot;, &quot;World&quot;]\nli.remove(&quot;Hello&quot;)\nprint(li)\n</code></pre>\n<p>O/P</p>\n<pre><code>World\n</code></pre>\n<h2>7. What is tuple in Python? How to create and access it?</h2>\n<ul>\n<li>Tuple is an ordered sequence of items same as list.</li>\n<li>Tuple is immutable cannot be modified unlike list.</li>\n<li>It is defined within parentheses () where items are separated by commas (,).</li>\n<li>To access values in tuple, use the square brackets[].</li>\n<li>Example:<pre><code class=\"language-python\">a = (10, 'abc', 32)\nprint(a[0])\n</code></pre>\nO/P<pre><code>10\n</code></pre>\n</li>\n</ul>\n<h2>8. What are mutable and immutable types?</h2>\n<ul>\n<li><strong>Mutable</strong> - is when something is changeable or has the ability to change.</li>\n<li><strong>Immutable</strong> - when no change is possible over time.</li>\n</ul>\n<h2>9. Is tuple mutable? Demonstrate any two methods of tuple.</h2>\n<ul>\n<li>Tuple is immutable that means it can’t be changed or replace.</li>\n<li><code>max()</code> - Returns item from the tuple with max value.</li>\n<li><code>min()</code> Return item from the tuple with min value.</li>\n</ul>\n<pre><code class=\"language-python\">a = (10, 32, 3)\nmax(a)\nmin(a)\n</code></pre>\n<p>O/P</p>\n<pre><code>10\n3\n</code></pre>\n<h2>10. Write in brief about Tuple in Python. Write operations with suitable examples</h2>\n<ul>\n<li>Tuple is an ordered sequence of items same as list.</li>\n<li>Tuple is immutable cannot be modified unlike list.</li>\n<li>It is defined within parentheses () where items are separated by commas (,).</li>\n<li>To access values in tuple, use the square brackets[].</li>\n</ul>\n<h3>Tuple Operations</h3>\n<ul>\n<li>We can use + operator to combine two tuples.</li>\n<li>We can also repeat elements by using the * operator.</li>\n<li>We can test if an item exist in tuple or not.</li>\n<li>Iteration over a tuple specifies the way.</li>\n</ul>\n<pre><code class=\"language-python\">t1 = (1, 2)\nt2 = (3, 4)\n\nprint(t1 + t2)\nprint(t1 * 2)\nprint(1 in t1)\n\nfor t in t1:\n  print(t)\n</code></pre>\n<p>O/P</p>\n<pre><code>(1, 2, 3, 4)\n(1, 2, 1, 2)\nTrue\n1\n2\n</code></pre>\n<h2>11. Write in brief about Set in Python. Write operations with suitable example.</h2>\n<ul>\n<li>Set items are unordered, unchangeable, and do not allow duplicate values.</li>\n<li>Set is defined by values separated by comma inside braces {}.</li>\n<li>To access values in set, use the square brackets[].</li>\n</ul>\n<pre><code class=\"language-python\">a = {5, 2, 3, 1, 4}\na[1]\n</code></pre>\n<h2>12. Explain the properties of dictionary keys.</h2>\n<ul>\n<li>Dictionary values have no restrictions.</li>\n<li>They can be any arbitrary Python object, either standard objects or\nuser-defined objects.</li>\n<li>However, same is not true for the keys, more then one entry per key not\nallowed.</li>\n</ul>\n<h2>13. Explain directory methods in Python.</h2>\n<ul>\n<li><code>clear()</code> - removes all the elements from the dictionary.</li>\n<li><code>copy()</code> - returns a copy of the dictionary.</li>\n<li><code>fromkeys()</code> - the <code>fromkeys()</code> method creates a new dictionary with default\nvalue or all specified keys.</li>\n<li><code>gets()</code> - returns the value of the specified key.</li>\n<li><code>item()</code> - returns a list containing a tuple for each key value pair.</li>\n<li><code>keys()</code> - returns a list containing the dictionary’s keys.</li>\n<li><code>pop()</code> - removes the element with the specified key.</li>\n<li><code>popitem()</code> - removes the last inserted key-value pair.</li>\n<li><code>setdefault()</code> - returns the value of the specified key.</li>\n<li><code>update()</code> - Updates the dictionary with the specified key.</li>\n<li><code>values()</code> - returns a list of all the values in the dictionary.</li>\n</ul>\n<h2>14. How to create directory in Python? Give example.</h2>\n<ul>\n<li>Dictionary are written with curly brackets, and have keys and values.</li>\n</ul>\n<pre><code class=\"language-python\">d = { &quot;name&quot;: &quot;Jone&quot;, &quot;age&quot;: 30 }\nprint(d)\n</code></pre>\n<p>O/P</p>\n<pre><code>{ &quot;name&quot;: &quot;Jone&quot;, &quot;age&quot;: 30 }\n</code></pre>\n<h2>15. Write in brief about Dictionary in Python. Write operation with suitable examples.</h2>\n<ul>\n<li>Dictionary is an unordered collection of key-value pairs.</li>\n<li>Dictionary is collection which is ordered*, changeable and do not allow\nduplicates.</li>\n<li>Dictionary are written with curly brackets, and have keys and values.</li>\n<li>Example:<pre><code class=\"language-python\">car = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }\n</code></pre>\n</li>\n</ul>\n<h3>Operation of Dictionary</h3>\n<pre><code class=\"language-python\">d = { &quot;brand&quot;: &quot;Ford&quot;, &quot;model&quot;: &quot;Mustang&quot;, &quot;year&quot;: 1264 }\nprint(&quot;brand&quot; in d)\n\nfor i in d:\n  print(i, d[i])\n</code></pre>\n<p>O/P</p>\n<pre><code>True\nbrand Ford\nmodel Mustang\nyear 1264\n</code></pre>\n<h2>16. What is the significant difference between list and dictionary?</h2>\n<h3>List</h3>\n<ul>\n<li>List is collection of index values pairs.</li>\n<li>List is created by placing elements in [] separated by commas “,”.</li>\n<li>We can access the elements using the index value.</li>\n<li>List are mutable.</li>\n<li>List is created using <code>list()</code> function.</li>\n</ul>\n<h3>Dictionary</h3>\n<ul>\n<li>Dictionary is collection of key-value pairs.</li>\n<li>All key-value go inside brackets{} separated by a comma.</li>\n<li>The keys in dictionary are of any given data type.</li>\n<li>We can access the elements using the keys.</li>\n<li>Dictionaries are mutable, but keys don’t allow duplicates.</li>\n<li>Dictionary object is created using <code>dict()</code> function.</li>\n</ul>\n<h2>17. Compare List and Tuple.</h2>\n<h3>List</h3>\n<ul>\n<li>Lists are mutable.</li>\n<li>The list is better for performing operations.</li>\n<li>Lists consume more memory.</li>\n<li>More likely error will occur.</li>\n</ul>\n<h3>Tuple</h3>\n<ul>\n<li>Tuples are immutable.</li>\n<li>The implication of iterations is faster.</li>\n<li>Tuple consume less memory.</li>\n<li>Less likely error will occur.</li>\n</ul>\n<h2>19. How append() and extend() are different with reference to list in Python?</h2>\n<h3><code>append()</code></h3>\n<ul>\n<li>Append uses <code>.append()</code> to add element at end of the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.append(&quot;hello&quot;)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;hello&quot;, &quot;world&quot;]\nli.append(&quot;bye&quot;)\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;hello&quot;, &quot;world&quot;, &quot;bye&quot;]\n</code></pre>\n</li>\n</ul>\n<h3><code>extend()</code></h3>\n<ul>\n<li>Extend uses <code>.extend()</code> to add multiple elements to the list.</li>\n<li>Syntax:<pre><code class=\"language-python\">list.extend([&quot;hello&quot;, &quot;world&quot;])\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">li = [&quot;hello&quot;, &quot;world&quot;]\nli.extend([&quot;bye&quot;, &quot;world&quot;]\nprint(li)\n</code></pre>\nO/P<pre><code>[&quot;hello&quot;, &quot;world&quot;, &quot;bye&quot;, &quot;world&quot;]\n</code></pre>\n</li>\n</ul>\n<h2>20. Write a program to input any two tuples and interchange the tuple variable.</h2>\n<pre><code class=\"language-python\">a = 1\nb = 2\n(a, b) = (b, a)\nprint(&quot;a =&quot;, a, &quot;b =&quot;, b)\n</code></pre>\n<p>O/P</p>\n<pre><code>a = 2 b = 1\n</code></pre>\n<h2>21. Write a Python program to multiply two matrices</h2>\n<h2>22. Write a Python code to get the following dictionary as output: <code>{1:1, 3:9, 5:25, 7:49, 9:81}</code></h2>\n<pre><code class=\"language-python\">di = {1:1, 3:9, 5:25, 7:49, 9:81}\nprint(di)\n</code></pre>\n<p>O/P</p>\n<pre><code>{1:1, 3:9, 5:25, 7:49, 9:81}\n</code></pre>\n<h2>23. Write the output for the following:</h2>\n<pre><code>&gt;&gt;&gt;a=[1,2,3]\n&gt;&gt;&gt;b=[4,5,6]\n&gt;&gt;&gt;c=a+b\n[1, 2, 3, 4, 5, 6]\n&gt;&gt;&gt;[1,2,3]*3\n[1, 2, 3, 1, 2, 3, 1, 2, 3]\n&gt;&gt;&gt;t=['a', 'b', 'c', 'd', 'e', 'f']\n&gt;&gt;&gt;t[1:3]=['x', 'y']\n&gt;&gt;&gt;print(t)\n['a', 'x', 'y', 'd', 'e', 'f']\n</code></pre>\n<h2>24. Give the output of Python code:</h2>\n<pre><code>Str=&quot;Maharashtra State Board of Technical Education'\nprint(x[15::1])\nprint(x[-10:-1:2])\n</code></pre>\n<p>O/P</p>\n<pre><code>te Board of Technical Education\n dcto\n</code></pre>\n<h2>25. Give the output of following Python code:</h2>\n<pre><code>t=(1,2,3, (4,), [5,6])\nprint(t[3])\nt[4][0]=7\nprint(t)\n</code></pre>\n<p>O/P</p>\n<pre><code>(4,)\n(1, 2, 3, (4,), [7, 6])\n</code></pre>\n<h2>26. Write the output for the following if the variable fruit=“banana”:</h2>\n<pre><code>&gt;&gt;&gt;fruit[:3]    o/p='ban'\n&gt;&gt;&gt;fruit[3:]    o/p='ana'\n&gt;&gt;&gt;fruit[3:3]   o/p=' '\n&gt;&gt;&gt;fruit[:]     o/p='banana'\n</code></pre>\n<h2>27. What is string? How to create it? Enlist various operations on strings.</h2>\n<ul>\n<li>String is a collection of group of characters.</li>\n<li>String are identified as a contiguous set of characters enclosed in single\nquotes(’ ') or double quotes(&quot; &quot;).</li>\n<li>String can also can be define with <code>str()</code> function.</li>\n</ul>\n<pre><code class=\"language-python\">s1 = &quot;Hello World&quot;\n\nprint(s1[0])         # String indices and accessing string\nprint(&quot;Hello&quot; in s1) # 'in' and 'not in' operator\nprint(s1[1:])        # String slicing\nprint(s1&gt;&quot;Hello&quot;)    # String comparison\n</code></pre>\n<p>O/P</p>\n<pre><code>H\nTrue\nello World\nTrue\n</code></pre>\n<h1>5. Object Oriented Programming in Python</h1>\n<h2>1. What is OOP?</h2>\n<h2>2. List the features and explain about different Object Oriented features supported by Python.</h2>\n<h2>3. List and explain built in class attributes with example.</h2>\n<h2>4. Design a class that store the information of student and display the same.</h2>\n<h2>5. What are basic overloading methods?</h2>\n<h2>6. What is method overriding? Write an example.</h2>\n<h2>7. Explain class inheritance in Python with an example.</h2>\n<h2>8. How to declare a constructor method in python? Explain.</h2>\n<h2>9. How operator overloading can be implemented in Python? Give an example.</h2>\n<h2>10. Write a Python program to implement the concept of inheritance.</h2>\n<h2>11. Create a class employee with data members: name, department and salary. Create suitable methods for reading and printing employee information.</h2>\n<h2>12. What is data abstraction? Explain in detail. 13. Define the following terms:</h2>\n<h3>(1) Object</h3>\n<h3>(ii) Class</h3>\n<h3>(iii) Inheritance</h3>\n<h3>(iv) Data abstraction.</h3>\n<h2>14. Describe the term composition classes with example.</h2>\n<h2>15. Explain customization via inheritance specializing inherited methods.</h2>\n<h1>6. File I/O Handling and Exception Handling</h1>\n<h2>1. What is file? Enlist types of files in Python programming.</h2>\n<ul>\n<li>File is a named location on disk to store related information.</li>\n<li>It is used to permanently store data in a volatile memory.</li>\n<li>Files are divided into following two categories:\n<ol>\n<li>Text Files</li>\n<li>Binary files</li>\n</ol>\n</li>\n</ul>\n<h3>Text Files</h3>\n<ul>\n<li>Text files are simple texts in human readable format.</li>\n<li>A text file is structured as sequence of lines of text.</li>\n</ul>\n<h3>Binary Files</h3>\n<ul>\n<li>Binary files have binary data which is understood by the computer.</li>\n</ul>\n<h2>2. What is exception?</h2>\n<p>An exception is also called as runtime error that can halt the execution of the\nprogram.</p>\n<h2>3. Explain the term exception handling in detail.</h2>\n<ul>\n<li>Python provides a Exception handling for handling any unreported errors in\nprogram.</li>\n<li>By handling the exception, we can provide a meaning full message to the user\nabout the problem.</li>\n</ul>\n<h2>4. Explain different modes of opening a file.</h2>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>Opens a file for reading.</td>\n</tr>\n<tr>\n<td>w</td>\n<td>Opens a file for writing.</td>\n</tr>\n<tr>\n<td>x</td>\n<td>Opens a file for exclusive creation. If the file already exists, the operation fails.</td>\n</tr>\n<tr>\n<td>a</td>\n<td>Opens a file for appending at the end of the file without truncating it.  Creates a new file if it does not exist.</td>\n</tr>\n<tr>\n<td>t</td>\n<td>Opens in text mode.</td>\n</tr>\n<tr>\n<td>b</td>\n<td>Opens in binary mode.</td>\n</tr>\n<tr>\n<td>+</td>\n<td>Opens a file for updating (reading and writing)</td>\n</tr>\n</tbody>\n</table>\n<h2>5. Write the syntax of <code>fopen()</code> with example.</h2>\n<ul>\n<li>Syntax:<pre><code class=\"language-python\">f = open(&quot;filename&quot;, &quot;modes&quot;)\n</code></pre>\n</li>\n<li>Example:<pre><code class=\"language-python\">o = open(&quot;text.txt&quot;, &quot;w&quot;)\no.write(&quot;Hello World&quot;)\no.close()\n\no = open(&quot;text.txt&quot;, &quot;r&quot;)\nprint(o.read())\no.close()\n</code></pre>\nO/P<pre><code>Hello World\n</code></pre>\n</li>\n</ul>\n<h2>6. What are various modes of file object? Explain any five as them.</h2>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>Opens a file for reading.</td>\n</tr>\n<tr>\n<td>w</td>\n<td>Opens a file for writing.</td>\n</tr>\n<tr>\n<td>x</td>\n<td>Opens a file for exclusive creation. If the file already exists, the operation fails.</td>\n</tr>\n</tbody>\n</table>\n<h2>7. Explain exception handling with example using try, except, raise keywords.</h2>\n<ul>\n<li>Exception handling for handling any unreported errors in program.</li>\n<li>By handling the exception, we can provide a meaningful message to the user\nabout the problem rather then system generated error message.</li>\n</ul>\n<pre><code class=\"language-python\">age = int(input(&quot;Enter your age: &quot;))\n\ntry:\n  if age &lt; 18:\n    raise Exception;\nexcept Exception:\n  print(&quot;You are not 18&quot;)\n\n</code></pre>\n<p>O/P</p>\n<pre><code>Enter your age: 16\nYou are not 18\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Notes&description=1.%20Introduction%20and%20Syntax%20of%20Python%20Program%203.%20Enlist%20applications%20for%20Python%20programming.%20Python%20is%20often%20used%20as%20a%20support%20language%20for%20software%20developers,%20for%20build%20control%20and%20management,%20testing,%20and%20in%20many%20other%20ways.%204.%20What%20are%20the%20features%20of%20Python?%20%20Easy%20to%20learn%20an&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/languages/python/practical-s6.html",
      "url": "https://anzenkodo.github.io/notes/programming/languages/python/practical-s6.html",
      "title": "Practical S6",
      "content_html": "<h1>Python practical question bank solved</h1>\n<h2>1) WAP to create 3x3 matrix with 1 at the border and zero inside.</h2>\n<pre><code class=\"language-python\">import numpy as n\na=n.ones((3, 3))\na[1:-1,1:-1]=0\nprint(a)\n</code></pre>\n<p>Output</p>\n<pre><code>[[1. 1. 1.]\n [1. 0. 1.]\n [1. 1. 1.]]\n</code></pre>\n<h2>2) WAP to calculate area of circle and area of rectangle using abstract class.</h2>\n<pre><code class=\"language-python\">from abc import ABC, abstractmethod\nclass test(ABC):\n    @abstractmethod\n    def area(self):\n        pass\nclass Rec(test):\n    def area(self):\n        self. l=4\n        self. b=2\n        print(self.l*self.b)\nclass Cir(test):\n    def area(self):\n        self.r=5\n        print(3.14*self.r*self.r)\nR=Rec()\nR. area()\nC=Cir()\nC. area()\n</code></pre>\n<p>Output</p>\n<pre><code>8\n78.5\n</code></pre>\n<h2>3) WAP to create dictionary where key is 1 to 10 and value is square of 1 to 10.</h2>\n<pre><code class=\"language-python\">a=dict()\nfor i in range(1,11):\n    a[i]=i**2\nprint(a)\n</code></pre>\n<p>Output\n<code>{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100}</code></p>\n<h2>4) WAP to display result using inheritance.</h2>\n<pre><code class=\"language-python\">class Student:\n    def accept(self):\n        self. name=input(&quot;Name:&quot;)\nclass Test:\n    def marks(self):\n        self. m1=int(input(&quot;M1:&quot;))\n        self. m2=int(input(&quot;M2:&quot;))\nclass Result(Student, Test):\n    def total(self):\n        self. t=self.m1+self.m2\n    def disp(self):\n        print(self.name)\n        print(self.t)\nr=Result()\nr. accept()\nr. marks()\nr. total()\nr. disp()\n</code></pre>\n<p>Output</p>\n<pre><code>Name:ramesh\nM1:80\nM2:70\nramesh\n150\n</code></pre>\n<h2>5) WAP to remove duplicates from dictionary.</h2>\n<pre><code class=\"language-python\">d={1:20, 1:20, 2:30}\nres={}\nfor x, y in d. items() :\n    if y not in d. items() :\n        res[x]=y\nprint(res)\n</code></pre>\n<p>Output\n<code>{1: 20, 2: 30}</code></p>\n<h2>6) WAP to print sum of entered no. using function with arbitrary argument arguments.</h2>\n<pre><code class=\"language-python\">def sum(*x):\n    n=0\n    for i in x:\n        n+=i\n    print(n)\nsum(1, 2,3,4,5)\n</code></pre>\n<p>Output\n<code>15</code></p>\n<p><code>fibonacci.py</code></p>\n<pre><code class=\"language-python\">def fib(n):\n  n1, n2= 0,1\n  for i in range(n):\n    print(n1)\n    nth=n1+n2\n    n1=n2\n    n2=nth\n</code></pre>\n<p><code>fib.py</code></p>\n<pre><code class=\"language-python\">import fibonacci\nprint(fibonacci.fib(5))\n</code></pre>\n<p>To run the code, run <code>fib.py</code> file.</p>\n<h2>8) WAP to print following pattern.</h2>\n<pre><code>***\n**\n*\n</code></pre>\n<pre><code class=\"language-python\">for i in range(4, 0, -1):\n    for j in range(0, i-1):\n        print(“*”, end= ‘ ’)\n    print(&quot; &quot;)\n</code></pre>\n<h2>9) WAP to print distinction, first class, second, third class and fail using if else.</h2>\n<pre><code class=\"language-python\">s1=int(input(&quot;English:&quot;))\ns2=int(input(&quot;Hindi:&quot;))\ns3=int(input(&quot;Marathi:&quot;))\ns4=int(input(&quot;Maths:&quot;))\ns5=int(input(&quot;Science:&quot;))\na=(s1+s2+s3+s4+s5)/5\nif a&gt;=90:\n    print(&quot;Distinction&quot;)\nelif a&gt;=75 and a&lt;90:\n    print(&quot;First class&quot;)\nelif a&gt;=45 and a&lt;75:\n    print(&quot;Second class&quot;)\nelif a&gt;=35 and a&lt;45:\n    print(&quot;Third class&quot;)\nelse:\n    print(&quot;Failed&quot;)\n</code></pre>\n<p>Output</p>\n<pre><code>English:70\nHindi:80\nMarathi:90\nMaths:80\nScience:70\nFirst class\n</code></pre>\n<h2>10) WAP to calculate area of circle and rectangle using method overriding.</h2>\n<pre><code class=\"language-python\">class Rec:\n    def area(self):\n        self. l=4\n        self. b=2\n        print(&quot;Area of rectangle=&quot;,self.l*self.b)\nclass Cir:\n    def area(self):\n        self. r=3.5\n        print(&quot;Area of circle=&quot;,3.14*self.r*self.r)\nr=Rec()\nr. area()\nc=Cir()\nc. area()\n</code></pre>\n<p>Output</p>\n<pre><code>Area of rectangle= 8\nArea of circle= 38.465\n</code></pre>\n<h2>11) Check entered password is correct or not using user defined exception.</h2>\n<pre><code class=\"language-python\">class WrongPasswordException(Exception):\n  pass\np=input(&quot;Enter password:&quot;)\ntry:\n  if p!='abc12':\n    raise WrongPasswordException\nexcept WrongPasswordException:\n  print(&quot;Incorrect password!&quot;)\nelse:\n  print(&quot;Correct password!&quot;)\n</code></pre>\n<p>Output</p>\n<pre><code>Enter password:abc12\nCorrect password!\n</code></pre>\n<h2>12) Create list and perform following operations.</h2>\n<ol>\n<li>print elements using for loop</li>\n<li>del elements 3,4</li>\n<li>del 4 and add ‘o’,‘n’ ‘a’</li>\n<li>acces element ‘d’ from orignal list</li>\n<li>find len of list</li>\n</ol>\n<h3>1.print elements using for loop</h3>\n<pre><code class=\"language-python=\">li = ['a','n','a','c',['o','n','d'],'a']\nfor i in li:\n    print(i)\n</code></pre>\n<p>Output</p>\n<pre><code>a\nn\na\nc\n['o', 'n', 'd']\na\n</code></pre>\n<h3>2. del elements 3,4</h3>\n<h3>3. del 4 and add ‘o’,‘n’ ‘a’</h3>\n<h3>4. acces element ‘d’ from orignal list</h3>\n<h3>5. find len of list</h3>\n<pre><code class=\"language-python=\">li = ['a','n','a','c',['o','n','d'],'a']\nprint(&quot;The length of list is: &quot;, len(li))\n</code></pre>\n<p>Output\n<code>The length of list is:  6</code></p>\n<h2>13) WAP using numpy to generate six random integers between 20-30.</h2>\n<pre><code class=\"language-python=\">import numpy as n\na=n.random.randint(20,30,6)\nprint(a)\n</code></pre>\n<p>Output\n<code>[24 27 29 25 22 22]</code></p>\n<h2>14) WAP to concatenate dictionaries to create new one.</h2>\n<pre><code class=\"language-python\">d1={1:10}\nd2={2:20}\nd3={3:30}\nd4={}\nfor i in d1, d2, d3:\n    d4. update(i)\nprint(d4)\n</code></pre>\n<p>Output\n<code>{1: 10, 2: 20, 3: 30}</code></p>\n<h2>15) WAP to print unique values of following dict.</h2>\n<pre><code class=\"language-python\">d={1:10, 2:20, 3:30, 4:30}\nd={1:10, 2:20, 3:30, 4:30}\nu=set()\nfor i in d:\n    for val in d.values() :\n        u. add(val)\nprint(u)\n</code></pre>\n<p>Output\n<code>{10, 20, 30}</code></p>\n<h2>16) Create 3x4 matrix filled with 10-21.</h2>\n<pre><code class=\"language-python\">import numpy as n\na=n.arange(10,22).reshape((3,4))\nprint(a)\n</code></pre>\n<p>Output</p>\n<pre><code>[[10 11 12 13]\n [14 15 16 17]\n [18 19 20 21]]\n</code></pre>\n<h2>17) WAP to create class Emp having data members name, salary use constructor to accept values and display information.</h2>\n<pre><code class=\"language-python\">class Emp:\n    def __init__(self, name, salary):\n        self. name=name\n        self. salary=salary\n    def disp(self):\n        print(&quot;Name:&quot;,self.name)\n        print(&quot;Salary:&quot;,self.salary)\ne=Emp(&quot;Abc&quot;,10000)\ne. disp()\n</code></pre>\n<p>Output</p>\n<pre><code>Name: Abc\nSalary: 10000\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Practical S6&description=Python%20practical%20question%20bank%20solved%201)%20WAP%20to%20create%203x3%20matrix%20with%201%20at%20the%20border%20and%20zero%20inside.%20import%20numpy%20as%20n%20a=n.ones((3,%203))%20a[1:-1,1:-1]=0%20print(a)%20%20Output%20[[1.%201.%201.]%20%20[1.%200.%201.]%20%20[1.%201.%201.]]%20%202)%20WAP%20to%20calculate%20area%20of%20circle%20and%20area%20of%20rectangle%20using%20abstract&right_meta=AK%23Notes&background_color=%23bd8bf2"
    },
    {
      "id": "https://anzenkodo.github.io/notes/programming/android/final.html",
      "url": "https://anzenkodo.github.io/notes/programming/android/final.html",
      "title": "Final",
      "content_html": "<h1>1. Attempt any FIVE of the following: 10</h1>\n<h2>a) List any four features of Android operating system.</h2>\n<ul>\n<li>Open Source</li>\n<li>Beautiul UI</li>\n<li>Connectivity</li>\n<li>Storage</li>\n<li>Multi-Touch</li>\n<li>Multi-Tasking</li>\n<li>Multi-Language</li>\n<li>Resizable widgets</li>\n<li>Messaging</li>\n<li>Media Support</li>\n<li>Web Browser</li>\n</ul>\n<h2>b) Define Dalvik Virtual Machine (DVM).</h2>\n<table>\n<thead>\n<tr>\n<th>JVM</th>\n<th>DVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JVM supports multiple OS</td>\n<td>DVM supports only Android Operating system.</td>\n</tr>\n<tr>\n<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>\n<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>\n</tr>\n<tr>\n<td>It is based on stack based virtual machine architecture.</td>\n<td>It is based on register based virtual machine architecture.</td>\n</tr>\n<tr>\n<td>JVM runs on more memory</td>\n<td>DVM runs on less memory.</td>\n</tr>\n<tr>\n<td>The executable format of JVM is JAR.</td>\n<td>The executable format of DVM is APK.</td>\n</tr>\n<tr>\n<td>JVM has different constant pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n<tr>\n<td>It runs <code>.class</code> byte code directly.</td>\n<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>\n</tr>\n</tbody>\n</table>\n<h2>c) List any four folders from directory structure of Android project and elaborate in one line.</h2>\n<h3>Manifests Folder</h3>\n<ul>\n<li>Manifests folder contains AndroidManifest.xml for creating our android application.</li>\n<li>This file contains information about our application such as the Android version, metadata, states package for Kotlin file, and other application components.</li>\n<li>It acts as an intermediator between android OS and our application.</li>\n</ul>\n<h3>Java folder</h3>\n<ul>\n<li>The Java folder contains all the java and Kotlin source code (.java) files that we create during the app development, including other Test files.</li>\n</ul>\n<h3>Resource (res) folder</h3>\n<ul>\n<li>The resource folder is the most important folder because it contains all the non-code sources like images, XML layouts, and UI strings for our android application.</li>\n</ul>\n<h3>res/drawable folder</h3>\n<ul>\n<li>It contains the different types of images used for the development of the application.</li>\n</ul>\n<h2>d) List any four attributes of check box.</h2>\n<ul>\n<li>text - This is the Text to display.</li>\n<li>id - This supplies an identifier name for this view.</li>\n<li>visibility - This controls the initial visibility of the view.</li>\n<li>editable - If set, specifies that this TextView has an input method.</li>\n</ul>\n<h2>e) Draw diagram of activity life cycle.</h2>\n<pre><code>                             ┌┬────────┬┐\n                             ││Activity││\n                             ││launched││\n                             └┴────┬───┴┘\n                                   │\n                              ┌────▼─────┐\n         ┌────────────────────►onCreate()│\n         │                    └────┬─────┘\n         │                         │\n         │                    ┌────▼────┐                    ┌───────────┐\n         │                    │onStart()◄────────────────────┤onRestart()│\n         │                    └────┬────┘                    └───────▲───┘\n         │                         │                                 │\nUser navigates                ┌────▼─────┐                           │\nto the activity               │onResume()◄───────────────┐           │\n         │                    └────┬─────┘               │           │\n         │                         │                     │           │\n  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │\n  ││App process││            ││Activity││                │           │\n  ││killed     ││            ││Running ││                │           │\n  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │\n         │                         │                     │           │\n         │                         ▼                     │           │\nApps with higher priority   Another activity comes   User returns    │\nneed memory                 into the foreground      to the activity │\n         │                         │                     │           │\n         │                         │                     │           │\n         │                    ┌────▼────┐                │           │\n         │                    │onPause()├────────────────┘           │\n         │                    └────┬────┘                            │\n         │                         │                                 │\n         │                         │                                 │\n         │                  The activity is                          │\n         │                  no longer visible                        │\n         │                         │                        User navigates\n         │                         │                        to the activity\n         │                    ┌────▼───┐                             │\n         └────────────────────┤onStop()├─────────────────────────────┘\n                              └────┬───┘\n                                   │\n                                   │\n                            The activity is finishing or\n                            being destroyed by the system\n                                   │\n                                   │\n                              ┌────▼──────┐\n                              │onDestroy()│\n                              └────┬──────┘\n                                   │\n                             ┌┬────▼────┬┐\n                             ││Activity ││\n                             ││Shut Down││\n                             └┴─────────┴┘\n</code></pre>\n<h2>f) State syntax to display built in zoom control.</h2>\n<p>In Android, Zoom Control is a class that has some set of methods that are used to control the zoom functionality.</p>\n<pre><code class=\"language-java\">ZoomControl zoomControls = (ZoomControls) findViewById(R.id.simpleZoomControl);\n</code></pre>\n<h2>g) Name two classes used to play audio and video in Android.</h2>\n<ul>\n<li>The following classes are used to play sound and video in the Android framework:\n<ul>\n<li>MediaPlayer - This class is the primary API for playing sound and video.</li>\n<li>AudioManager - This class manages audio sources and audio output on a device.</li>\n</ul>\n</li>\n</ul>\n<h1>2. Attempt any THREE of the following: 12</h1>\n<h2>a) Describe Android architecture with diagram.</h2>\n<ul>\n<li>Android architecture contains different number of components to support any android device needs. Android software contains an open-source Linux Kernel having collection of number of C/C++ libraries which are exposed through an application framework services.</li>\n<li>The main components of android architecture are following:</li>\n</ul>\n<ol>\n<li><strong>Applications:</strong> Applications is the top layer of android architecture. The pre-installed applications like home, contacts, camera, etc and third party applications will be installed on this layer only.</li>\n<li><strong>Application framework:</strong> Application Framework provides several important classes which are used to create an Android application.</li>\n<li><strong>Application runtime:</strong> Android Runtime environment contains components like core libraries and the Dalvik virtual machine(DVM).</li>\n<li><strong>Platform libraries:</strong> The Platform Libraries includes various C/C++ core libraries and Java based libraries such as Media, Graphics, OpenGL etc. to provide a support for android development.</li>\n<li><strong>Linux Kernel:</strong> The linux kernel manages all the available drivers such as display drivers, camera drivers, audio drivers, etc. which are required during the runtime.</li>\n</ol>\n<h2>b) Differentiate between DVM and JVM</h2>\n<table>\n<thead>\n<tr>\n<th>JVM</th>\n<th>DVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JVM supports multiple OS</td>\n<td>DVM supports only Android Operating system.</td>\n</tr>\n<tr>\n<td>JVM forms separate classes in separate <code>.class</code> byte code files.</td>\n<td>DVM forms multiple class in <code>.dex</code> byte code file.</td>\n</tr>\n<tr>\n<td>It is based on stack based virtual machine architecture.</td>\n<td>It is based on register based virtual machine architecture.</td>\n</tr>\n<tr>\n<td>JVM runs on more memory</td>\n<td>DVM runs on less memory.</td>\n</tr>\n<tr>\n<td>The executable format of JVM is JAR.</td>\n<td>The executable format of DVM is APK.</td>\n</tr>\n<tr>\n<td>JVM has different constant pools.</td>\n<td>DVM has common constant pool.</td>\n</tr>\n<tr>\n<td>It runs <code>.class</code> byte code directly.</td>\n<td>The <code>.class</code> byte codes are optimize to .odex format before executing in DVM.</td>\n</tr>\n</tbody>\n</table>\n<h2>c) List and elaborate steps to deploy in Android application on Google play store.</h2>\n<ul>\n<li>Step 1 - First generate signed apk of your Android App to publish it on Play Store.</li>\n<li>Step 2 - Sign up for Google Play Console to publish and manage your Android App.</li>\n<li>Step 3 - Now click on Create Application.</li>\n<li>Step 4 - Now fill store listing details of your App which include Title, Short and Full description.</li>\n<li>Step 5 - Now Click on ready on publish along with save draft and click on Manage release.</li>\n<li>Step 6 - After Manage production click on edit release.</li>\n<li>Step 7 - Now click on review.</li>\n<li>Step 8 - After review click on Start Rollout to production.</li>\n</ul>\n<h2>d) Describe with example, how to create a simple database in SQLite (Assume suitable data).</h2>\n<ul>\n<li>SQLite is a opensource SQL database that stores data to a text file on a device. Android comes in with built in SQLite database implementation.</li>\n<li>SQLite supports all the relational database features.</li>\n</ul>\n<pre><code class=\"language-java\">SQLiteDatabase mydatabase = openOrCreateDatabase(&quot;your database name&quot;,MODE_PRIVATE,null);\n</code></pre>\n<h1>3. Attempt any THREE of the following: 12</h1>\n<h2>a) Write down the steps to install and configure Android studio.</h2>\n<ul>\n<li>Head over to <a href=\"https://developer.android.com/studio\">https://developer.android.com/studio</a> to get the Android Studio executable or zip file.</li>\n<li>Click on the Download Android Studio Button.</li>\n<li>After the downloading has finished, open the file from downloads and run it. It will prompt the following dialog box.</li>\n<li>Once “Finish” is clicked, choose the ‘Don’t import Settings option’.</li>\n<li>This will start the Android Studio.</li>\n<li>After it has found the SDK components, it will redirect to the Welcome dialog box.</li>\n<li>Now it is time to download the SDK components.</li>\n<li>Click on Start a new Android Studio project to build a new app.</li>\n</ul>\n<h2>b) State syntax to create Text View and Image button with any two attributes of each.</h2>\n<h3>TextView</h3>\n<pre><code class=\"language-xml\">&lt;TextView\n    android:id=&quot;@+id/student_name&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:text=&quot;Name:&quot; /&gt;\n</code></pre>\n<ul>\n<li>text -  Sets text of the Textview</li>\n<li>id - Gives a unique ID to the Textview</li>\n</ul>\n<h3>ImageButton</h3>\n<pre><code class=\"language-xml\">&lt;ImageButton\n  android:id=&quot;@+id/imageButton&quot;\n  android:src=&quot;@drawable/button&quot;\n  android:layout_height=&quot;wrap_content&quot;\n  android:layout_width=&quot;wrap_content&quot;/&gt;\n</code></pre>\n<ul>\n<li>background - This is a drawable to use as the background.</li>\n<li>id - Gives a unique ID to the Textview</li>\n</ul>\n<h2>c) Describe Android service life cycle along with diagram.</h2>\n<ul>\n<li>A service is an application component which runs withour direst interaction with the user in the background.</li>\n<li>Services are used for repetitive and potentially long running operations:\n<ul>\n<li>Internet downloads</li>\n<li>Checking for new data</li>\n<li>Data processing</li>\n<li>Updating content</li>\n<li>Providers and the like</li>\n</ul>\n</li>\n<li>They typically run in the background to perform long-running operations or work for remote processes.</li>\n</ul>\n<pre><code>                             ┌┬────────┬┐\n                             ││Activity││\n                             ││launched││\n                             └┴────┬───┴┘\n                                   │\n                              ┌────▼─────┐\n         ┌────────────────────►onCreate()│\n         │                    └────┬─────┘\n         │                         │\n         │                    ┌────▼────┐                    ┌───────────┐\n         │                    │onStart()◄────────────────────┤onRestart()│\n         │                    └────┬────┘                    └───────▲───┘\n         │                         │                                 │\nUser navigates                ┌────▼─────┐                           │\nto the activity               │onResume()◄───────────────┐           │\n         │                    └────┬─────┘               │           │\n         │                         │                     │           │\n  ┌┬─────┴─────┬┐            ┌┬────┴───┬┐                │           │\n  ││App process││            ││Activity││                │           │\n  ││killed     ││            ││Running ││                │           │\n  └┴─────▲─────┴┘            └┴────┬───┴┘                │           │\n         │                         │                     │           │\n         │                         ▼                     │           │\nApps with higher priority   Another activity comes   User returns    │\nneed memory                 into the foreground      to the activity │\n         │                         │                     │           │\n         │                         │                     │           │\n         │                    ┌────▼────┐                │           │\n         │                    │onPause()├────────────────┘           │\n         │                    └────┬────┘                            │\n         │                         │                                 │\n         │                         │                                 │\n         │                  The activity is                          │\n         │                  no longer visible                        │\n         │                         │                        User navigates\n         │                         │                        to the activity\n         │                    ┌────▼───┐                             │\n         └────────────────────┤onStop()├─────────────────────────────┘\n                              └────┬───┘\n                                   │\n                                   │\n                            The activity is finishing or\n                            being destroyed by the system\n                                   │\n                                   │\n                              ┌────▼──────┐\n                              │onDestroy()│\n                              └────┬──────┘\n                                   │\n                             ┌┬────▼────┬┐\n                             ││Activity ││\n                             ││Shut Down││\n                             └┴─────────┴┘\n</code></pre>\n<h2>d) State and elaborate the syntax of required class and methods for Geocoding.</h2>\n<ul>\n<li>A class for handling geocoding and reverse geocoding.</li>\n<li>Geocoding is the process of transforming a street address or other description of a location into a (latitude, longitude) coordinate.</li>\n</ul>\n<pre><code class=\"language-java\">public final class Geocoder\nextends Object\n</code></pre>\n<h1>4. Attempt any THREE of the following: 12</h1>\n<h2>a) Explain with example, code to create GUI using absolute layout (Assume suitable data).</h2>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;AbsoluteLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    android:paddingLeft=&quot;16dp&quot;\n    android:paddingTop=&quot;16dp&quot;\n    android:paddingRight=&quot;16dp&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n    &lt;TextView\n        android:id=&quot;@+id/student_name&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_x=&quot;125dp&quot;\n        android:layout_y=&quot;280dp&quot;\n        android:text=&quot;Name:&quot;\n        android:textColor=&quot;#86AD33&quot;\n        android:textSize=&quot;20dp&quot;\n        android:textStyle=&quot;bold&quot; /&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_x=&quot;125dp&quot;\n        android:layout_y=&quot;304dp&quot;\n        android:text=&quot;Age:&quot;\n        android:textColor=&quot;#86AD33&quot;\n        android:textSize=&quot;20dp&quot;\n        android:textStyle=&quot;bold&quot; /&gt;\n    &lt;TextView\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:layout_x=&quot;125dp&quot;\n        android:layout_y=&quot;328dp&quot;\n        android:text=&quot;Mobile Number:&quot;\n        android:textColor=&quot;#86AD33&quot;\n        android:textSize=&quot;20dp&quot;\n        android:textStyle=&quot;bold&quot; /&gt;\n&lt;/AbsoluteLayout&gt;\n</code></pre>\n<h2>b) Write a program to demonstrate Date and Time picker.</h2>\n<h3>Date Picker</h3>\n<ul>\n<li>Android Date Picker allows you to select the date consisting of day, month and\nyear in your custom user interface.</li>\n<li>Methods of DatePicker:\n<ul>\n<li><strong>getDayOfMonth()</strong> - This method gets the selected day of month.</li>\n<li><strong>getMonth()</strong> - This method gets the selected month.</li>\n<li><strong>getYear()</strong> - This method gets the selected year.</li>\n<li><strong>getFirstDayOfWeek()</strong> - This method returns first day of the week.</li>\n<li><strong>getCalendarView()</strong> - This method returns calender View.</li>\n</ul>\n</li>\n</ul>\n<h3>TimePicker</h3>\n<ul>\n<li>Android Time Picker allows us to select the time of day in either 24h or AM/PM\nmode.</li>\n<li>The time consists of hours, minutes and clock format.</li>\n<li>Methods of TimePicker</li>\n</ul>\n<ol>\n<li><strong>setCurrentHour()</strong> - This method sets the current hour.</li>\n<li>setCurrentMinute() - This method sets the current minute.</li>\n<li><strong>is24HoursView()</strong> - This method returns true if this 24 hour view else\nfalse.</li>\n<li><strong>isEnabled()</strong> - This method returns the enabled status for this view.</li>\n</ol>\n<h2>c) Describe multimedia framework of Android with diagram.</h2>\n<figure data-type=\"image\"><img src=\"https://source.android.com/static/docs/core/media/images/ape_media_buffer_alloc_n.png\" alt=\"Multimedia framework of Android diagram\" loading=\"lazy\" decoding=\"async\"></figure>\n<h2>d) Discuss developer console with at least four features.</h2>\n<ul>\n<li>Multiple User Accounts</li>\n<li>Store Listing Details</li>\n<li>Upload and Instantly Publish</li>\n<li>Alpha and Beta Testing</li>\n<li>Multiple APK Support</li>\n<li>Selling and Pricing Your Products</li>\n<li>In-app Products</li>\n<li>Distribution Controls</li>\n<li>User Reviews and Crash Reports</li>\n<li>App Statistics</li>\n</ul>\n<h2>e) Write a program to demonstrate declaring and using permissions with any relevant example.</h2>\n<p>AndroidManifest.xml</p>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n    &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n            package=&quot;org.geeksforgeeks.requestPermission&quot;&gt;\n\n        &lt;!--Declaring the required permissions--&gt;\n        &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;\n        &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;\n        &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;\n\n        &lt;application\n            android:allowBackup=&quot;true&quot;\n            android:icon=&quot;@mipmap/ic_launcher&quot;\n            android:label=&quot;@string/app_name&quot;\n            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;\n            android:supportsRtl=&quot;true&quot;\n            android:theme=&quot;@style/AppTheme&quot;&gt;\n\n            &lt;activity\n                android:name=&quot;.MainActivity&quot;&gt;\n\n                &lt;intent-filter&gt;\n                    &lt;action\n                        android:name=&quot;android.intent.action.MAIN&quot; /&gt;\n\n                    &lt;category\n                        android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;\n                &lt;/intent-filter&gt;\n\n            &lt;/activity&gt;\n        &lt;/application&gt;\n\n&lt;/manifest&gt;\n</code></pre>\n<p>activity_main.xml</p>\n<pre><code class=\"language-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;\n    xmlns:tools=&quot;http://schemas.android.com/tools&quot;\n    android:layout_width=&quot;match_parent&quot;\n    android:layout_height=&quot;match_parent&quot;\n    tools:context=&quot;.MainActivity&quot;&gt;\n\n    &lt;!-- To show toolbar--&gt;\n    &lt;android.support.v7.widget.Toolbar\n        android:id=&quot;@+id/toolbar&quot;\n        android:layout_width=&quot;match_parent&quot;\n        android:background=&quot;@color/colorPrimary&quot;\n        app:title=&quot;GFG | Permission Example&quot;\n        app:titleTextColor=&quot;@android:color/white&quot;\n        android:layout_height=&quot;?android:attr/actionBarSize&quot;/&gt;\n\n    &lt;!--Button to request storage permission--&gt;\n    &lt;Button\n        android:id=&quot;@+id/storage&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Storage&quot;\n        android:layout_marginTop=&quot;16dp&quot;\n        android:padding=&quot;8dp&quot;\n        android:layout_below=&quot;@id/toolbar&quot;\n        android:layout_centerHorizontal=&quot;true&quot;/&gt;\n\n    &lt;!--Button to request camera permission--&gt;\n    &lt;Button\n        android:id=&quot;@+id/camera&quot;\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;Camera&quot;\n        android:layout_marginTop=&quot;16dp&quot;\n        android:padding=&quot;8dp&quot;\n        android:layout_below=&quot;@id/storage&quot;\n        android:layout_centerHorizontal=&quot;true&quot;/&gt;\n\n&lt;/RelativeLayout&gt;\n</code></pre>\n<p>MainActivity.java</p>\n<pre><code class=\"language-java\">import android.Manifest;\nimport android.content.pm.PackageManager;\nimport android.support.annotation.NonNull;\nimport android.support.v4.app.ActivityCompat;\nimport android.support.v4.content.ContextCompat;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.Toast;\n\npublic class MainActivity extends AppCompatActivity {\n\n    // Defining Buttons\n    private Button storage, camera;\n\n    // Defining Permission codes.\n    // We can give any value\n    // but unique for each permission.\n    private static final int CAMERA_PERMISSION_CODE = 100;\n    private static final int STORAGE_PERMISSION_CODE = 101;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        storage = findViewById(R.id.storage);\n        camera = findViewById(R.id.camera);\n\n        // Set Buttons on Click Listeners\n        storage.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v)\n            {\n                checkPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE);\n            }\n        });\n\n        camera.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v)\n            {\n                checkPermission(Manifest.permission.CAMERA, CAMERA_PERMISSION_CODE);\n            }\n        });\n    }\n\n    // Function to check and request permission.\n    public void checkPermission(String permission, int requestCode)\n    {\n        if (ContextCompat.checkSelfPermission(MainActivity.this, permission) == PackageManager.PERMISSION_DENIED) {\n\n            // Requesting the permission\n            ActivityCompat.requestPermissions(MainActivity.this, new String[] { permission }, requestCode);\n        }\n        else {\n            Toast.makeText(MainActivity.this, &quot;Permission already granted&quot;, Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    // This function is called when the user accepts or decline the permission.\n    // Request Code is used to check which permission called this function.\n    // This request code is provided when the user is prompt for permission.\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode,\n                                        @NonNull String[] permissions,\n                                        @NonNull int[] grantResults)\n    {\n        super.onRequestPermissionsResult(requestCode,\n                                        permissions,\n                                        grantResults);\n\n        if (requestCode == CAMERA_PERMISSION_CODE) {\n            if (grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                Toast.makeText(MainActivity.this, &quot;Camera Permission Granted&quot;, Toast.LENGTH_SHORT) .show();\n            }\n            else {\n                Toast.makeText(MainActivity.this, &quot;Camera Permission Denied&quot;, Toast.LENGTH_SHORT) .show();\n            }\n        }\n        else if (requestCode == STORAGE_PERMISSION_CODE) {\n            if (grantResults.length &gt; 0\n                &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                Toast.makeText(MainActivity.this, &quot;Storage Permission Granted&quot;, Toast.LENGTH_SHORT).show();\n            } else {\n                Toast.makeText(MainActivity.this, &quot;Storage Permission Denied&quot;, Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n}\n</code></pre>",
      "date_published": "2022-12-24T12:48:13.972Z",
      "banner_image": "https://ogsupa.com/api/v1?font_style=font-sans&title=Final&description=1.%20Attempt%20any%20FIVE%20of%20the%20following:%2010%20a)%20List%20any%20four%20features%20of%20Android%20operating%20system.%20%20Open%20Source%20Beautiul%20UI%20Connectivity%20Storage%20Multi-Touch%20Multi-Tasking%20Multi-Language%20Resizable%20widgets%20Messaging%20Media%20Support%20Web%20Browser%20%20b)%20Define%20Dalvik%20Virtual%20Machine%20(DVM).%20%20%20&right_meta=AK%23Notes&background_color=%23bd8bf2"
    }
  ]
}